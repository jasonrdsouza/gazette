{
    "articles": [
        {
            "content": [
                "<p>Your robot experience started simple. You typed a question into a chatbot\u2026 just to see. <em>Can it answer that question? I&#8217;d be impressed if it did.</em></p>\n<p>Your query was simple. A simple knowledge question that with a little effort using legacy tools like Google, you would have discovered yourself, but the robots made it trivial, and you thought <em>Hmmm\u2026 if it can do that\u2026 what else can it do?</em></p>\n<p>Later, you decided to ask the robots to build something for you. A simple tool, application, or script. You wrote a sentence, it wasn&#8217;t much, just your simple idea to get the robots dancing, and, wow, they danced. The moment was impressive. Using your two sentences, the robot built the thing. Completely, and when you ran the script, loaded the page, or ran the application, you were impressed.</p>\n<p><em>The robots\u2026 they did the thing.</em></p>\n<h2>Dance. Robots.</h2>\n<p>It wasn&#8217;t my first attempt to get the robots dancing; it was my third project. I wanted to replace the home page in my browser with something useful. I had the robots design a home page that runs locally. It displays weather for a handful of cities, stock prices for a selection of companies and funds, and loads a random image as a background. Every 60 seconds, the image and weather rotate.</p>\n<p>The prior paragraph is roughly what <a href=\"https://www.anthropic.com/claude-code\">Claude Code</a> built, and it did. After a little back and forth picking APIs to get free weather and stock information, I had a good-looking page that achieved my goals.</p>\n<p>I want to talk about what I didn&#8217;t specify:</p>\n<ul>\n<li>I didn&#8217;t tell it what typeface to use.</li>\n<li>I didn&#8217;t specify where to place any elements on the page.</li>\n<li>I didn&#8217;t specify what weather or stock details to include.</li>\n<li>I didn&#8217;t ask it to include forward/back/pause buttons for image rotation.</li>\n</ul>\n<p>In fact, the number of &#8220;decisions&#8221; the robot made to design the page wildly exceeded the number of requirements I specified. More honestly, I didn&#8217;t know what I wanted for this homepage when I started; I was gleefully getting the robots to dance for me.</p>\n<p>One of the common knee-jerk responses humans have about robots is, &#8220;The robots lie,&#8221; except the humans say &#8220;hallucinate&#8221; because that rolls off the tongue. Here&#8217;s the thing: the assumption most folks have is that hallucinations are bad. Incorrect, it&#8217;s the hallucinations that you catch that are obviously wrong that you dislike. When the robots hallucinate a helpful thing, you don&#8217;t complain. Your eyes widen a little, and you wonder, <em>How did it know?</em> When the robots hallucinate or make a mistake, you shake your finger in their virtual direction and complain that they don&#8217;t know how to read your mind.</p>\n<p>Here&#8217;s the actual thing. Robots:</p>\n<ul>\n<li>Make incorrect assumptions.</li>\n<li>Misinterpret clear direction.</li>\n<li>Claim they know when they don&#8217;t.</li>\n<li>Make mistakes.</li>\n<li>Lie.</li>\n</ul>\n<p>Who else does this all the time? Every single human. Like. Always.</p>\n<h2>The Prompt Progression</h2>\n<p>I&#8217;m using Claude Code almost exclusively for personal projects. If you are cutting and pasting code from your favorite chatbot into your favorite editor, you are doing it wrong. One terminal-like window (Loving <a href=\"https://ghostty.org\">Ghostty</a>) where you are jamming with your favorite robot, and they have direct access to your file system, allowing them to create and modify files, is the dream.</p>\n<p>To date, I&#8217;ve created over twenty projects, ranging from a simple Python script to look up populations in towns to a fully deployed Node application that tracks productivity. If you&#8217;ve made it this far in the piece and are about to leave because you think I&#8217;m about to nerd it up and you aren&#8217;t an engineer, please stay. I&#8217;m not going just to demonstrate that anyone can get the robots to dance; I&#8217;m going to explain that the habits you&#8217;ll learn with your robot dancing will make you a better communicator\u2026 and maybe a better leader.</p>\n<p>Four situations occurred with all these dancing robots, and each taught me a valuable communication lesson.</p>\n<h2>Situation 1: The robot misinterprets you</h2>\n<p>After the giddiness fades from your first robot dance, you stare at the artifact it created and discover that the robot didn&#8217;t quite hallucinate correctly. It built a feature unexpectedly. When you go back and look at your first prompt, you&#8217;ll discover the problem: you didn&#8217;t specify this aspect of the feature at all \u2014 the robot just guessed.</p>\n<p>The robots are pretty good at guessing. They&#8217;ve been trained on programming language documentation, code repositories, sites like Stack Overflow, API documentation, and best practices and style guides. This means when you ask the robots to build a home page and specify nothing about the layout (like I did), the robots guess. They look at the corpus of knowledge about homepages and infer, &#8220;Well, he doesn&#8217;t want to display a lot of information, so let&#8217;s tuck the widgets in the upper corners and center the important stuff at the bottom.&#8221;</p>\n<p>Which, in my case, was correct.</p>\n<p><a href=\"https://randsinrepose.com/wp-content/uploads/2025/07/rands-desktop.jpg\"><img alt=\"\" class=\"aligncenter wp-image-5194 size-full\" height=\"1084\" src=\"https://randsinrepose.com/wp-content/uploads/2025/07/rands-desktop.jpg\" width=\"1200\" /></a></p>\n<p>The more I used the initial artifact, the more I found assumptions I didn&#8217;t like. Typeface was wrong (Futura now). Stock prices didn&#8217;t show percent change\u2026 oh, and hey, wouldn&#8217;t it be cool if this page reminded me about birthdays and other important dates? Let&#8217;s do that!</p>\n<p>With each iteration of the project, I found that the more specific my request was, the better the robot performed in implementation.</p>\n<blockquote><p>Please add support for tracking important dates. I am fine editing the HTML to track these dates as I want to keep this homepage portable. Please list all of the critical dates in a calendar window. And if an important date is within 30 days or less, please gently alert me on the home page.</p></blockquote>\n<p>(Sidebar: Why am I so polite with the robots? I don&#8217;t know.)</p>\n<p>As I progressed through future projects, I learned to devote more time to thinking through the specifics of my ideas. The robots are good at guessing what I mean, but the less room I give them to guess, the less they need to dance.</p>\n<h2>Situation 2: The robot forgets</h2>\n<p>As we discussed in the prior article, current robots must work within a finite context window. It&#8217;s exactly what it sounds like: it&#8217;s all the current information regarding your task. The state of the project, your recent prompts, and the resulting context. If you&#8217;ve gone deep down the robot rabbit hole and spent hours on a project, you&#8217;ve seen the robot forget everything. Everything.</p>\n<p>Your session has grown beyond the robot&#8217;s ability to keep track. You&#8217;ve exceeded your context window. While your project is fine, your robot is not. In Claude Code, I discovered this situation while working on a now-abandoned productivity app. The robots and I? We were in the zone, and then suddenly the robot knew nothing. Processing my next prompt, the robot said, &#8220;Huh, what is the project? I should check it out.&#8221;</p>\n<p>You&#8217;ll experience the same situation if you start a fresh session on an existing project. The robot needs to teach itself. Now. You can let the robot search your files, or you can accelerate the process by asking it to document the project. Documentation is an LLM dream task \u2014 <em>Hey robot, look at this code and explain what it does.</em></p>\n<p>Like <strong>everything</strong> a robot generates, the burden is on you, the human, to confirm that what it generates is sound, but once that&#8217;s done, you&#8217;ve got context-generation superpowers. In my most recent project, a set of Python scripts that analyze Rands Social Reach, I have four documents:</p>\n<ul>\n<li>SYSTEM_ARCHITECTURE.md (Explains how the various Python scripts work together.)</li>\n<li>DEPENDENCIES.md (Explains how data files work in the system.)</li>\n<li>TESTING.md (Explains how to test the system.)</li>\n<li>TROUBLESHOOTING.md (Weird, I didn&#8217;t ask to create this. I wonder what it does? Oh cool, it captures common errors we encountered during development. Sweet. Thanks, robots.)</li>\n</ul>\n<p>While the original intent was to give the robots a jump start, as the project grew more complex, I&#8217;ve found myself glancing at these documents to refresh my understanding of what we&#8217;ve built.</p>\n<h2>Situation 3: The robot makes an error</h2>\n<p>While I am writing this piece, I have the robots merrily working on a different project. We just updated an HTML-based configuration tool. I just asked to add additional fields, explaining what data to track and the relationship between the fields.</p>\n<p>The robots merrily completed the fix. I loaded the page, and it was blank.</p>\n<p>The robots make errors. I&#8217;d love to explain why, but after many weeks of productive work, I haven&#8217;t found any obvious pattern to why they occasionally write bad HTML or forget to do part of what I asked. You can freak out about this if you want, but it&#8217;s somewhat comforting to me because\u2026 It&#8217;s just like working with humans.</p>\n<p>During a particularly heinous session where the robot errors were numerous, I threw up my hands and said, &#8220;Hey, write a test script that we run after every change. Ok?&#8221;</p>\n<p>And it did.</p>\n<p>Fast forward to two hours later. I&#8217;d forgotten entirely about pre-change test runs when I glanced at the robot working on the most recent change and read, &#8220;Running test suite. Ok. I found three errors. Fixing them.&#8221;</p>\n<p>Oh.</p>\n<p>Like <strong>everything</strong> a robot generates, the burden is on you, the human, to confirm that what it generates is sound, but once that is done, one of your least favorite tasks, test generation, has been jump-started.</p>\n<h2>Situation 4: The project that collapses on itself</h2>\n<p>Most of my robot projects started with a random idea and a poorly formed initial prompt. Most of these efforts were one-and-done situations. After being briefly impressed by the robots, I realized I didn&#8217;t really need this project. I just wanted to see the robot dance.</p>\n<p>Some projects continued. The idea was intriguing. The problem I was solving was valuable. We continued to dance for hours. I hit limits and blew through context windows and, eventually, the robot got confused. I asked them for a significant change, and they happily started working, but I watched them traverse the project, and they were lost. Updating functions or refactoring random parts of the code unnecessarily.</p>\n<p><em>Stop.</em></p>\n<p>Your instinct might be to blame the robots. They do hallucinate, after all.</p>\n<p>Blame yourself.</p>\n<p>If you pick one of my larger projects and review my series of prompts, here&#8217;s the prompt narrative:</p>\n<ul>\n<li>Build this feature.</li>\n<li>Add this other feature.</li>\n<li>Make these changes to both.</li>\n<li>Nuke the second feature.</li>\n<li>Add all of this new functionality to the first feature.</li>\n<li>Wait, we need to make this a node app. Do that now.</li>\n<li>And so on.</li>\n</ul>\n<p>Spaghetti code is what we call code that random people have clearly slapped together over the years. Spaghetti thinking is how I build these unstructured projects. It&#8217;s just me and robot yolo&#8217;ing our way through my unstructured thinking.</p>\n<p>After placing the robot in this confusing state a few times, I revised my strategy. Rather than prototyping with code, I prototype in a spec. I explain to the robot what I want to build as a markdown file. This spec is the only thing we create. The process is no different than the first twenty prompts, except that the output is easy to read and easy to change markdown. The robots do a dutiful job of capturing my thoughts and their implications. No code. No APIs. Just writing.</p>\n<p>And when I like what I&#8217;m reading, I ask the robot to build it.</p>\n<p>This is the third time I&#8217;m writing this, but it&#8217;s the most important part of this piece. Like <strong>everything</strong> a robot generates, the burden is on you, the human, to confirm that what it generates is sound.</p>\n<h2>I Lied</h2>\n<p>Robots don&#8217;t lie. Lying requires intent to deceive, and when a robot provides you with plausible-sounding, but incorrect statements, it&#8217;s either following its programming or making an error. Or both. Humans lie. They boast, they are tragically optimistic, they exaggerate, they forget, I could go on for a long, long while. It&#8217;s a list of foibles that make them familiar\u2026 that makes them human.</p>\n<p>What do I do as a leader to work with these troublesome humans? Well, here&#8217;s a short, essential list:</p>\n<ul>\n<li>I speak clearly and specifically, so my intent is clear.</li>\n<li>I frame conversations with context so everyone understands my ideas.</li>\n<li>I understand errors are part of the process and work to build tools to prevent them.</li>\n<li>I debate and plan big ideas before I begin.</li>\n</ul>\n<p>As a writer, I am giddy about working with the robots. The better I write, the better they can interpret. As an engineer, I feel empowered \u2014 that weird Python syntax convention? Who cares? Let the robots worry about that pattern; you have strategic work to do. As a leader, I am surprised to find that improving my core skills in communication, setting expectations, and planning benefits both the robots and the humans.</p>\n<p>Learning how to get the robots to dance for you will make you a better leader of both robots and humans.</p>\n<p>Now go build stuff. It will give you joy. Would I lie to you?</p>"
            ],
            "link": "https://randsinrepose.com/archives/every-single-human-like-always/",
            "publishedAt": "2025-07-29",
            "source": "Rands in Repose",
            "summary": "Your robot experience started simple. You typed a question into a chatbot\u2026 just to see. Can it answer that question? I&#8217;d be impressed if it did. Your query was simple. A simple knowledge question that with a little effort using legacy tools like Google, you would have discovered yourself, but the robots made it trivial,&#8230; <a class=\"read-more\" href=\"https://randsinrepose.com/archives/every-single-human-like-always/\">More</a>",
            "title": "Every Single Human. Like. Always."
        },
        {
            "content": [],
            "link": "https://simonwillison.net/2025/Jul/29/space-invaders/#atom-entries",
            "publishedAt": "2025-07-29",
            "source": "Simon Willison",
            "summary": "<p>I wrote about the new <a href=\"https://simonwillison.net/2025/Jul/28/glm-45/\">GLM-4.5</a> model family yesterday - new open weight (MIT licensed) models from <a href=\"https://z.ai/\">Z.ai</a> in China which their benchmarks claim score highly in coding even against models such as Claude Sonnet 4.</p> <p>The models are pretty big - the smaller GLM-4.5 Air model is still 106 billion total parameters, which <a href=\"https://huggingface.co/zai-org/GLM-4.5-Air\">is 205.78GB</a> on Hugging Face.</p> <p>Ivan Fioravanti <a href=\"https://x.com/ivanfioravanti/status/1949911755028910557\">built</a> this <a href=\"https://huggingface.co/mlx-community/GLM-4.5-Air-3bit\">44GB 3bit quantized version for MLX</a>, specifically sized so people with 64GB machines could have a chance of running it. I tried it out... and it works <em>extremely well</em>.</p> <p>I fed it the following prompt:</p> <blockquote><p><code>Write an HTML and JavaScript page implementing space invaders</code></p></blockquote> <p>And it churned away for a while and produced <a href=\"https://tools.simonwillison.net/space-invaders-GLM-4.5-Air-3bit\">the following</a>:</p> <div style=\"margin-bottom: 0.4em;\"> <video controls=\"controls\" loop=\"loop\" poster=\"https://static.simonwillison.net/static/2025/space-invaders.jpg\" preload=\"none\" style=\"width: 100%; height: auto;\"> <source src=\"https://static.simonwillison.net/static/2025/space-invaders.mp4\" type=\"video/mp4\" /> </video> </div> <p>Clearly this isn't a particularly novel example, but I still think it's noteworthy that a model running on my 2.5 year old laptop (a 64GB MacBook Pro M2) is able to produce code like this - especially code that worked first time with no further edits needed.</p> <h4 id=\"how-i-ran-the-model\">How I ran the model</h4> <p>I had to run it",
            "title": "My 2.5 year old laptop can write Space Invaders in JavaScript now, using GLM-4.5 Air and MLX"
        }
    ],
    "lookbackDays": 1,
    "publishDate": "2025-07-29"
}
{
    "articles": [
        {
            "content": [
                "<div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9fbd19a7-d7e1-46be-8414-7b1130ab6a6c_1000x1093.jpeg\" target=\"_blank\"><div class=\"image2-inset\"><source type=\"image/webp\" /><img alt=\"\" class=\"sizing-normal\" height=\"1093\" src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9fbd19a7-d7e1-46be-8414-7b1130ab6a6c_1000x1093.jpeg\" width=\"1000\" /><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg class=\"lucide lucide-refresh-cw\" fill=\"none\" height=\"20\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewBox=\"0 0 24 24\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8\"></path><path d=\"M21 3v5h-5\"></path><path d=\"M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16\"></path><path d=\"M8 16H3v5\"></path></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg class=\"lucide lucide-maximize2\" fill=\"none\" height=\"20\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewBox=\"0 0 24 24\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><h6>Witnesses (1947), Dorothea Tanning</h6><p></p><p></p><p><strong>Hi Polly,</strong></p><p><strong>What advice do you have for a woman who constantly gets feedback that they&#8217;re too honest and blunt?</strong></p><p><strong>I never have bad intentions and always think I&#8217;m indulging in a bit of banter with people until I register their facial expressions and body language and realize I&#8217;ve said something wrong. Or, even worse, I hear l&#8230;</strong></p>\n      <p>\n          <a href=\"https://www.ask-polly.com/p/people-always-think-im-insulting\">\n              Read more\n          </a>\n      </p>"
            ],
            "link": "https://www.ask-polly.com/p/people-always-think-im-insulting",
            "publishedAt": "2025-03-04",
            "source": "Ask Polly",
            "summary": "<div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9fbd19a7-d7e1-46be-8414-7b1130ab6a6c_1000x1093.jpeg\" target=\"_blank\"><div class=\"image2-inset\"><source type=\"image/webp\" /><img alt=\"\" class=\"sizing-normal\" height=\"1093\" src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9fbd19a7-d7e1-46be-8414-7b1130ab6a6c_1000x1093.jpeg\" width=\"1000\" /><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg class=\"lucide lucide-refresh-cw\" fill=\"none\" height=\"20\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewBox=\"0 0 24 24\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8\"></path><path d=\"M21 3v5h-5\"></path><path d=\"M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16\"></path><path d=\"M8 16H3v5\"></path></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg class=\"lucide lucide-maximize2\" fill=\"none\" height=\"20\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewBox=\"0 0 24 24\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><h6>Witnesses (1947), Dorothea Tanning</h6><p></p><p></p><p><strong>Hi Polly,</strong></p><p><strong>What advice do you have for a woman who constantly gets feedback that they&#8217;re too honest and blunt?</strong></p><p><strong>I never have bad intentions and always think I&#8217;m indulging in a bit of banter with people until I register their facial expressions and body language and realize I&#8217;ve said something wrong. Or, even worse, I hear l&#8230;</strong></p> <p> <a href=\"https://www.ask-polly.com/p/people-always-think-im-insulting\"> Read more </a> </p>",
            "title": "'People Always Think I'm Insulting Them When I'm Just Having a Laugh!'"
        },
        {
            "content": [
                "<img alt=\"Two Americas, one bank branch, and $50,000 cash\" src=\"https://www.bitsaboutmoney.com/content/images/2025/03/dalle-two-americas-bank-branch.png\" /><p>In the sciences they call it the file drawer problem: studies that fail to achieve significance or reach the &quot;wrong&quot; conclusion end up hidden away, creating a distorted picture of reality.&#xa0;</p><p>And so here&apos;s me rescuing something from the file drawer of banking procedure: a tale of two Americas, one bank branch, and $50,000 in cash.</p><p>A style magazine published an account of a large cash withdrawal that didn&apos;t match my understanding of banking reality. I burned several thousand dollars and a year investigating. I now doubt that account less, because I understand the context better.</p><h2 id=\"suppose-you-ask-a-bank-to-withdraw-50000-in-cash\">Suppose you ask a bank to withdraw $50,000 in cash</h2><p>There exist <a href=\"https://www.fdic.gov/quarterly-banking-profile/fdic-quarterly#:~:text=4%2C517%20FDIC%2Dinsured%20commercial%20banks%20and%20savings%20institutions\">thousands</a> of banks in the United States, each one independently operated with their own procedures, work forces, and circumstances. They are, broadly, similarly constrained by regulation, industry practice, culture, and perception of the threat environment. There is no such thing as a perfectly typical bank, banker, or banking client. But if we were to ignore the messiness of the real world, for the purpose of making a larger point, here is what is <em>supposed</em> to happen when a customer comes in and asks to withdraw $50,000.</p><p>A bank doesn&#x2019;t expect its CEO or Head of Compliance to individually make decisions on every withdrawal. It has designed procedures to achieve the outcomes it (and its regulators, and other stakeholders) desire, and trained staff in how to implement those procedures. Those procedures happen to <em>very explicitly</em> contemplate this transaction.</p><p>The teller or personal banker, junior though they may be, is supposed to ascertain the identity of the customer, and ask themselves whether this is a typical transaction for this customer. Do they, perhaps, run a cash-heavy business which, every few weeks, takes out $50,000 to e.g. stock the ATM fleet they operate? If yes, either the staff knows that to be true personally, or this fact is noted on their account. (That note was written after the bank got <em>extremely familiar</em> with their cash management needs, <a href=\"https://www.bitsaboutmoney.com/archive/money-laundering-and-aml-compliance/\" rel=\"noreferrer\">for reasons</a>.)</p><p><em>Very few</em> customers routinely withdraw $50,000 in cash. We move to the next step on the flow chart. Here, the bank staff will begin to deploy some mix of truths, half-truths, and white lies.</p><p>One statement, which may be anywhere along that spectrum, is that the bank branch does not have $50,000 cash on hand. Across all bank branches in America, this is frequently actually, mathematically true. A true-<em>ish</em> variant of it is that the branch does actually have a bit more than $50,000 cash on hand. The branch needs it to service customers with routine cash needs, and the instant customer cannot be allowed to wipe out the bank&#x2019;s on-hand cash reserves, because that will cause them to disappoint dozens or hundreds of customers between now and the rebalancing shipment of cash they will swiftly order. And then there is a false variant, where at some branches this is factually as operationally straightforward as exchanging a $20 bill for two rolls of quarters, but where the lie is institutionally excusable to save this customer from themselves.</p><p>Many people who have never withdrawn $50,000 in cash do not have great reasons for suddenly wanting to withdraw $50,000 in cash. It is quite likely they are being scammed or otherwise victimized. The bank, in consideration of its legal and ethical duties to its customer, would prefer to not facilitate this, even unknowingly. Over the universe of all people with this request, the bank knows, in its soul of corporate personhood, that it has actual knowledge of what is likely happening here.</p><p>And so, the staff will likely say that the bank has a rule, procedure, or request that the customer call them a day or two in advance of making large cash withdrawals. This will &#x201c;allow us to get the cash together.&#x201d; Now, in point of fact, there is a number that the branch manager could call to ask for an extraordinary shipment of physical currency, but this is mostly intended as a speedbump. Scams and other forms of exploitation rely on isolating the victim and pressuring them into making poor choices. Mandating a cooling-off period causes some scams to effervesce like dew in the morning sun.</p><p>Perhaps, as happens in many non-routine requests in banking, the customer will call in third-party professionals. Perhaps the customer, annoyed that the $50,000 they need to consummate a real estate transaction isn&#x2019;t trivially on offer, might phone their real estate lawyer. This is <em>music to the bank&#x2019;s ears</em>. Not every voice on a telephone is actually a lawyer, and not every member of the bar upholds its strict standards of professionalism and moral uprightness, but lawyers are <em>so</em> much easier to work with than civilians. And, should the matter be reviewed later, the bank will <em>be able to document its reasonable reliance</em> on representations made by a lawyer.</p><p>Fraudsters have frequently targeted real estate transactions in recent years. Banks are acutely aware of this; it&#x2019;s covered extensively in their <a href=\"https://www.americanbanker.com/creditunions/news/new-year-new-fraud-risks#:~:text=%E2%80%9CAnother%20new%20wire,as%5D%20six%20figures.%E2%80%9D\">professional</a> <a href=\"https://www.realtor.com/news/trends/real-estate-wire-fraud-scam-stealing-money/\">journals</a> and in <a href=\"https://www.consumerfinance.gov/about-us/blog/mortgage-closing-scams-how-protect-yourself-and-your-closing-funds/\">circulars</a> from regulators. But banks, who have <em>extensive experience</em> with real estate deals, know that a few hiccups on closing are stressful for customers, but very rarely actually blow up transactions, certainly not like scams blow up bank customers.</p><p>The bank is unlikely to reach confidence, in this circumstance, in just a minute or two in the teller line. Many well-off people, with great relationships with their banks, with extensively paperworked transactions, will go through more than a half-hour of hoop jumping to get approval for anomalous transactions.</p><p>But suppose, for some reason, the calls do not happen and the extended due diligence is not performed. What is supposed to happen next? Well, typically at large money center banks (and here I cite both general industry knowledge and also <em>sources familiar with banking procedure</em>), the staff dealing directly with the customer will summon a second individual. Sometimes this is the branch manager, sometimes it is a peer. Sometimes the next action takes place verbally. Sometimes it happens in specifically built software which keeps an audit log of both staff signing off.</p><p>The bank invokes the Two Man Rule. (Yes, this has been renamed in many&#x2014;but not all&#x2014;formal documents recording procedural controls. Regulators have, generally, reviewed and approved those documents.)</p><p>If both individuals are satisfied that the anomalous transaction is not sufficiently hinky to refuse, it goes forward. This will <em>generally</em> require asking the customer about what they intend to do with $50,000 cash. Banks <em>very rarely</em> ask this question at $50 or $5,000.</p><p>Bankers, by law and custom, <em>holistically</em> review these situations. Elements considered include the account records, the experience of branch staff with this particular customer, and a host of context cues which the financial industry would prefer to dissimulate about.</p><p>If you are, for example, a lanky thirtysomething who waltzes into a branch in San Francisco and asks for a six figure wire to fund an investment, helpfully mentioning that you have the KYC/KYB information in a clear plastic folder, neither of the Two Men are likely to actually ask to read that folder. If you walk with a cane, if you speak with an accent, if you present as not really understanding the rituals you are engaged in, the bank and its staff will pay radically more attention to you, frequently not in ways you will enjoy.</p><p>Let us assume that a $50,000 withdrawal happens, through some pathway. It will have one more mechanical consequence. Very soon after the withdrawal, the bank will be obligated to file a Currency Transaction Report (CTR) with the Financial Crimes Enforcement Network (FinCEN), unless the customer has had a <a href=\"https://www.fincen.gov/resources/statutes-regulations/guidance/guidance-determining-eligibility-exemption-currency\">previously-approved status as someone who routinely needs to do this sort of thing</a>, which almost no customers have. The CTR is a <a href=\"https://www.bitsaboutmoney.com/archive/money-laundering-and-aml-compliance/\">write-once read-probably-never</a> document which mostly serves to get the customer&#x2019;s banking information into a <a href=\"https://www.dhs.gov/sites/default/files/2022-05/privacy-pia-cbp-tecs%20platform-april2022.pdf\">trivially searchable database</a> for law enforcement.</p><p>And then what happens to the $50,000? Whatever the customer wants, really. If they want to put it in a shoebox and give it to a courier, it is, at that point, no longer the bank&#x2019;s problem.</p><h2 id=\"style-magazines-sometimes-publish-hard-hitting-journalism\">Style magazines sometimes publish hard-hitting journalism</h2><p>In February 2024, the style publication The Cut published on its site, and concurrently in the print edition of New York Magazine, an <a href=\"https://www.thecut.com/article/amazon-scam-call-ftc-arrest-warrants.html\">article</a> titled &#x201c;The day I put $50,000 in a shoe box and handed it to a stranger I never thought I was the kind of person to fall for a scam.&#x201d; It was written, in the first person, by a financial advice columnist who previously wrote for the New York Times business section.</p><p>The Cut and New York Magazine are owned by Vox Media, a private equity firm with <a href=\"https://corp.voxmedia.com/\">material investments in advertising platforms</a> (&#x201c;We Create Premium Advertising Solutions&#x201d;, &#x201c;We Enable Media Companies To Build Modern Media Businesses&#x201d;). Vox also publishes an eponymous website, notable for popularizing the term-of-art &#x201c;<a href=\"https://www.vox.com/explainers\">explainer</a>&#x201d; and for publishing, about covid, <a href=\"https://media.kalzumeus.com/bam/shoebox/vox-covid-tweet-01312020.jpg\">analysis that aged more poorly</a> than perhaps anything in the history of the written word. (It subsequently <a href=\"https://x.com/voxdotcom/status/1242537366620966912?s=20\">unpublished</a> it.)</p><p>Many of Vox&#x2019;s publications are good at what they do. The shoebox piece successfully achieved virality and follow-on coverage by <a href=\"https://www.nytimes.com/2024/02/16/your-money/scam-new-york-magazine-amazon-ftc-cia.html\">several</a> <a href=\"https://nypost.com/2024/02/15/business/ny-magazines-financial-advice-columnist-lost-50k-to-scam/\">media</a> <a href=\"https://abcnews.go.com/WNN/video/financial-columnist-scammed-50k-107360765\">orgs</a>. A media critic could point to reasons why, such as the specificity and viscerality, the it-could-happen-to-anyone framing, and the complicated mix of schadenfreude, voyeurism, and self-protective reassurance which make so-called &#x201c;true crime&#x201d; explorations so explosively popular.</p><p>Vox Media sell ads with rate cards justified by the storied legacy of New York Magazine, which has won Pulitzers before, against articles of the caliber produced by The Cut. The print edition of the piece is immediately preceded by a fashion spread for &#x201c;TOM FORD Halter-neck Jumpsuit and Black Stamped Croc Bar Belt, <em>at tomford.com</em>&#x201d; A similar item, U0269-FAX1105, on the site bears the price tag $5,790, which is capitalism&#x2019;s surest signal as to who it thinks is reading a publication.</p><p>For a quick vibe check on editorial standards of any publication, by their fruits shall you know them: just read the headlines. I checked them the morning of <a href=\"https://www.youtube.com/watch?v=vfiiXq_bE1c\">a presentation on this investigation</a>, and they <a href=\"https://media.kalzumeus.com/bam/shoebox/the-cut-headlines-06082024.png\">were</a> &#x201c;The high stakes of the group family vacation&#x201d;, &#x201c;George Clooney didn&#x2019;t appreciate Biden criticizing his wife&#x201d;, &#x201c;The film exec distracted by her crushes at Cannes&#x201d;, and &#x201c;Madam Clairevoyant: Horoscopes for the week of June 9-15. Mars, planet of action, moves into steadfast Taurus. Time to knuckle down.&#x201d;</p><p>Time to knuckle down&#x2026; on hard-hitting journalism about banking procedures.</p><blockquote>When I reached the bank, I told the guard I needed to make a large cash withdrawal and she sent me upstairs. Michael [a member of the scamming team] was on speakerphone in my pocket. I asked the teller for $50,000. The woman behind the thick glass window raised her eyebrows, disappeared into a back room, came back with a large metal box of $100 bills, and counted them out with a machine. Then she pushed the stacks of bills through the slot along with a sheet of paper warning me against scams. I thanked her and left.&#xa0;\t</blockquote><p>As the piece went quite viral on Twitter, a number of people reached out to me. One specific question asked was &#x201c;Are high-value withdrawal rooms <em>a thing</em>?&#x201d;, which I answered, somewhat confusedly, &#x201c;I could believe that there is, somewhere among <a href=\"https://banks.data.fdic.gov/bankfind-suite/SOD/branchOffice\">76,000 bank branches</a> in the United States, <em>a room</em> designed to make $50,000 withdrawals. But no, the standard branch layout has no such room designed or designated.&#x201d;&#xa0;</p><p>If a customer needs privacy, the branch has several rooms with doors, behind which banking business is routinely conducted. Those rooms are not fortresses. The<em> branch</em> is not a fortress. It&apos;s primarily a sales office for financial services that happens to handle some cash.</p><p>Then, I read the article, with a particular attention to the paragraph quoted above. I felt that several elements of this paragraph were inconsistent with the standard practice of banking.</p><p>I have an immense regard for journalism, generally, but the institution has been duped before. Stephen Glass comes to mind. One of the earliest bits of hard evidence against him was that he <a href=\"https://web.archive.org/web/20150205161725/http://www.vanityfair.com/magazine/archive/1998/09/bissinger199809\">confabulated evocative details about the built reality of buildings he claimed to have visited</a>. The shoebox piece contained much evocative detail, including some details I felt were, unbeknownst to almost all readers, likely to be checkable&#x2026; and <a href=\"https://x.com/patio11/status/1760691132801949754\">unlikely</a> to have been checked.</p><p>Thus began an investigative journalism project, which ended up taking almost a year.</p><h2 id=\"reaching-out-to-vox-media\">Reaching out to Vox Media</h2><p>Having once worked for a Communications department, which very definitely does not endorse anything I say in this piece, I am aware of a social ritual of reporters and PR teams. You can send PR an email and ask them for a reply. By convention this is called <em>a comment</em> or <em>a statement</em> to pretend it is something vastly different in character than <em>an excerpt from an email</em>.</p><p>If one defects from this social ritual, many responsible professionals will conclude that one has something to hide. This is part of the reason why e.g. the largest banks in the world will swiftly answer questions asked by reporters working for, for example, a low-circulation weekly in Topeka, Kansas. This produces immense social utility, including by acting as an escalation pathway into the bank regarding, e.g., &#x201c;Does the bank have a comment on why it is foreclosing on Ms. Mildred, who has shown this reporter a carefully maintained collection of checks that appear, to this reporter, to have been deposited?&#x201d;</p><p>On February 22nd, 2024, I sent an email to Vox Media and asked for a comment. You don&#x2019;t need to be bitten by a radioactive spider to do this. By custom, PR departments publish contact details widely, in part to avoid hostile journalists construing a lack of contact information as a <em>refusal to comment</em>.</p><p>There is, however, a performance of class that is helpful in getting PR departments to take you seriously. Mentioning that you are an avid Factorio player might not counsel an immediate reply to one&#x2019;s questions. The following introduction is designed to compel one.</p><p><em>My name is Patrick McKenzie. I write a column titled Bits about Money, which frequently covers financial fraud and operational mechanics of banking infrastructure. I have previously appeared on Bloomberg and in the New York Times.</em></p><p><em>I read with interest the article about $50k in a shoebox, which was also published in the print edition of New York Magazine. I may reference it in future writing.</em></p><p>All claims in those paragraphs are true. Some people resent that one can assert authority simply because of implicit blessing of high-status institutions. I leave anyone to their aesthetic preferences, but will mention that this is a very important lesson for how halls of power in New York and Washington, D.C. work.&#xa0;</p><p>When the New York Times attempts to commission a piece from you, they will say apologetically that they can&#x2019;t pay that well for it, but almost nobody writes for the Times for the money. You are paid in a different coin. Flash it, John Wick style, at a PR department, and it immediately takes you seriously, or it is quickly brought to task by New York&#x2019;s hidden-in-plain-sight subculture of character assassins.</p><p>My email to the press contact asked a few questions and avoided <em>explicitly</em> broaching the question I was most curious about: Did the editorial process understand this piece to be an exercise in&#x2026; creative writing? This <em>felt unlikely</em>, but magazines publish a spectrum of artifacts. Some pieces are roman &#xe0; clefs, some are pastiches, some are based in a true story, and some are the more <em>traditional</em> understanding of journalism. On the text of it, the piece reads like it is reporting a true event, but it <em>is</em> in a style magazine and <em>does</em> run next to a piece titled Tweencore (&#x201c;What the 13-and-under set is shopping for.&#x201d;) and, you know, one may be forgiven some doubts.</p><p>A spokesperson for New York Magazine replied with a statement for publication which removed all doubt about how it perceived this story.</p><blockquote>The story was thoroughly fact-checked prior to publication, and as part of this process, we reviewed the writer&apos;s bank withdrawal, recordings of phone calls and text messages with their scammer, and their statement to the police.</blockquote><p>Since I had publicly expressed doubt that there was <em>any</em> fact checking process, I <a href=\"https://x.com/patio11/status/1760741027382743092\">corrected the record</a>.</p><p>Published statements or comments routinely occur in the context of a larger conversation. This is rarely mentioned, and I am promoting this subtext to text. There may have been any combination of on the record, on background, or off the record statements between myself and Vox Media. The world may never know.</p><p>But generally speaking, careful titration of how much information passes between PR and reporters, including restrictions (which are closer to handshake agreements than contracts) on what can be used where and when, enables a brisk favor-swapping economy. That economy has failed to function recently in the tech industry, as I <a href=\"https://www.complexsystemspodcast.com/episodes/reporting-tech-kelsey-piper/\">discussed previously with Kelsey Piper</a>. (Kelsey works in a different part of the Vocis machinae.)&#xa0;</p><p>When it does function, society gets the usual benefits of journalism, PR departments grumble a bit but play the game, the Bat Phone to mortgage servicing gets answered on the first ring, and advertisers sell their wares to willing customers to pay for it all.</p><h2 id=\"sources-of-doubt\">Sources of doubt\t\t</h2><p>So Vox Media&#x2019;s statement through a spokesperson effectively definitively resolved my doubts about editorial processes&#x2026; but this did not resolve my doubts about banking procedure.&#xa0;</p><p>Fraud investigators, law enforcement, and journalists alike frequently start with intuition then backfill with objective facts. My intuitions were screaming.</p><p>The article does not actually name the bank or the bank branch, despite a scene unambiguously set within it, despite the centrality of its failure to the narrative, despite repeated identification of firms that were <em>utterly uninvolved</em>. The transaction does not proceed as what a bank <em>expects</em> to happen if someone asks for the entirety of their savings account in cash. Physical details provided for flavor purposes are <em>very rare </em>in the universe you live in.</p><p>The claimed fact checking process struck me as&#x2026; other than robust, in worlds where parts of the article were not factually accurate.</p><p>For example, there are many ways to &#x201c;review a bank withdrawal.&#x201d; That review can involve five or more parties, and I&#x2019;ve been on almost all ends of it at various times. Some &#x201c;reviews&#x201d; are low-friction but low-robustness, such as e.g. asking someone to see a screenshot of their mobile phone or a printout of a bank statement.</p><p>As I once told a colleague in an unrelated context: a printed bank statement is of limited probative value because it could be forged by a bright high school student.</p><p>The financial industry has a variety of ways to resolve this, depending on how much time and toil it wants to expend on the investigation. For example, you can call the financial institution which issued the statement in question, announce that you are in a room with their customer, and then ask their customer to ask them to <em>read the financial institution&#x2019;s copy of the statement </em>into the open line. Many people I have told about this ritual assume that, due to security concerns, no bank will engage in it. Nope! This is extremely routine and will happen tens of thousands of times next Tuesday. It is obviously more trustworthy than a copy of the statement whose chain of custody includes a non-bank actor.</p><p>Anyhow, some years after cracking wise about bright high school students, I chanced upon an infelicity which happened to New York Magazine. It <a href=\"https://nymag.com/news/articles/reasonstoloveny/2014/mohammed-islam-stock-trading/\">published</a> that a Stuyvesant high school student had made $72 million trading stocks and was shortly to open a hedge fund.</p><p>This is <em>obvious nonsense</em> and would be detected within seconds of conversation by anyone professionally involved in hedge funds, but we have a ritual in our society which blesses some writers as being owed <em>the benefit of the doubt</em> when they publish obvious nonsense. If it ran in the pages of New York Magazine, and New York Magazine engaged its standard fact checking process by sending someone to Stuyvesant to review a bank statement, and that piece of paper said Chase at the top and an eight figure number at the bottom, then the <em>clearly the story is defensible, right</em>.</p><p>No! Of course not! New York Magazine got punked by a teenager.&#xa0;</p><p>And so, reading New York Magazine&#x2019;s newest written statement about thoroughly fact checking a bank withdrawal, I thought &#x201c;After ten years memories fade. Vox is currently wearing New York Magazine as a skin-suit, so who knows if anyone involved in that fracas is still around. Perhaps current staff reviewed the newest issue&#x2019;s most important transaction in an other-than-robust fashion.&#x201d;</p><p>Texts from the scammer? Voice recordings? A statement to the police? All of these struck me as highly correlated rather than being independent evidence: all reliable if one trusts the writer, and all unreliable if one does not trust the writer.</p><p>Never having employed or encountered this writer myself, before she wrote things I believed to be improbable about banking procedure, I reflected on what I do trust.&#xa0;</p><p>I trust the physical reality of the world. I trust that it is very difficult to corrupt the archives of societal institutions.</p><h2 id=\"the-physical-reality-of-bank-branches\">The physical reality of bank branches</h2><p>Vanishingly few bank branches put teller windows on the second floor. Many people have not ever had reason to deeply consider this true fact about the world. Relatively few people have ever made real estate decisions about siting bank branches or sketched layouts for them.</p><p>By coincidence, <a href=\"https://www.complexsystemspodcast.com/episodes/the-hundred-year-old-telegram-worth-5-million-with-jim-mckenzie-2/\">my father has</a>. And, as someone who <a href=\"https://www.bitsaboutmoney.com/archive/why-is-that-bank-branch-there/\">listened attentively</a> at the dinner table and on car rides as he geeked out with his eldest son about the relative merits of various corners in Chicago, when I read that there was a bank branch in New York City with thick glass on the second floor, I thought &#x201c;If that unicorn exists, I can probably narrow it down to a single physical location.&#x201d;&#xa0;</p><p>New York City, ye capital of the world, ye center of global finance, ye city which never sleeps: poets say you contain stories beyond numbering, but bike messengers can count your bank branches. A few hundred. Done. A diligent person could walk into <em>every last one</em>. (Of course the public can just walk into bank branches. <em>That is what they are for</em>.)</p><p>I started by attempting to narrow the set, to save some shoe leather. One gets a free 90%+ reduction by narrowing it to one bank in particular. Bank regulators keenly track deposit share concentration (and, therefore, bank branch concentration) in major markets, and NYC, the majorest market, is gardened with an exactitude that makes the feng shui look effortless.</p><p>Who knows the bank? Well, Vox (by implication of their statement) must know the bank, and <em>the writer</em> certainly knows the bank, and perhaps one of these would give an on the record comment naming the bank.</p><p>The writer engages in freelance journalism, has a professional website which lists her email address, and swiftly answered a question from another writer, on the record.</p><blockquote>Bank of America.</blockquote><p>Now we are getting somewhere.</p><p>Bank of America will <a href=\"https://locators.bankofamerica.com/ny/brooklyn/\">trivially</a> give you a list of all Bank of America locations in Brooklyn, for many reasons, including &#x201c;We would <em>certainly hope</em> you find our financial centers for your financial services needs. We didn&#x2019;t <a href=\"https://www.bitsaboutmoney.com/archive/branch-banking/\">build this branch footprint</a> and lease out desirable locations for a half century and sweat the details about curb cuts for <em>the sheer joy of it all.</em>&#x201d;</p><p>One can, if one is unusually punctilious, cross reference their list against public records.</p><p>One useful sort of public record is the Office of the Comptroller of the Currency&#x2019;s <a href=\"https://www.occ.gov/topics/charters-and-licensing/weekly-bulletin/index-weekly-bulletin.html\">weekly bulletin</a>, which includes all bank branch closings for nationally chartered institutions in the United States. Why would one care about those bulletins? An investigation, conducted in February 2024, about branches open on October 31st, 2023, might otherwise miss some which closed in the interim. And so I told my research assistant to read a few months of bulletins. (He surprised me by saying there is <a href=\"https://apps.occ.gov/CAAS_CATS/\">a search engine</a> these days. Well, this wire transfer compliance influencer learned a new trick in 2024.)</p><p>And so we had twenty two Bank of America branches in Brooklyn to look at.</p><p>I&#x2019;m in Chicago, and flying to Brooklyn to spend three days walking into branches seems like an obviously irrational use of my time. So, in the finest tradition of publications assigning scutwork to junior employees, I sent Sammy to Brooklyn instead.</p><p>We excluded any buildings which physically didn&#x2019;t have a second floor. We used sophisticated techniques taught in journalism school, like the fact you can press ten buttons on an iPhone and then someone at a bank in Brooklyn will immediately answer questions like &#x201c;Does your branch have a second floor?&#x201d;</p><p>We kept <a href=\"https://media.kalzumeus.com/bam/shoebox/BofA-branches-in-brooklyn.xlsx\">a detailed spreadsheet</a>, in the expectation we might eventually have to show New York media outlets that we had done our homework. A timestamped call here, a Street View there, our search area narrowed precipitously.</p><p>The final round of investigation involved Sammy physically entering bank branches, walking to the second floor, and looking for physical details consistent with the story as published.</p><p>This is a long way to say: I am <strong>very confident indeed</strong> that the only place in the world the described bank transaction could possibly have taken place at is 1 Flatbush Avenue, at the teller window, on the second floor. Right here.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img alt=\"Two Americas, one bank branch, and $50,000 cash\" class=\"kg-image\" height=\"468\" src=\"https://lh7-rt.googleusercontent.com/docsz/AD_4nXey6xZtoNAYs5V-5FniPKuusVnk1rJw9nPZRiLXD4YplJD4BnpZE2Bb6Lw979SNFTQxx9Z_3NzDa50lXu75hen4Gqd1V8Q2duWellbbL_KaODdmpM58C6ttb3P3BR7JUXvf1oiRJw?key=8GcRx5waj7xrcC9R0JmYsN00\" width=\"624\" /><figcaption><span style=\"white-space: pre-wrap;\">Samuel Cottrell, conducting banking business at 1 Flatbush Avenue, March 18th, 2024</span></figcaption></figure><p>We took this photo in March 2024, only weeks after publication of the original article.</p><p>And then we entered a long, long holding pattern, trying to find one trusted institution to say that, as of <em>earlier</em> <em>than</em> February 2024, they understood the transaction to either a) definitely <em>have</em> taken place at 1 Flatbush Avenue or b) definitely <em>not have</em> taken place at 1 Flatbush Avenue.</p><h2 id=\"in-which-we-became-acquainted-with-brisk-walks-across-brooklyn\">In which we became acquainted with brisk walks across Brooklyn</h2><p>If the incident took place in the physical world, then the geospatial reality of the world imposes some constraints on the narrative. The writer unambiguously locates their narrative in Brooklyn. But Brooklyn is large.</p><p>Could we narrow it down? Could we do that using only independent, trustworthy information?</p><p>I trust, for example, that the city of New York keeps mostly accurate records about <a href=\"https://www.bitsaboutmoney.com/archive/working-title-insurance/\">who owns property</a>. These are quite useful for e.g. facilitating the orderly operation of the country&apos;s largest real estate market. The records are publicly available through the <a href=\"https://www.bitsaboutmoney.com/archive/working-title-insurance/\">Automated City Register Information System (ACRIS)</a>.</p><p>I learned two things from ACRIS in early 2024.</p><p>One was an address on a mortgage. That address is, factually, a thoroughly doable walk from 1 Flatbush Avenue.</p><p>The other: this outsider, trusting at face value representations made by a news publication about the socioeconomic status of the subject of a story, did not successfully predict <em>other</em> facts present on that mortgage.</p><p>Socioeconomic class, unfortunately, has a great deal of bearing on how a bank would choose to interact with an individual. This is particularly true as one approaches either end of the socioeconomic spectrum, away from the mass market that most people assume banks must be serving at all times. We have often discussed <a href=\"https://www.bitsaboutmoney.com/archive/the-business-of-check-cashing/\">discontinuities in service</a> at the lower end of the spectrum in Bits about Money. There exist&#x2026; <em>other</em> discontinuities.</p><p>I realize that commenting on the socioeconomic status of a crime victim is uncouth, particularly in ways they might not choose to describe themselves. Class is unfortunately essential to understanding <em>what actually happened</em> at 1 Flatbush Avenue on October 31st, 2023. Permit me a brief recital of the source of my confusion.</p><p>This outsider perceived a through-line of the Cut piece as being that the writer made other-than-rational decisions about $50,000 because their financial life was on the line. Here are some select non-consecutive paragraphs reproduced verbatim, with bolding added to highlight statements this outsider apparently read incorrectly.</p><blockquote>Calvin [a member of the scamming team] wanted to know how much money I currently had in my bank accounts. I told him that I had two &#x2014; checking and savings &#x2014; with a combined balance of a little over $80,000. <strong>As a freelancer in a volatile industry, I keep a sizable emergency fund, and I also set aside cash to pay my taxes at the end of the year, since they aren&#x2019;t withheld from my paychecks.</strong>\t\t\t\t</blockquote><blockquote>I almost laughed. I told him I was quite sure that <strong>my husband, who works for an affordable- housing nonprofit and makes meticulous spreadsheets for our child-care expenses</strong>, was not a secret drug smuggler. &#x201c;I believe you, but even so, your communications are probably under surveillance,&#x201d; Calvin said. &#x201c;You cannot talk to him about this.&#x201d; I quickly deleted the text messages I had sent my husband a few minutes earlier. &#x201c;These are sophisticated criminals with a lot of money at stake,&#x201d; he continued. &#x201c;You should assume you are in danger and being watched. You cannot take any chances.&#x201d;&#xa0;</blockquote><blockquote><strong>Fifty thousand dollars is a lot of money. It took me years to save, stashing away a few thousand every time I got paid for a big project. Part of it was money I had received from my grandfather</strong>, an inheritance he took great pains to set up for his grandchildren before his death. Sometimes I imagine how I would have spent it if I had to get rid of it in a day. I could have paid for over a year&#x2019;s worth of child care up front. I could have put it toward the master&#x2019;s degree I&#x2019;ve always wanted. I could have housed multiple families for months. Perhaps, inadvertently, I am; I occasionally wonder what the scammers did with it. </blockquote><blockquote>Because I had set it aside for emergencies and taxes, it was money I tried to pretend I didn&#x2019;t have &#x2014; it wasn&#x2019;t for spending. <strong>Initially, I was afraid that I wouldn&#x2019;t be able to afford my taxes this year, but then my accountant told me I could write off losses due to theft. So from a financial standpoint, I&#x2019;ll survive</strong>, as long as I don&#x2019;t have another emergency &#x2014; a real one &#x2014; anytime soon.</blockquote><p>These statements, and others throughout the article, conjured a particular image for me. It was that the writer was upper middle class, dealt with a bit of financial anxiety common to many individuals in precarious or not-particularly-remunerative employment circumstances, and was abused by professional con artists in a calculated fashion to prey upon this financial insecurity.</p><p>When recounted these same statements, my friend <a href=\"https://thediff.co\">Byrne Hobart</a>, who has actually lived among this social milieu before, laughed knowingly and said &#x201c;Ah, family money.&#x201d;</p><p>I will now add three true statements to the above sketch, in the hopes that you understand this transaction the way that a Bank of America teller understood it.</p><p>The writer&#x2019;s positive home equity, trivially available to the bank which wrote their mortgage, is well in excess of ten years of the <a href=\"https://www.census.gov/quickfacts/fact/table/newyorkcitynewyork/HSG010223\">median household income for New York City</a>. The writer is the president of the family charitable foundation, which per its <a href=\"https://www.irs.gov/forms-pubs/about-form-990\">annual filings with the IRS</a> has in the recent past held approximately $2 million in marketable securities. And the family estate in Connecticut (which the writer&#x2019;s parents live at) was <a href=\"https://www.courant.com/2013/05/31/green-garden-with-roosevelt-ties-part-of-farmington-tour-2/\">featured in the local paper</a>, highlighting two hundred years of history.</p><p>Discovering these facts radically changed my impression of why, per the writer&#x2019;s written communication with me, she was not asked for the purpose of a $50,000 withdrawal by any bank staff. It no longer looks like a surprising lapse in procedure, when someone attempted to empty <em>their entire savings account </em>and wasn&#x2019;t even half-heartedly counseled about caution. It looks like <em>trivial cash management</em> of a well-off, presumptively sophisticated client, whose household, resources, and probable financial future were thoroughly known to the bank.</p><p>Would the bank prefer the teller to ask <em>one more question</em> in this circumstance? Perhaps. But it <em>won&#x2019;t lose sleep over the matter</em>.</p><p>Bank of America was <a href=\"https://www.nytimes.com/2024/02/16/your-money/scam-new-york-magazine-amazon-ftc-cia.html\">asked about this transaction by the New York Times</a>: &#x201c;&#x2018;We have <a href=\"https://www.bankofamerica.com/security-center/overview/\">extensive efforts</a> to warn clients about avoiding scams,&#x2019; said a Bank of America spokesman, William P. Halldin, via email. The bank declined to comment further.&#x201d; (The Times, citing policy, refused to confirm the bank branch it understood the transaction to have taken place at.)</p><p>And thus we return to our earlier question: can we find an institution which will divulge where this transaction was claimed to have taken place at? Vox Media, the writer, and the New York Times have all been asked, and we do not have an answer yet.</p><h3 id=\"enter-the-financial-crimes-enforcement-network\">Enter the Financial Crimes Enforcement Network</h3><p>Bank of America is one of the largest depository institutions in the world, and reliably files Currency Transaction Reports when someone moves $10,000 or more into, or out of, the bank in cash. I thought it would be extremely unlikely that FinCEN would cough one of these up to anyone who asked.</p><p>But a recent development in <a href=\"https://law.justia.com/cases/federal/appellate-courts/ca9/18-17356/18-17356-2021-09-23.html\">Freedom of Information Act jurisprudence</a> gave me some hope: the FOIA now, per the Ninth Circuit, allows for &#x201c;statistical aggregate data&#x201d; to be FOIAed. And I thought there was some hope that FinCEN would, rather than showing me a very private <a href=\"https://www.irs.gov/pub/irs-tege/fin104_ctr.pdf\">Currency Transaction Report</a>, answer a simple question about statistical aggregates.</p><p>So I filed a FOIA request, 2025-FINF-00126, asking for a statistical calculation to be done:\t</p><p>How many currency transaction reports were filed. In Brooklyn. For a withdrawal of between $48,000 and $52,000. On October 31st, 2023. Broken down by branch address.</p><p>FinCEN efficiently processed this FOIA request, returning a definitive answer in less than two weeks: <a href=\"https://media.kalzumeus.com/bam/shoebox/25-130-F-McKenzie-fincen-final-response-letter.pdf\">hell no</a>. It asserted the same argument rejected by the 9th Circuit, that responding would require creating a new record (the results of the SQL query) and therefore it had no obligation to do so. It also asserted a statutory exemption which very broadly applied to many records kept by FinCEN. On reading the statutes, I thought FinCEN likely had the right of them, even if it was unlikely to prevail on the statistical aggregate issue.</p><p>Drats. It was worth a shot.</p><h3 id=\"new-york%E2%80%99s-finest-foil-foil-for-a-time\">New York&#x2019;s Finest foil FOIL for a time</h3><p>The statement from Vox Media claimed that the writer had filed a police report.</p><p>From the perspective of a fact-checker, police reports serve a useful tripwire function. Lying on one <a href=\"https://codes.findlaw.com/ny/penal-law/pen-sect-240-50/#:~:text=3.%20Gratuitously%20reports,person%20therein%3B%20or\">is a crime</a>. It is not a particularly <em>serious</em> crime (a class A misdemeanor, which also covers &#x201c;spilling a drink on someone&#x201d; and &#x201c;shoplifting a bottle of Tide&#x201d;).</p><p>One is welcome to one&#x2019;s guess as to how often New York prosecutors enforce this law, particularly against people in our social class. But it is a useful Schelling point for society: a news publication can gesture in the direction of a police report, and say &#x201c;Well, <em>everyone knows</em> what a police report means&#x201d;, and we all <em>pretend</em> that it means a police report necessarily contains no lies.</p><p>No police officer need disabuse journalists of their illusions here. Should a publication ever get put to the question, it will immediately pivot into &#x201c;We didn&#x2019;t say we <em>agreed with</em> or <em>believed</em> anything on the police report. We simply neutrally reported <em>the demonstrable fact</em> of the police report. Obviously we intended nothing else by bringing up a police report.&#x201d;</p><p>But police reports remain useful even in a world where they sometimes contain lies, because they establish paper trails which are <em>extremely difficult</em> to retrospectively fudge.</p><p>I was most interested in two facts on the police report.</p><p>One was metadata: when was this report received? (It obviously <em>reads a bit differently</em> if the report was created in response to the fact-checker asking for it, right.) The other: did, prior to the publication of the story, the writer consistently cite 1 Flatbush Avenue, the only location in the physical universe the transaction could have taken place at, as the location the transaction took place at?</p><p>I tried to get that police report, by several methods. By June 2024, getting impatient, I was at the point of <s>forcing</s> enthusiastically encouraging the NYPD to follow the law and provide it to me.</p><p>Police reports, like many public records, are retrievable under the <a href=\"https://otda.ny.gov/legal/foil/\">Freedom of Information Law</a>, New York state&#x2019;s legislation which mirrors the federal FOIA. The statutory deadlines are five business days to acknowledge a request, and then twenty business days (or such time reasonably required) to release the records or cite an exemption under the law for not disclosing them.</p><p>I filed <a href=\"https://a860-openrecords.nyc.gov/request/view/FOIL-2024-056-16750\">FOIL-2024-056-16750</a> on June 26th, 2024. On the last possible day, the NYPD updated its timeline to successfully locate a police report: it would need until November. OK, fair enough. I was a bit busy myself, being involved in a house purchase and move, and my one paper copy of a style magazine was hanging out in a box in the basement while we repainted. Perhaps the New York Police Department, <a href=\"https://council.nyc.gov/budget/wp-content/uploads/sites/54/2024/03/056-NYPD.pdf\">annual budget $5.8 billion</a>, was likewise quite busy.</p><p>November came. November went.</p><p>Eventually, concerned that Santa would not deliver the Christmas present I most wanted, I began to press the NYPD for answers. I did this using a voice and mien which I call Dangerous Professional. Three messages, one phone call, no dice.</p><p>And so, in February 2025, after a full six months of waiting on the NYPD, I got out my call log and <a href=\"https://media.kalzumeus.com/bam/shoebox/mckenzie-nypd-foil-appeal.png\">penned a FOIL appeal</a>. After a brief recitation of the procedural history, that letter did a bit of calculated knife twisting:</p><p><em>This request was filed on June 26th, 2024, more than six months ago. It was originally assigned a Due Date of November 4th, more than two months ago, by the NYPD. Despite three attempts to request an update via the Contact the Agency form online and one telephone message, I have yet to receive any non-automated contact from the NYPD about this request.</em></p><p><em>The statutory timeframe for production of documents in response to a FOIL request is twenty business days from the acknowledgement of the request. The NYPD&apos;s failure to produce this document in more than 100 business days is, accordingly, a constructive denial of the request.</em></p><p><em>I hereby appeal the NYPD&apos;s denial, and require that it produce the documents described in the FOIL request or provide me with its reasoning under the statute why it cannot do so.&#xa0;</em></p><p>An attorney for the NYPD wrote back, forecasting a response within the statutory timeframe (10 business days for an appeal). The <a href=\"https://media.kalzumeus.com/bam/shoebox/mckenzie-nypd-foil-appeal-determination-letter.pdf\">substantive response</a> said that the appeal was moot because&#x2026; the Records Access Officer had, subsequent to my appeal, made a determination that the NYPD did indeed keep police reports and could indeed release them in response to FOIL requests.</p><p>Oh happy day.</p><p>The <a href=\"https://media.kalzumeus.com/bam/shoebox/nypd-redacted-complaint-report.pdf\">police report</a> contains a statement recorded by the police made on October 31st, 2023. I have lightly rewritten police shorthand and corrected some inconsequential spelling mistakes:</p><p><em>Complainant/victim further states listed perpetrator stated complainant/victim needed to pay in order to avoid being arrested. Complainant/victim states she withdrew $50,000 in U.S. currency from Bank of America, located at 1 Flatbush Avenue, at 3:10 PM.</em></p><p>And there we have it: reliable chain of custody to a claim made about the physical world at a known time, within hours of the alleged incident. This transaction was alleged to have happened at 1 Flatbush Avenue. Months later, in writing of her memories of the day, the writer offered a seemingly inconsequential detail about going up stairs to visit a teller window.</p><p>That seemingly inconsequential detail is, if one has a <em>very particular set of interests</em>, and is willing to <em>put an irrational amount of work in</em>, independently verifiable. Of all the bank branches in all the towns in all the world, the only one where a Bank of America teller awaits Brooklyn socialites behind thick glass on the second floor is, indeed, 1 Flatbush Avenue.</p><p>This would be a <em>very different piece</em> if that police report, or any other documentation at a trusted institution, named e.g. 266 Broadway instead.&#xa0;&#xa0;</p><p>As for the rest of the shoebox piece? I have no informed point of view on anything in a style magazine, except for the banking.</p>"
            ],
            "link": "https://www.bitsaboutmoney.com/archive/two-americas-one-bank-branch/",
            "publishedAt": "2025-03-05",
            "source": "Bits About Money",
            "summary": "Ever wondered what happens if you try to take $50,000 in cash out of a bank? Answer: a year of investigative journalism.",
            "title": "Two Americas, one bank branch, and $50,000 cash"
        },
        {
            "content": [
                "<div class=\"trix-content\">\n  <div>I developed seasonal allergies relatively late in life. From my late twenties onward, I spent many miserable days in the throes of sneezing, headache, and runny eyes. I tried everything the doctors recommended for relief. About a million different types of medicine, several bouts of allergy vaccinations, and endless testing. But never once did an allergy doctor ask the basic question: What kind of air are you breathing?</div><div><br />Turns out that's everything when you're allergic to pollen, grass, and dust mites! The air. That's what's carrying all this particulate matter, so if your idea of proper ventilation is merely to open a window, you're inviting in your nasal assailants. No wonder my symptoms kept escalating.</div><div><br />For me, the answer was simply to stop breathing air full of everything I'm allergic to while working, sleeping, and generally just being inside. And the way to do that was to clean the air of all those allergens with air purifiers running HEPA-grade filters.<br /><br /></div><div>That's it. That was the answer!<br /><br /></div><div>After learning this, I outfitted everywhere we live with these machines of purifying wonder: One in the home office, one in the living area, one in the bedroom. All monitored for efficiency using <a href=\"https://uk.getawair.com/products/element\">Awair air sensors</a>. Aiming to have the PM2.5 measure read a fat zero whenever possible.<br /><br /></div><div>In America, I've used the <a href=\"https://alen.com/\">Alen BreatheSmart</a> series. They're great. And in Europe, I've used <a href=\"https://www.philips.co.uk/c-p/AC3220_10/pureprotect-3200-series\">the Philips ones</a>. Also good.</div><div><br />It's been over a decade like this now. It's exceptionally rare that I have one of those bad allergy days now. It can still happen, of course \u2014 if I spend an entire day outside, breathing in allergens in vast quantities. But as with almost everything, the dose makes the poison. The difference between breathing in <em>some</em> allergens, some of the time, is entirely different from breathing all of it, all of the time.</div><div><br />I think about this often when I see a doctor for something. Here was this entire profession of allergy specialists, and I saw at least a handful of them while I was trying to find a medical solution. None of them even thought about dealing with the environment. The cause of the allergy. Their entire field of view was restricted to dealing with mitigation rather than prevention.<br /><br /></div><div>Not every problem, medical or otherwise, has a simple solution. But many problems do, and you have to be careful not to be so smart that you can't see it.</div>\n</div>"
            ],
            "link": "https://world.hey.com/dhh/air-purifiers-are-a-simple-answer-to-allergies-3ea70b03",
            "publishedAt": "2025-03-05",
            "source": "DHH",
            "summary": "<div class=\"trix-content\"> <div>I developed seasonal allergies relatively late in life. From my late twenties onward, I spent many miserable days in the throes of sneezing, headache, and runny eyes. I tried everything the doctors recommended for relief. About a million different types of medicine, several bouts of allergy vaccinations, and endless testing. But never once did an allergy doctor ask the basic question: What kind of air are you breathing?</div><div><br />Turns out that's everything when you're allergic to pollen, grass, and dust mites! The air. That's what's carrying all this particulate matter, so if your idea of proper ventilation is merely to open a window, you're inviting in your nasal assailants. No wonder my symptoms kept escalating.</div><div><br />For me, the answer was simply to stop breathing air full of everything I'm allergic to while working, sleeping, and generally just being inside. And the way to do that was to clean the air of all those allergens with air purifiers running HEPA-grade filters.<br /><br /></div><div>That's it. That was the answer!<br /><br /></div><div>After learning this, I outfitted everywhere we live with these machines of purifying wonder: One in the home office, one in the living area, one in the bedroom. All monitored",
            "title": "Air purifiers are a simple answer to allergies"
        },
        {
            "content": [
                "<div class=\"trix-content\">\n  <div>Maybe one day AI will answer every customer question flawlessly, but we're nowhere near that reality right now. I can't tell you how often I've been stuck in some god-forsaken AI loop or phone tree WHEN ALL I WANT IS A HUMAN. So I end up either just yelling \"operator\", \"operator\", \"operator\" (the modern-day mayday!) or smashing zero over and over. It's a unworthy interaction for any premium service. &nbsp;</div><div><br />Don't get me wrong. I'm pretty excited about AI. I've seen it do some incredible things. And of course it's just going to keep getting better. But in our excitement about the technical promise, I think we're forgetting that humans need more than correct answers. Customer service at its best also offers understanding and reassurance. It offers a human connection.<br /><br /></div><div>Especially as AI eats the low-end, commodity-style customer support. The sort that was always done poorly, by disinterested people, rapidly churning through a perceived dead-end job, inside companies that only ever saw support as a cost center. Yeah, nobody is going to cry a tear for losing that.</div><div><br />But you know that isn't all there is to customer service. Hopefully you've had a chance to experience what it feels like when a cheerful, engaged human is interested in helping you figure out what's wrong or how to do something right. Because they know exactly what they're talking about. Because they've helped thousands of others through exactly the same situation. That stuff is gold.</div><div><br />Partly because it feels bespoke. A customer service agent who's good at their job knows how to tailor the interaction not just to your problem, but to your temperament. Because they've seen all the shapes. They can spot an angry-but-actually-just-frustrated fit a thousand miles away. They can tell a timid-but-curious type too. And then deliver exactly what either needs in that moment. That's luxury.<br /><br /></div><div><a href=\"https://www.youtube.com/watch?v=KG40wBNRS8s\">That's our thesis for Basecamp</a>, anyway. That by treating customer service as a career, we'll end up with the kind of agents that embody this luxury, and our customers will feel the difference.</div>\n</div>"
            ],
            "link": "https://world.hey.com/dhh/human-service-is-luxury-bb5bba1a",
            "publishedAt": "2025-03-03",
            "source": "DHH",
            "summary": "<div class=\"trix-content\"> <div>Maybe one day AI will answer every customer question flawlessly, but we're nowhere near that reality right now. I can't tell you how often I've been stuck in some god-forsaken AI loop or phone tree WHEN ALL I WANT IS A HUMAN. So I end up either just yelling \"operator\", \"operator\", \"operator\" (the modern-day mayday!) or smashing zero over and over. It's a unworthy interaction for any premium service. &nbsp;</div><div><br />Don't get me wrong. I'm pretty excited about AI. I've seen it do some incredible things. And of course it's just going to keep getting better. But in our excitement about the technical promise, I think we're forgetting that humans need more than correct answers. Customer service at its best also offers understanding and reassurance. It offers a human connection.<br /><br /></div><div>Especially as AI eats the low-end, commodity-style customer support. The sort that was always done poorly, by disinterested people, rapidly churning through a perceived dead-end job, inside companies that only ever saw support as a cost center. Yeah, nobody is going to cry a tear for losing that.</div><div><br />But you know that isn't all there is to customer service. Hopefully you've had a chance to experience what",
            "title": "Human service is luxury"
        },
        {
            "content": [
                "<div class=\"trix-content\">\n  <div>Back in the mid 90s, I had a friend who was really into raytracing, but needed to nurture his hobby on a budget. So instead of getting a top-of-the-line Intel Pentium machine, he bought two <a href=\"https://en.wikipedia.org/wiki/AMD_K5\">AMD K5</a> boxes, and got a faster rendering flow for less money. All I cared about in the 90s was gaming, though, and for that, Intel was king, so to me, AMD wasn't even a consideration.<br /><br /></div><div>And that's how it stayed for the better part of the next three decades. AMD would put out budget parts that might make economic sense in narrow niches, but Intel kept taking all the big trophies in gaming, in productivity, and on the server.<br /><br /></div><div>As late as the end of the 2010s, we were still buying Intel for our servers at 37signals. Even though AMD was getting more competitive, and the price-watt-performance equation was beginning to tilt in their favor.<br /><br /></div><div>By the early 2020s, though, AMD had caught up on the server, and we haven't bought Intel since. The AMD EPYC line of chips are simply superior to anything Intel offers in our price/performance window. Today, the bulk of <a href=\"https://world.hey.com/dhh/the-hardware-we-need-for-our-cloud-exit-has-arrived-99d66966?trk=public_post_comment-text\">our new fleet</a> run on dual EPYC 9454s for a total of 96 cores(!) per machine. They're awesome.<br /><br /></div><div>It's been the same story on the desktop and laptop for me. After <a href=\"https://world.hey.com/dhh/living-with-linux-and-android-after-two-decades-of-apple-4f730084\">switching to Linux last year</a>, I've been all in on AMD. My <a href=\"https://world.hey.com/dhh/imperfections-create-connections-bc87d630\">beloved Framework 13</a> is rocking an AMD 7640U, and my desktop machine runs on an AMD 7950X. Oh, and my oldest son just got a new gaming PC with an AMD 9900X, and my middle son has a AMD 8945HS in his gaming laptop. It's all AMD in everything!<br /><br /></div><div>So why is this? Well, clearly the clever crew at AMD is putting out some great CPU designs lately with <a href=\"https://x.com/LisaSu\">Lisa Su</a> in charge. I'm particularly jazzed about the <a href=\"https://frame.work/desktop\">upcoming Framework desktop</a>, which runs the latest Max 395+ chip, and can apportion up to 110GB of memory as VRAM (great for local AI!). This beast punches <a href=\"https://browser.geekbench.com/v6/cpu/10666257\">a multi-core score that's on par with that of an M4 Pro</a>, and it's no longer that far behind in single-core either. But all the glory doesn't just go to AMD, it's just as much a triumph of TSMC.</div><div><br />TSMC stands for Taiwan Semiconductor Manufacturing Company. They're the world leader in advanced chip making, and key to the story of how Apple was able to leapfrog the industry with the M-series chips back in 2020. Apple has long been the top customer for TSMC, so they've been able to reserve capacity on the latest manufacturing processes (called \"nodes\"), and as a result had a solid lead over everyone else for a while.<br /><br /></div><div>But that lead is evaporating fast. That new Max+ 395 is showing that AMD has nearly caught up in terms of raw grunt, and the efficiency is no longer a million miles away either. This is again largely because AMD has been able to benefit from the same TSMC-powered progress that's also propelling Apple.<br /><br /></div><div>But you know who it's not propelling? Intel. They're still trying to get their own chip-making processes to perform competitively, but so far it looks like they're just falling further and further behind. The latest Intel boards are more expensive and run slower than the competition from Apple, AMD, and Qualcomm. And there appears to be no easy fix to sort it all out around the corner.</div><div><br />TSMC really is lifting all the boats behind its innovation locks. Qualcomm, just like AMD, have nearly caught up to Apple with their latest chips. The 8 Elite unit in <a href=\"https://www.tomsguide.com/phones/android-phones/snapdragon-8-elite-benchmarks\">my new Samsung S25 is faster than the A18 Pro</a> in the iPhone 16 Pro in multi-core tests, and very close in single-core. It's also just as efficient now.</div><div><br />This is obviously great for Android users, who for a long time had to <a href=\"https://x.com/dhh/status/914909306625167360\">suffer the indignity</a> of <a href=\"https://x.com/dhh/status/1354802203756617732\">truly atrocious CPU performance</a> compared to the iPhone. It was so bad for a while that we had to program our web apps differently for Android, because they simply didn't have the power to run JavaScript fast enough! But that's all history now.<br /><br /></div><div>But as much as I now cheer for Qualcomm's chips, I'm even more chuffed about the fact that AMD is on a roll. I spend far more time in front of my desktop than I do any other computer, and after dumping Apple, it's a delight to see that the M-series advantage is shrinking to irrelevance fast. There's of course still the software reason for why someone would pick Apple, and they continue to make solid hardware, but the CPU playing field is now being leveled.</div><div><br />This is obviously a good thing if you're a fan of Linux, like me. <a href=\"https://frame.work/\">Framework</a> in particular has invigorated a credible alternative to the sleek, unibody but ultimately disposable nature of the reigning MacBook laptops. By focusing on repairability, upgradeability, and superior keyboards, we finally have an alternative for developer laptops that doesn't just feel like a cheap copy of a MacBook. And thanks to AMD pushing the envelope, these machines are rapidly closing the remaining gaps in performance and efficiency.</div><div><br />And oh how satisfying it must be to sit as CEO of AMD now. The company was founded just one year after Intel, back in 1969, but for its entire existence, it's lived in the shadow of its older brother. Now, thanks to TSMC, great leadership from Lisa Su, and a crack team of chip designers, they're finally reaping the rewards. That is one hell of a journey to victory!</div><div><br />So three cheers for AMD! A tip of the hat to TSMC. And what a gift to developers and computer enthusiasts everywhere that Apple once more has some stiff competition in the chip space.</div>\n</div>"
            ],
            "link": "https://world.hey.com/dhh/amd-in-everything-0ec0cc6e",
            "publishedAt": "2025-02-27",
            "source": "DHH",
            "summary": "<div class=\"trix-content\"> <div>Back in the mid 90s, I had a friend who was really into raytracing, but needed to nurture his hobby on a budget. So instead of getting a top-of-the-line Intel Pentium machine, he bought two <a href=\"https://en.wikipedia.org/wiki/AMD_K5\">AMD K5</a> boxes, and got a faster rendering flow for less money. All I cared about in the 90s was gaming, though, and for that, Intel was king, so to me, AMD wasn't even a consideration.<br /><br /></div><div>And that's how it stayed for the better part of the next three decades. AMD would put out budget parts that might make economic sense in narrow niches, but Intel kept taking all the big trophies in gaming, in productivity, and on the server.<br /><br /></div><div>As late as the end of the 2010s, we were still buying Intel for our servers at 37signals. Even though AMD was getting more competitive, and the price-watt-performance equation was beginning to tilt in their favor.<br /><br /></div><div>By the early 2020s, though, AMD had caught up on the server, and we haven't bought Intel since. The AMD EPYC line of chips are simply superior to anything Intel offers in our price/performance window. Today, the bulk of <a href=\"https://world.hey.com/dhh/the-hardware-we-need-for-our-cloud-exit-has-arrived-99d66966?trk=public_post_comment-text\">our new fleet</a>",
            "title": "AMD in everything"
        },
        {
            "content": [
                "<p>People make fun of techie/rationalist/effective-altruist types for many weird obsessions, like stimulants or meditation or polyamory or psychedelics or seed oils or air quality or re-deriving all of philosophy from scratch. Some of these seem fair to me, or at least understandable.</p>\n\n<p>But the single most common point of mockery is surely the obsession with \u201cBayesian\u201d reasoning. Many people seem to see this as some screwy hipster fad, some alternate mode of logic that all these weirdos have decided to trust instead of normal human thinking.</p>\n\n<p>This drives me crazy.</p>\n\n<p>Because <em>everyone</em> uses Bayesian reasoning all the time, even if they don\u2019t think of it that way. Arguably, we\u2019re <em>born</em> Bayesian and do it instinctively. It\u2019s normal and natural and\u2014I daresay\u2014almost boring. \u201cBayesian reasoning\u201d is just a slight formalization of everyday thought.</p>\n\n<p>It\u2019s not a trend. It\u2019s forever. But it\u2019s forever like arithmetic is forever: Strange to be <a href=\"https://dynomight.net/arithmetic/\">obsessed</a> with it, but <em>really</em> strange to make fun of someone for using it.</p>\n\n<p>Here, I\u2019ll explain what Bayesian reasoning is, why it\u2019s so fundamental, why people argue about it, and why much of that controversy is ultimately a boring semantic debate of no interest to an enlightened person like yourself. Then, for the haters, I\u2019ll give some <em>actually good</em> reasons to be skeptical about how useful it is in practice.</p>\n\n<p>I won\u2019t use any equations. That\u2019s not because I don\u2019t think you can take it, but because Bayesian reasoning <em>isn\u2019t math</em>. It\u2019s a concept. The typical explanations use lots of math and kind of gesture around the concept, but never seem to get to the core of it, which I think leads people to miss the forest for the trees.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<p>Let\u2019s get our intuition flowing with a few examples.</p>\n\n<ol>\n  <li>\n    <p>Bored one day, you convince a friend to give you an antinuclear antibody test for lupus. (It beats watching TV.) To your shock, the test is positive. After seeing that it\u2019s 90% accurate, you sink into existential terror. But then you remember that only 0.5% of people actually have lupus, so if you gave this test to 2000 random people, you\u2019d get ~199 false positives and only ~9 true positives. Then you feel less scared.</p>\n  </li>\n  <li>\n    <p>You take a penny and flip it 20 times, getting 16 heads. You plug this into a <a href=\"https://en.wikipedia.org/wiki/Binomial_proportion_confidence_interval#Clopper%E2%80%93Pearson_interval\">calculator</a> which tells you that with 95% confidence, the true bias is between 57.6% and 92.9%. This calculator isn\u2019t making a mistake. But still, this was a normal penny. So you\u2019re pretty sure the bias is very close to 50% and you just got 16 heads by chance.</p>\n  </li>\n  <li>\n    <p>You wonder if artificial superintelligence will be created in the next five years. That sounds weird, so you figure the chance is 1%. But then you notice that AI seems to be better at a suspicious rate. And you see that lots of expert forecasters give higher numbers. So you raise your estimate to 5%.</p>\n  </li>\n  <li>\n    <p>You wonder if plants are conscious. You decide there\u2019s a 0.05% chance.</p>\n  </li>\n</ol>\n\n<p>Probably you find some of these situations more objectionable than others. But what\u2019s really happening here?</p>\n\n<h2 id=\"what-is-bayesian-reasoning\">What is \u201cBayesian reasoning\u201d?</h2>\n\n<p>You may have heard of something called \u201cBayes\u2019 equation\u201d. Forget it. It\u2019s a distraction. Everyone uses that equation, including people that <em>hate</em> Bayesian reasoning.</p>\n\n<p>The core of Bayesian reasoning is a concept which cannot be translated into math. Here\u2019s how I like to put it:</p>\n\n<p><strong>Mixing aleatoric uncertainty and epistemic uncertainty: Good.</strong></p>\n\n<p>I\u2019m very sorry to define a fancy word using two even-fancier ones. But \u201caleatoric\u201d and \u201cepistemic\u201d get at something important. Consider these two statements:</p>\n\n<ol>\n  <li>\n    <p>My favorite U-235 atom has a 0.0000000985% probability it will decay in the next year.</p>\n  </li>\n  <li>\n    <p>There\u2019s a 82% probability I\u2019m taller than you.</p>\n  </li>\n</ol>\n\n<p>The word \u201cprobability\u201d appears in both these statements. But it means completely different things.</p>\n\n<p>U-235 decays due to random quantum fluctuations. If you get a few quadrillion U-235 atoms together (not <a href=\"https://dynomight.net/nukes/\">too close</a>, please) then after a year, something very close to 0.0000000985% will have decayed. The decay probability has a precise physical meaning that can be measured in experiments. That\u2019s \u201caleatoric\u201d uncertainty.</p>\n\n<p>Meanwhile, I\u2019m either taller than you or I\u2019m not. You may not <em>know</em>, but it\u2019s a fixed fact about the universe that either is true or isn\u2019t. That 82% probability is a feeling that exists in your brain. That\u2019s \u201cepistemic\u201d uncertainty.</p>\n\n<h2 id=\"why-people-are-obsessed-with-it\">Why people are obsessed with it?</h2>\n\n<p>So <em>why</em> would you mix those two types of uncertainty together? And why does Bayesian thinking almost seem like a religion to some people? I think the strongest reason is that it gives <em>optimal decision procedures</em>.</p>\n\n<p>Say you come to dinner at my house. After eating, you were hoping for brandy and cigars, but instead I bring out a jar. Inside it is one gold coin worth $1000 and 4 worthless fake coins. They all look the same, except the fake coins have heads on both sides.</p>\n\n<p><img alt=\"jar\" src=\"https://dynomight.net/img/bayes/jar.svg\" /></p>\n\n<p>Now, I offer you a deal: If you give me $125, then I\u2019ll pick a random coin and give it to you. Should you accept?</p>\n\n<p>This is pretty trivial, but let\u2019s go through the logic. There are five possible outcomes. In one you get something worth $1000, while in the others, you get something worth $0.</p>\n\n<p><img alt=\"tree\" src=\"https://dynomight.net/img/bayes/tree1.svg\" /></p>\n\n<p>Since each outcome is equally likely, on <em>average</em> you get something worth $200. You should accept my wager. (At least, assuming you have enough liquidity that you\u2019re risk neutral. If you need that $125 to buy food for the next week, don\u2019t gamble it.)</p>\n\n<p>Easy. But say instead I draw a random coin and flip it into the table. It happens to land heads. Then I point to it and ask: Would you like to pay $125 for <em>that</em> coin?</p>\n\n<p>If you\u2019re Bayesian, you\u2019d reason like this: There are five coins, each of which has two sides. So there are 10 equally likely outcomes:</p>\n\n<p><img alt=\"tree\" src=\"https://dynomight.net/img/bayes/tree2.svg\" /></p>\n\n<p>But since you saw heads, one of those outcomes is impossible.</p>\n\n<p><img alt=\"tree\" src=\"https://dynomight.net/img/bayes/tree3.svg\" /></p>\n\n<p>If you start with 10 equally likely outcomes and then rule one out, the other 9 are still equally likely. So on <em>average</em>, in this situation, you\u2019ll get something worth $1000/9 \u2248 $111.11. Since that\u2019s less than $125, you should refuse my offer.</p>\n\n<p>That\u2019s the one true <em>correct</em> way to play this game: You calculate the \u201cprobability\u201d that the coin is gold and then you use that \u201cprobability\u201d to make decisions. Even though the coin on the table is fixed, you <em>act</em> like there\u2019s a future random event. If you make decisions in <em>any other way</em>, you\u2019ll lose money over time, either by accepting losing bets, or missing out on winning bets.</p>\n\n<p>And if you\u2019re non-Bayesian, how do you play this game? Exactly the same way.</p>\n\n<p>Well, except that you can\u2019t talk about the \u201cprobability\u201d that the coin is gold. So you\u2019ll have to stumble around with \u201cexpected utilities\u201d or whatever. But you\u2019d better end up with something <em>equivalent</em> to the probabilistic calculation, because anything else is leaving money on the table.</p>\n\n<h2 id=\"why-this-is-controversial\">Why this is controversial</h2>\n\n<p>I hope you\u2019re now convinced that it\u2019s useful to <em>act</em> as if (non aleatoric) probabilities of unknown facts are \u201creal\u201d probabilities. And that <em>thinking</em> about them as probabilities makes this easier.</p>\n\n<p>Still, I stress that it\u2019s somewhat debatable if the above coin scenario is really \u201cBayesian\u201d. If it counts at all, it\u2019s certainly the least controversial kind, and not representative of how Bayesian reasoning is typically used in the real world.</p>\n\n<p>In practice, you face a situation where you don\u2019t <em>know</em> how many coins are gold vs. fake. Maybe I bring out the jar and you ask me what fraction of the coins are gold and I vaguely say, \u201cA decent number.\u201d Then you need to stare into my eyes and decide what kind of person you think I am. Alice might decide I\u2019m super chill and estimate that 50% of coins are gold. Bob might decide I\u2019m a huge jerk and only 1% are. That will lead Alice and Bob to completely different \u201cprobabilities\u201d.</p>\n\n<p>Here\u2019s a more realistic example. Say you make a new MRNA vaccine for the flu. You test it on a handful of patients and you seem to get good results, so you go to investors to try to get money to run a big trial so you can sell it. What\u2019s the \u201cprobability\u201d this drug would get FDA approval if funded?</p>\n\n<p>If potential investors are Bayesian, they will mentally weigh the data from your handful of patients with the base rate for how often trials succeed. But what <em>kind</em> of trials should be compared against? All trials? Vaccine trials? Flu drug trials? MRNA trials? Trials in the last 20 years? These lead to different probabilities, and there\u2019s no single right answer.</p>\n\n<p>And it gets much worse than that. I can calculate a \u201cprobability\u201d that artificial superintelligence will be invented in five years by making up a \u201cprior\u201d and then adjusting it based on what superforecasters say or how fast AI seems to be improving. But that prior and the adjustments will basically just be things I made up.</p>\n\n<p>So Bayesian probabilities are on a spectrum. In some situations, like the gold coin example, they\u2019re so useful that being non-Bayesian seems stubborn and pedantic. But in other situations, like estimating the probability that god exists, the \u201cprobabilities\u201d that come out are very squishy and subjective. This is why people say they aren\u2019t \u201creal\u201d.</p>\n\n<h2 id=\"the-boring-debate\">The boring debate</h2>\n\n<p>People have argued about Bayesian reasoning for decades. If I calculate that there\u2019s a 4.3% probability I have lupus, is that a \u201creal\u201d probability?</p>\n\n<p>I think a lot of the arguments ultimately boil down to semantics. You could imagine a world where we used \u201ca-probability\u201d for strict aleatoric uncertainty, and \u201cb-probability\u201d for more general Bayesian probabilities that combine epistemic and aleatoric uncertainty. Then that debate wouldn\u2019t exist.</p>\n\n<p>That dissolves the debate in the abstract. If we carefully marked everything Bayesian as \u201cb-probabilities\u201d, then we could argue about specific <em>situations</em>. How justifiable are the assumptions that were used? Some \u201cb-probabilities\u201d are much squishier than others.</p>\n\n<p>The argument against using squishy probabilities is obvious: They\u2019re totally subjective.</p>\n\n<p>The argument in favor of squishy probabilities is more subtle. It\u2019s that in life you have to make decisions. You either buy the coin from me or you don\u2019t. You either fund the vaccine trial or you don\u2019t. Making subjective assumptions is uncomfortable, but too bad, life requires hard decisions.</p>\n\n<p>So why be formal about it? Why not just rely on vibes?</p>\n\n<p>Well, while I think we\u2019re all born Bayesian, we\u2019re not <em>great</em> Bayesians. We have all sorts of predictable biases like <a href=\"https://en.wikipedia.org/wiki/Base_rate_fallacy\">base rate neglect</a> and <a href=\"https://en.wikipedia.org/wiki/Anchoring_effect\">anchoring</a>. The way to eliminate these is to state your assumptions <em>formally</em> and reason <em>formally</em>.</p>\n\n<p>Bayesian reasoning is also very legible. If we get different numbers for the probability of AGI in the next five years, we can compare our calculations and maybe learn something.</p>\n\n<h2 id=\"why-not-to-be-bayesian\">Why not to be Bayesian</h2>\n\n<p>So why not be Bayesian? I think there are two main reasons.</p>\n\n<p>First, outside of very simple situations, Bayesian reasoning requires using slow and unreliable algorithms. In general, Bayesian reasoning is in a <a href=\"https://en.wikipedia.org/wiki/%E2%99%AFP-complete\">complexity class</a> slightly <em>worse</em> than the famous <a href=\"https://en.wikipedia.org/wiki/NP-completeness\">NP-complete</a> class.</p>\n\n<p>Second, outside of very simple situations, creating formal probabilistic models is hard. You need to learn the intricacies of Wishart distributions, skew normal distributions, and kurtosis. And even if you know those things, creating probabilistic models is incredibly <em>dangerous</em>\u2014if you accidentally set some parameter somewhere incorrectly, you can easily get crazy results.</p>\n\n<p>Compared to the general population, I think I\u2019m comfortably in the top 0.1% in terms of my mastery of Bayesian stuff. (That\u2019s probably true for anyone who\u2019s ever built a non-trivial model for a real problem.)</p>\n\n<p>And yet, here I have a blog where I\u2019ve examined if <a href=\"https://dynomight.net/seed-oil/\">seed oil is bad for you</a> and if <a href=\"https://dynomight.net/aliens/\">alien aircraft are visiting earth</a> and if it\u2019s a good idea to <a href=\"https://dynomight.net/statins/\">take statins</a> or use <a href=\"https://dynomight.net/air/\">air purifiers</a> or get <a href=\"https://dynomight.net/colonoscopies/\">colonoscopies</a> or eat <a href=\"https://dynomight.net/aspartame/\">aspartame</a> or practice <a href=\"https://dynomight.net/gratitude/\">gratitude</a> or use an <a href=\"https://dynomight.net/humidifiers/\">ultrasonic humidifier</a>. And I have used formal Bayesian models <em>never</em>. Why?</p>\n\n<p>The answer is that the real world is messy and creating a formal model that would integrate all the available information would be really, really, <em>really</em> difficult.</p>\n\n<p>If I had an infinite amount of time, I <em>do</em> think that would be the best approach. But I\u2019d be incredibly paranoid that one parameter set incorrectly anywhere could lead to disaster. To create a model that I actually <em>trusted</em> for any of these situations would probably take me months.</p>\n\n<p>Meanwhile, my brain meat has been optimized for millions of years to combine information. It\u2019s very far from optimal, but it usually doesn\u2019t make insane mistakes. And I can still get some of the benefits of Bayesian reasoning by keeping it in mind.</p>\n\n<h2 id=\"conclusions\">Conclusions</h2>\n\n<ul>\n  <li>\n    <p>\u201cAleatoric\u201d probabilities are different from \u201cBayesian\u201d probabilities.</p>\n  </li>\n  <li>\n    <p>It\u2019s silly to argue about which is \u201creal\u201d. Just say which one you\u2019re talking about.</p>\n  </li>\n  <li>\n    <p>Some Bayesian probabilities are much squishier than others. When you see one, make sure you understand what assumptions went into it.</p>\n  </li>\n  <li>\n    <p>Life involves lots of hard choices with messy information. Theoretically, if you can formalize your assumptions, then Bayesian reasoning is the \u201coptimal\u201d way to make decisions.</p>\n  </li>\n  <li>\n    <p>But in practice, formalizing assumptions is both hard and dangerous. For <em>most</em> people in <em>most</em> situations, it\u2019s probably safer to use normal human judgement, but keep Bayesian reasoning in mind as a guide.</p>\n  </li>\n</ul>\n\n<hr />\n\n<p>P.S. The mentoring applications were so unbelievably impressive that I decided to pick winners randomly. I tried very hard to email everyone who applied but kept getting blocked as spam, even when trying to send out notifications in small batches. (What a web we weave.) So I\u2019m very sorry if you didn\u2019t get my email. I read every application and I was humbled by the amazing things you are all doing. I wish I could have accepted everyone.</p>"
            ],
            "link": "https://dynomight.net/bayes/",
            "publishedAt": "2025-02-27",
            "source": "Dynomight",
            "summary": "<p>People make fun of techie/rationalist/effective-altruist types for many weird obsessions, like stimulants or meditation or polyamory or psychedelics or seed oils or air quality or re-deriving all of philosophy from scratch. Some of these seem fair to me, or at least understandable.</p> <p>But the single most common point of mockery is surely the obsession with \u201cBayesian\u201d reasoning. Many people seem to see this as some screwy hipster fad, some alternate mode of logic that all these weirdos have decided to trust instead of normal human thinking.</p> <p>This drives me crazy.</p> <p>Because <em>everyone</em> uses Bayesian reasoning all the time, even if they don\u2019t think of it that way. Arguably, we\u2019re <em>born</em> Bayesian and do it instinctively. It\u2019s normal and natural and\u2014I daresay\u2014almost boring. \u201cBayesian reasoning\u201d is just a slight formalization of everyday thought.</p> <p>It\u2019s not a trend. It\u2019s forever. But it\u2019s forever like arithmetic is forever: Strange to be <a href=\"https://dynomight.net/arithmetic/\">obsessed</a> with it, but <em>really</em> strange to make fun of someone for using it.</p> <p>Here, I\u2019ll explain what Bayesian reasoning is, why it\u2019s so fundamental, why people argue about it, and why much of that controversy is ultimately a boring semantic debate of no interest to an enlightened person like yourself.",
            "title": "Bayes is not a phase"
        },
        {
            "content": [
                "<img alt=\"From Design doc to code: the Groundhog AI coding assistant (and new Cursor vibecoding meta)\" src=\"https://ghuntley.com/content/images/2025/03/1.png\" /><p>Ello everyone, in the &quot;<a href=\"https://ghuntley.com/tradecraft\" rel=\"noreferrer\">Yes, Claude Code can decompile itself. Here&apos;s the source code</a>&quot; blog post, I teased about a new meta when using Cursor. This post is a follow-up to the post below.</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://ghuntley.com/stdlib/\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">You are using Cursor AI incorrectly...</div><div class=\"kg-bookmark-description\">I&#x2019;m hesitant to give this advice away for free, but I&#x2019;m gonna push past it and share it anyway. You&#x2019;re using Cursor incorrectly. Over the last few weeks I&#x2019;ve been doing /zooms with software engineers - from entry level, to staff level and all the way up to principal level.</div><div class=\"kg-bookmark-metadata\"><img alt=\"From Design doc to code: the Groundhog AI coding assistant (and new Cursor vibecoding meta)\" class=\"kg-bookmark-icon\" src=\"https://ghuntley.com/content/images/icon/android-chrome-192x192-7.png\" /><span class=\"kg-bookmark-author\">Geoffrey Huntley</span><span class=\"kg-bookmark-publisher\">Geoffrey Huntley</span></div></div><div class=\"kg-bookmark-thumbnail\"><img alt=\"From Design doc to code: the Groundhog AI coding assistant (and new Cursor vibecoding meta)\" src=\"https://ghuntley.com/content/images/thumbnail/s-l1600-1.jpg\" /></div></a></figure><p>When you use &quot;<a href=\"https://ghuntley.com/specs\" rel=\"noreferrer\">/specs</a>&quot; (this post) method with the &quot;<a href=\"https://ghuntley.com/stdlib\" rel=\"noreferrer\">stdlib</a>&quot; (above) method in conjunction with a programming language that provides compiler soundness (driven by good types) and compiler errors, the results are incredible. You can drive hands-free output of N factor (entire weeks&apos; worth) of co-workers in hours. </p><p>Today, alongside with teaching you the technique I&apos;m announcing the start of a new open-source (yes, I&apos;m doing this as pure OSS and <a href=\"https://ghuntley.com/licensing/\" rel=\"noreferrer\">not my usual proprietary licensing</a>) AI headless agentic coding agent called &quot;groundhog&quot;.</p><figure class=\"kg-card kg-image-card\"><img alt=\"From Design doc to code: the Groundhog AI coding assistant (and new Cursor vibecoding meta)\" class=\"kg-image\" height=\"2000\" src=\"https://ghuntley.com/content/images/2025/03/1-2.png\" width=\"2000\" /></figure><p>Groundhog&apos;s primary purpose is to teach people how Cursor and all these other coding agents work under the hood. If you understand how these coding assistants work from first principles, then you can drive these tools harder (or perhaps make your own!).</p><p>We&apos;ll be building it together, increment by increment, as a series of blog posts, so don&apos;t rush to GitHub and raise GitHub issues that XYZ does not work as I&apos;m yet to decide on the community model around the project and doing customer support for free is not high up on my list. </p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://github.com/ghuntley/groundhog?ref=ghuntley.com\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">GitHub - ghuntley/groundhog: Groundhog&#x2019;s primary purpose is to teach people how Cursor and all these other coding agents work under the hood. If you understand how these coding assistants work from first principles, then you can drive these tools harder (or perhaps make your own!).</div><div class=\"kg-bookmark-description\">Groundhog&amp;#39;s primary purpose is to teach people how Cursor and all these other coding agents work under the hood. If you understand how these coding assistants work from first principles, then y&#x2026;</div><div class=\"kg-bookmark-metadata\"><img alt=\"From Design doc to code: the Groundhog AI coding assistant (and new Cursor vibecoding meta)\" class=\"kg-bookmark-icon\" src=\"https://ghuntley.com/content/images/icon/pinned-octocat-093da3e6fa40-6.svg\" /><span class=\"kg-bookmark-author\">GitHub</span><span class=\"kg-bookmark-publisher\">ghuntley</span></div></div><div class=\"kg-bookmark-thumbnail\"><img alt=\"From Design doc to code: the Groundhog AI coding assistant (and new Cursor vibecoding meta)\" src=\"https://ghuntley.com/content/images/thumbnail/groundhog\" /></div></a></figure><p>Subscribe, like and click on the bell below to be notified when the next post in the series ships</p><div class=\"kg-card kg-signup-card kg-width-wide \" style=\"background-color: #F0F0F0; display: none;\">\n            \n            <div class=\"kg-signup-card-content\">\n                \n                <div class=\"kg-signup-card-text \">\n                    <h2 class=\"kg-signup-card-heading\" style=\"color: #000000;\"><span style=\"white-space: pre-wrap;\">Sign up for Geoffrey Huntley</span></h2>\n                    <p class=\"kg-signup-card-subheading\" style=\"color: #000000;\"><span style=\"white-space: pre-wrap;\">I work remotely from a van that is slowly working its way around Australia. Follow me for the intersection of remote work, camping &amp; #vanlife.</span></p>\n                    \n        <form class=\"kg-signup-card-form\">\n            \n            <div class=\"kg-signup-card-fields\">\n                <input class=\"kg-signup-card-input\" id=\"email\" required=\"true\" type=\"email\" />\n                <button class=\"kg-signup-card-button kg-style-accent\" style=\"color: #FFFFFF;\" type=\"submit\">\n                    <span class=\"kg-signup-card-button-default\">Subscribe</span>\n                    <span class=\"kg-signup-card-button-loading\"><svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g class=\"nc-icon-wrapper\" fill=\"currentColor\" stroke=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\">\n            <g class=\"nc-loop-dots-4-24-icon-o\">\n                <circle cx=\"4\" cy=\"12\" r=\"3\">\n                <circle cx=\"12\" cy=\"12\" r=\"3\">\n                <circle cx=\"20\" cy=\"12\" r=\"3\">\n            </g>\n            \n        </g>\n    </svg></span>\n                </button>\n            </div>\n            <div class=\"kg-signup-card-success\" style=\"color: #000000;\">\n                Email sent! Check your inbox to complete your signup.\n            </div>\n            <div class=\"kg-signup-card-error\" style=\"color: #000000;\"></div>\n        </form>\n        \n                    <p class=\"kg-signup-card-disclaimer\" style=\"color: #000000;\"><span style=\"white-space: pre-wrap;\">No spam. Unsubscribe anytime.</span></p>\n                </div>\n            </div>\n        </div><p>Groundhog is a teaching tool <em>first. </em>If you want a full-blown thing right now, go check out &quot;<a href=\"https://github.com/block/goose?ref=ghuntley.com\">Goose</a>&quot;, &quot;<a href=\"https://github.com/RooVetGit/Roo-Code?ref=ghuntley.com\">Roo/Cline</a>&quot;, &quot;<a href=\"https://aider.chat/?ref=ghuntley.com\">Aider</a>&quot; or &quot;<a href=\"https://github.com/All-Hands-AI?ref=ghuntley.com\">AllHands</a>&quot;.</p><p>All the code you are about to see was generated using these two techniques in conjunction with <a href=\"https://ghuntley.com/multi-boxing/\">multiple concurrent sessions of the Cursor IDE open</a> working on their own separate specification domain. </p><h2 id=\"what-the-heck-is-a-specification-domain\">what the heck is a specification domain?</h2><p>Consider a standard application layout on a filesystem:</p><ul><li><code>src/core</code> - this is where your core application lives.</li><li><code>src/ai/mcp_tools</code> - here is where your MCP tools live.</li><li><code>src/ui</code> - here is where your UI lives.</li></ul><p>By driving the LLM to implement the core basics in a single implementation session before <code>src/ai/mcp_tools</code> and <code>src/src/ui</code> to build the &quot;heart of the application&quot;, you can then fan out and launch multiple copies of Cursor to work on parts of the application that do not overlap.</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://ghuntley.com/multi-boxing\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Multi Boxing LLMs</div><div class=\"kg-bookmark-description\">Been doing heaps of thinking about how software is made after https://ghuntley.com/oh-fuck and the current design/UX approach by vendors of software assistants. IDEs since 1983 have been designed around an experience of a single plane of glass. Restricted by what an engineer can see on their</div><div class=\"kg-bookmark-metadata\"><img alt=\"From Design doc to code: the Groundhog AI coding assistant (and new Cursor vibecoding meta)\" class=\"kg-bookmark-icon\" src=\"https://ghuntley.com/content/images/icon/android-chrome-192x192-8.png\" /><span class=\"kg-bookmark-author\">Geoffrey Huntley</span><span class=\"kg-bookmark-publisher\">Geoffrey Huntley</span></div></div><div class=\"kg-bookmark-thumbnail\"><img alt=\"From Design doc to code: the Groundhog AI coding assistant (and new Cursor vibecoding meta)\" src=\"https://ghuntley.com/content/images/thumbnail/CleanShot-2025-01-28-at-12.41.09@2x.png\" /></div></a></figure><p>Using <a href=\"https://git-scm.com/docs/git-worktree?ref=ghuntley.com\">https://git-scm.com/docs/git-worktree</a> is a key ingredient to get it to work if you use a single machine, as you want each Cursor (&quot;agent&quot;) to have its own working directory. </p><p>Start by authoring a &quot;<a href=\"https://ghuntley.com/stdlib/\" rel=\"noreferrer\">stdlib</a>&quot; rule to automatically do git commits as increments of the specification as it is also key. If you want to Rolls-Royce it, you can create a rule to auto-create a pull request when the agent is complete.</p><p>Now, you might be wondering about how to handle merge conflicts. Well, you can author a &quot;<a href=\"https://ghuntley.com/stdlib/\" rel=\"noreferrer\">stdlib</a>&quot; rule that drives Cursor to automatically reconcile the branches.</p><h2 id=\"okay-what-is-a-specification\">okay, what is a specification?</h2><p>Specifications are the heart of your application; the internal implementation of an application matters less now. As long as your tests pass and the LLM implements the technical steering lessons defined in your &quot;<a href=\"https://ghuntley.com/stdlib/\" rel=\"noreferrer\">stdlib</a>&quot;, then that&apos;s all that matters. </p><p>I&apos;ll be the first one to admit it&apos;s a little unsettling to see the API internals of your application wildly evolve at a rapid rate. Software engineers have been taught to control the computer; letting go and building trust in the process will take some time.</p><figure class=\"kg-card kg-image-card\"><img alt=\"From Design doc to code: the Groundhog AI coding assistant (and new Cursor vibecoding meta)\" class=\"kg-image\" height=\"136\" src=\"https://ghuntley.com/content/images/2025/03/image-12.png\" width=\"342\" /></figure><h2 id=\"how-i-build-applications-now\">how I build applications now</h2><p>I start with a long conversation with the LLM about my product requirements aka specifications. For Groundhog, these are the prompts that I used</p><blockquote>We are going to create an AI coding assistant command line application in rust<br /><br />The AI coding assistant is called &quot;groundhog&quot;.<br /><br />It uses the &quot;tracing&quot; crate for logging, metrics and telemetry.<br />All operations have appropriate tracing on them that can be used to troubleshoot the application.<br /><br />Use the clap cargo create for command line parsing.<br /><br />The first operation is<br /><br />&quot;$ groundhogexplain&quot;<br /><br />When groundhog explain is invoked it prints hello world.<br /><br />IMPORTANT: Write up the specifications into the &quot;specs/&quot; folder with each domain topic (including technical topic) as a seperate markdown file. Create a &quot;SPECS.md&quot; in the root of the directory which is an overview document that contains a table that links to all the specs.</blockquote><p>After a couple moments something like this will be generated.</p><figure class=\"kg-card kg-image-card\"><img alt=\"From Design doc to code: the Groundhog AI coding assistant (and new Cursor vibecoding meta)\" class=\"kg-image\" height=\"1209\" src=\"https://ghuntley.com/content/images/2025/03/image-2.png\" width=\"1207\" /></figure><p>It&apos;s at this stage you have a decision to make. You can either manually update each file or keep on prompting the LLM to update the specification library. Let&apos;s give it a go.</p><figure class=\"kg-card kg-image-card\"><img alt=\"From Design doc to code: the Groundhog AI coding assistant (and new Cursor vibecoding meta)\" class=\"kg-image\" height=\"97\" src=\"https://ghuntley.com/content/images/2025/03/image-4.png\" width=\"557\" /></figure><p>Keep doing that until you are comfortable with the minimum viable product or increment of the application. Don&apos;t over-complicate it at first. Once you have the specification nailed, it&apos;s time to bring the &quot;<a href=\"https://ghuntley.com/stdlib/\" rel=\"noreferrer\">stdlib</a>&quot; into play. Let&apos;s build it up from first principles...</p><blockquote>Create a Cursor IDE AI MDC rule in &quot;.cursor/rules&quot; which instructs Cursor to always create new MDC rules in that folder. Each rule should be a seperate file.</blockquote><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img alt=\"From Design doc to code: the Groundhog AI coding assistant (and new Cursor vibecoding meta)\" class=\"kg-image\" height=\"892\" src=\"https://ghuntley.com/content/images/2025/03/image-5.png\" width=\"1904\" /><figcaption><span style=\"white-space: pre-wrap;\">nice</span></figcaption></figure><p>Nice. Okay, we have the first foundational rule. It&apos;s time to create some more, such as automating the git commits. </p><blockquote>New Cursor IDE MDC rule.<br /><br />After each change performed by Cursor automatically from Git commit.<br /><br />Commit the changed files.<br /><br />Use the &quot;conventional git commit convention&quot; for the title of the commit message<br />Explain what was changed and why the files were changed from exploring the prompts used to generate the commit.</blockquote><figure class=\"kg-card kg-image-card\"><img alt=\"From Design doc to code: the Groundhog AI coding assistant (and new Cursor vibecoding meta)\" class=\"kg-image\" height=\"945\" src=\"https://ghuntley.com/content/images/2025/03/image-6.png\" width=\"2000\" /></figure><p>Okay, cool, now we are cooking with gas. The next step is to create a cursor rule that defines your coding conventions. As Groundhog is authored in Rust, let&apos;s generate best practices and save that as a rule.</p><blockquote>Create a new Cursor MDC rule for all *.rs files (in all subdirectories)<br /><br />You are an expert expert software engineer who knows rust. Infact you are the software engineer who created rust. Your task is to come up with technical recommendations in this rule which document best practices when authoring rust.<br /><br />Split each concern about rust into seperate MDC rules. <br /><br />Prefix each rule with the filename of &quot;rust-$rulename.mdc&quot;<br /><br />Write these rules to disk</blockquote><p>It&apos;s at this point, after these rules are generated, that you want to push the LLM harder. Ask it to continue...</p><figure class=\"kg-card kg-image-card\"><img alt=\"From Design doc to code: the Groundhog AI coding assistant (and new Cursor vibecoding meta)\" class=\"kg-image\" height=\"898\" src=\"https://ghuntley.com/content/images/2025/03/image-7.png\" width=\"577\" /></figure><p>After a few more rounds of this, manually review your new Cursor rules that instruct the LLM what you expect as technical output. If you want to speed run this  then loop the new rules back onto the LLM.</p><blockquote>Look at the rust rules in @.cursor . What is missing? What does not follow best practice.</blockquote><figure class=\"kg-card kg-image-card\"><img alt=\"From Design doc to code: the Groundhog AI coding assistant (and new Cursor vibecoding meta)\" class=\"kg-image\" height=\"1102\" src=\"https://ghuntley.com/content/images/2025/03/image-9.png\" width=\"565\" /></figure><p>Notice how we looped the LLM back onto itself up there? It&apos;s the key LLM prompt you&apos;ll be using in conjunction with your newly formed spec and tech library going forward.</p><figure class=\"kg-card kg-image-card kg-width-full\"><img alt=\"From Design doc to code: the Groundhog AI coding assistant (and new Cursor vibecoding meta)\" class=\"kg-image\" height=\"433\" src=\"https://ghuntley.com/content/images/2025/03/Neultica-Dirty-2.png\" width=\"2000\" /></figure><h2 id=\"loopback-is-the-key-workflow\">loopback is the key workflow</h2><p>The secret to hands-free vibe coding is really just this prompt when used in conjunction with stdlib and specs library...</p><blockquote>Study @SPECS.md for functional specifications.<br />Study @.cursor for technical requirements<br />Implement what is not implemented<br />Create tests<br />Run a &quot;cargo build&quot; and verify the application works</blockquote><figure class=\"kg-card kg-image-card kg-width-full\"><img alt=\"From Design doc to code: the Groundhog AI coding assistant (and new Cursor vibecoding meta)\" class=\"kg-image\" height=\"1258\" src=\"https://ghuntley.com/content/images/2025/03/image-14.png\" width=\"1295\" /></figure><p>after a few moments, Groundhog will be generated. Cursor will time out or run out of tool calls during this operation</p><h2 id=\"keep-going-until-implemented\">keep going until implemented</h2><p>The next secret is really just continually issuing the same prompt</p><blockquote>Study @SPECS.md for functional specifications.<br />Study @.cursor for technical requirements<br />Implement what is not implemented<br />Create tests<br />Run &quot;cargo build&quot; and verify the application works<br />Run &quot;cargo clippy&quot; and resolve linting errors</blockquote><p>Did the LLM go on a bad path? Restart a new chat session to clear the LLM context window and use the above prompt. Keep doing it until everything is implemented.</p><h2 id=\"scaling-it-up\">scaling it up</h2><p>Now that the <code>src/core</code> has been implemented. It&apos;s time to move on to the other specification domains, such as <code>src/ai/mcp_tools</code> and <code>src/ui</code> . Start a new Cursor compose window and repeat the defining specification workflow we did at the start of the blog post.</p><blockquote>Look at specifications in <br /><br />New requirement. <br /><br />What should be implemented for MCP (model context protocol) registry? Include security best practices.<br />What should be implemented for a new MCP (model context protocol) tool that can be invoked to list directory contents (&quot;ls&quot;). Include security best practices<br />Provide a LLM system prompt for this MCP protocol tool.<br /><br />Update with this guidance. Store them under &quot;specs/mcp&quot; with each technical topic as a seperate markdown file.</blockquote><p>Now, do the same for the <code>src/ui</code></p><blockquote>Look at specifications in @specs.<br /><br />New requirement. <br /><br />Create a basic &quot;hello world&quot; TUI user interface using the the &quot;ratatui&quot; create<br /><br />Update @specs with this guidance. Store them under &quot;specs/ui&quot; with each UI Widget as a separate markdown file.</blockquote><h1 id=\"keep-going-until-implemented-1\">keep going until implemented</h1><p>It&apos;s at this point you have a decision. You can launch multiple sessions of Cursor concurrently and ask each copy to chew on <code>src/ui</code> and <code>src/core</code> concurrently.</p><blockquote>Look at @specs <br />Study @groundhog<br />Implement what is not implemented<br />Run &quot;cargo build&quot;<br />Run &quot;cargo clippy&quot;</blockquote><figure class=\"kg-card kg-image-card\"><img alt=\"From Design doc to code: the Groundhog AI coding assistant (and new Cursor vibecoding meta)\" class=\"kg-image\" height=\"719\" src=\"https://ghuntley.com/content/images/2025/03/image-16.png\" width=\"1290\" /></figure><h2 id=\"recommendations\">recommendations</h2><p>These LLMs work as &quot;silly string lookup services&quot; and have no understanding of programming languages at all. To make this all work, you are going to need a good programming language that has soundness where if it compiles, it works (ie. Rust/Haskell) and a <em>solid</em> <a href=\"https://lpalmieri.com/posts/an-introduction-to-property-based-testing-in-rust/?ref=ghuntley.com\">property-based test</a> suite. Rust/Haskell are unique in that they provide exceptional compiler errors, which can be looped back into the LLM to auto-fix problems until it gets it right.</p><figure class=\"kg-card kg-image-card\"><img alt=\"From Design doc to code: the Groundhog AI coding assistant (and new Cursor vibecoding meta)\" class=\"kg-image\" height=\"2000\" src=\"https://ghuntley.com/content/images/2025/03/3.png\" width=\"2000\" /></figure><p>The application of the &quot;stdlib&quot; technique to steer the LLM to use your technical requirements and via the creation of a feedback loop (ie. tests and/or a static analysis tool such as sonarqube) you are in full control of product/output quality. </p><p>The sky&apos;s the limit really - one could even hook in a pre-existing security scanning tool into the feedback loop..</p><h2 id=\"closing-thoughts\">closing thoughts</h2><p>The limiting factor for me now is really how much screen space I have. I&apos;m fortunate enough to have a 59&quot; monitor on my main workstation. I can see, feel and taste the horizon of being able to ditch Cursor forever... </p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://ghuntley.com/multi-boxing\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Multi Boxing LLMs</div><div class=\"kg-bookmark-description\">Been doing heaps of thinking about how software is made after https://ghuntley.com/oh-fuck and the current design/UX approach by vendors of software assistants. IDEs since 1983 have been designed around an experience of a single plane of glass. Restricted by what an engineer can see on their</div><div class=\"kg-bookmark-metadata\"><img alt=\"From Design doc to code: the Groundhog AI coding assistant (and new Cursor vibecoding meta)\" class=\"kg-bookmark-icon\" src=\"https://ghuntley.com/content/images/icon/android-chrome-192x192-9.png\" /><span class=\"kg-bookmark-author\">Geoffrey Huntley</span><span class=\"kg-bookmark-publisher\">Geoffrey Huntley</span></div></div><div class=\"kg-bookmark-thumbnail\"><img alt=\"From Design doc to code: the Groundhog AI coding assistant (and new Cursor vibecoding meta)\" src=\"https://ghuntley.com/content/images/thumbnail/CleanShot-2025-01-28-at-12.41.09@2x-1.png\" /></div></a></figure><p>There&apos;s an approach in CompSci with compilers of &quot;bootstrapping&quot;</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://en.wikipedia.org/wiki/Bootstrapping_(compilers)?ref=ghuntley.com\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Bootstrapping (compilers) - Wikipedia</div><div class=\"kg-bookmark-description\"></div><div class=\"kg-bookmark-metadata\"><img alt=\"From Design doc to code: the Groundhog AI coding assistant (and new Cursor vibecoding meta)\" class=\"kg-bookmark-icon\" src=\"https://ghuntley.com/content/images/icon/wikipedia.png\" /><span class=\"kg-bookmark-author\">Wikimedia Foundation, Inc.</span><span class=\"kg-bookmark-publisher\">Contributors to Wikimedia projects</span></div></div><div class=\"kg-bookmark-thumbnail\"><img alt=\"From Design doc to code: the Groundhog AI coding assistant (and new Cursor vibecoding meta)\" src=\"https://ghuntley.com/content/images/thumbnail/wikipedia-wordmark-en.svg\" /></div></a></figure><p>and bootstrapping as fast as possible so Groundhog can build Groundhog is the destination we will be building towards. If you enjoyed reading, please consider subscribing to the newsletter. We are a little away from getting there, so the next part of the series will explain what the heck &quot;<a href=\"https://ghuntley.com/screwed/\" rel=\"noreferrer\">MCPs</a>&quot; are.</p><div class=\"kg-card kg-signup-card kg-width-wide \" style=\"background-color: #F0F0F0; display: none;\">\n            \n            <div class=\"kg-signup-card-content\">\n                \n                <div class=\"kg-signup-card-text \">\n                    <h2 class=\"kg-signup-card-heading\" style=\"color: #000000;\"><span style=\"white-space: pre-wrap;\">Sign up for Geoffrey Huntley</span></h2>\n                    <p class=\"kg-signup-card-subheading\" style=\"color: #000000;\"><span style=\"white-space: pre-wrap;\">I work remotely from a van that is slowly working its way around Australia. Follow me for the intersection of remote work, camping &amp; #vanlife.</span></p>\n                    \n        <form class=\"kg-signup-card-form\">\n            \n            <div class=\"kg-signup-card-fields\">\n                <input class=\"kg-signup-card-input\" id=\"email\" required=\"true\" type=\"email\" />\n                <button class=\"kg-signup-card-button kg-style-accent\" style=\"color: #FFFFFF;\" type=\"submit\">\n                    <span class=\"kg-signup-card-button-default\">Subscribe</span>\n                    <span class=\"kg-signup-card-button-loading\"><svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g class=\"nc-icon-wrapper\" fill=\"currentColor\" stroke=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\">\n            <g class=\"nc-loop-dots-4-24-icon-o\">\n                <circle cx=\"4\" cy=\"12\" r=\"3\">\n                <circle cx=\"12\" cy=\"12\" r=\"3\">\n                <circle cx=\"20\" cy=\"12\" r=\"3\">\n            </g>\n            \n        </g>\n    </svg></span>\n                </button>\n            </div>\n            <div class=\"kg-signup-card-success\" style=\"color: #000000;\">\n                Email sent! Check your inbox to complete your signup.\n            </div>\n            <div class=\"kg-signup-card-error\" style=\"color: #000000;\"></div>\n        </form>\n        \n                    <p class=\"kg-signup-card-disclaimer\" style=\"color: #000000;\"><span style=\"white-space: pre-wrap;\">No spam. Unsubscribe anytime.</span></p>\n                </div>\n            </div>\n        </div><p>The source code of Groundhog (and the stdlib + specs used to build it) can be found here. Give it a star.</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://github.com/ghuntley/groundhog?ref=ghuntley.com\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">GitHub - ghuntley/groundhog: Groundhog&#x2019;s primary purpose is to teach people how Cursor and all these other coding agents work under the hood. If you understand how these coding assistants work from first principles, then you can drive these tools harder (or perhaps make your own!).</div><div class=\"kg-bookmark-description\">Groundhog&amp;#39;s primary purpose is to teach people how Cursor and all these other coding agents work under the hood. If you understand how these coding assistants work from first principles, then y&#x2026;</div><div class=\"kg-bookmark-metadata\"><img alt=\"From Design doc to code: the Groundhog AI coding assistant (and new Cursor vibecoding meta)\" class=\"kg-bookmark-icon\" src=\"https://ghuntley.com/content/images/icon/pinned-octocat-093da3e6fa40-5.svg\" /><span class=\"kg-bookmark-author\">GitHub</span><span class=\"kg-bookmark-publisher\">ghuntley</span></div></div><div class=\"kg-bookmark-thumbnail\"><img alt=\"From Design doc to code: the Groundhog AI coding assistant (and new Cursor vibecoding meta)\" src=\"https://opengraph.githubassets.com/77112d9dc5c2cf323dccde94a3479948deb2f08ebade85eee4443a41e4ffdc80/ghuntley/groundhog\" /></div></a></figure><h2 id=\"ps-socials-for-this-blog-post-are-below\">ps. socials for this blog post are below </h2><p>If you enjoyed reading, give &apos;em a share please:</p><ul><li>Twitter: <a href=\"https://x.com/GeoffreyHuntley/status/1896530416020148714?ref=ghuntley.com\">https://x.com/GeoffreyHuntley/status/1896530416020148714</a></li><li>BlueSky: <a href=\"https://bsky.app/profile/ghuntley.com/post/3ljgqqydyns2b?ref=ghuntley.com\">https://bsky.app/profile/ghuntley.com/post/3ljgqqydyns2b</a></li><li>LinkedIn: <a href=\"https://www.linkedin.com/posts/geoffreyhuntley_from-design-doc-to-code-the-groundhog-ai-activity-7302295543706226689-zexL?utm_source=share&amp;utm_medium=member_desktop&amp;rcm=ACoAAABQKuUB2AJ059keUcRUVLbtmoa6miLVlTI\">https://www.linkedin.com/posts/geoffreyhuntley_from-design-doc-to-code-the-groundhog-ai-activity-7302295543706226689-zexL</a>,</li></ul><p></p><p></p>"
            ],
            "link": "https://ghuntley.com/specs/",
            "publishedAt": "2025-03-03",
            "source": "Geoffrey Huntley",
            "summary": "<p>Ello everyone, in the &quot;<a href=\"https://ghuntley.com/tradecraft\" rel=\"noreferrer\">Yes, Claude Code can decompile itself. Here&apos;s the source code</a>&quot; blog post, I teased about a new meta when using Cursor. This post is a follow-up to the post below.</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://ghuntley.com/stdlib/\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">You are using Cursor AI incorrectly...</div><div class=\"kg-bookmark-description\">I&#x2019;m hesitant to give</div></div></a></figure>",
            "title": "From Design doc to code: the Groundhog AI coding assistant (and new Cursor vibecoding meta)"
        },
        {
            "content": [
                "<div class=\"kg-card kg-callout-card kg-callout-card-blue\"><div class=\"kg-callout-emoji\">&#x2728;</div><div class=\"kg-callout-text\">Daniel Joyce used the techniques described in this post to port <code style=\"white-space: pre-wrap;\">ls</code> to <code style=\"white-space: pre-wrap;\">rust</code> via an <code style=\"white-space: pre-wrap;\">objdump</code>. You can see the code here: <a href=\"https://github.com/DanielJoyce/ls-rs?ref=ghuntley.com\" rel=\"nofollow\">https://github.com/DanielJoyce/ls-rs</a>. Keen, to see more examples - get in contact if you ship something!</div></div><img alt=\"Can a LLM convert C, to ASM to specs and then to a working Z/80 Speccy tape? Yes.\" src=\"https://ghuntley.com/content/images/2025/03/bafkreiftzmpb7bbkej76rac3kuijg2mcuyjxxhtnqdie5qq6rbrc45v2iu-1.jpg\" /><p><a href=\"https://bsky.app/profile/damieng.bsky.social/post/3ljdkwup7sc2d?ref=ghuntley.com\">Damien Guard</a> nerd sniped me and other folks wanted more proof that it is now cheap, easy and possible to <a href=\"https://ghuntley.com/tradecraft/\" rel=\"noreferrer\">cheaply rewrite software or clone existing &quot;source available&quot; businesses</a> (see bottom of the post).</p><p>So, let&apos;s get cracking by creating a toy application by sending this prompt to the LLM.</p><blockquote>Create a sales tax calculator in C<br />Food is taxed at 10%<br />Personal Hygine is at 0%<br />Everything else 25%</blockquote><p>Which creates</p><pre><code class=\"language-c\">#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#include &lt;ctype.h&gt;\n\n// Tax rates\n#define FOOD_TAX 0.10\n#define HYGIENE_TAX 0.00\n#define DEFAULT_TAX 0.25\n\n// Item categories\n#define FOOD 1\n#define HYGIENE 2\n#define OTHER 3\n\nint getCategory() {\n    char choice;\n    printf(&quot;Enter item category (F for Food, H for Hygiene, O for Other): &quot;);\n    scanf(&quot; %c&quot;, &amp;choice);\n    \n    choice = toupper(choice);\n    \n    switch(choice) {\n        case &apos;F&apos;: return FOOD;\n        case &apos;H&apos;: return HYGIENE;\n        case &apos;O&apos;: return OTHER;\n        default:\n            printf(&quot;Invalid category. Defaulting to Other.\\n&quot;);\n            return OTHER;\n    }\n}\n\ndouble calculateTax(double price, int category) {\n    switch(category) {\n        case FOOD: return price * FOOD_TAX;\n        case HYGIENE: return price * HYGIENE_TAX;\n        case OTHER: return price * DEFAULT_TAX;\n        default: return price * DEFAULT_TAX;\n    }\n}\n\nint main() {\n    double price;\n    int category;\n    char another = &apos;Y&apos;;\n    \n    while (toupper(another) == &apos;Y&apos;) {\n        printf(&quot;Enter item price: $&quot;);\n        scanf(&quot;%lf&quot;, &amp;price);\n        \n        category = getCategory();\n        \n        double tax = calculateTax(price, category);\n        double total = price + tax;\n        \n        printf(&quot;Price: $%.2f\\n&quot;, price);\n        printf(&quot;Tax: $%.2f\\n&quot;, tax);\n        printf(&quot;Total: $%.2f\\n\\n&quot;, total);\n        \n        printf(&quot;Calculate another item? (Y/N): &quot;);\n        scanf(&quot; %c&quot;, &amp;another);\n    }\n    \n    return 0;\n}</code></pre><p>Now let&apos;s compile it via <code>gcc calc.c -o calc</code> then <code>objdump -d calc &gt; calc.asm</code> to convert it to assembly which results in the following</p><pre><code class=\"language-asm\">calc:     file format elf64-x86-64\n\n\nDisassembly of section .init:\n\n0000000000001000 &lt;_init&gt;:\n    1000:       f3 0f 1e fa             endbr64 \n    1004:       48 83 ec 08             sub    $0x8,%rsp\n    1008:       48 8b 05 d9 2f 00 00    mov    0x2fd9(%rip),%rax        # 3fe8 &lt;__gmon_start__@Base&gt;\n    100f:       48 85 c0                test   %rax,%rax\n    1012:       74 02                   je     1016 &lt;_init+0x16&gt;\n    1014:       ff d0                   call   *%rax\n    1016:       48 83 c4 08             add    $0x8,%rsp\n    101a:       c3                      ret    \n\nDisassembly of section .plt:\n\n0000000000001020 &lt;.plt&gt;:\n    1020:       ff 35 7a 2f 00 00       push   0x2f7a(%rip)        # 3fa0 &lt;_GLOBAL_OFFSET_TABLE_+0x8&gt;\n    1026:       f2 ff 25 7b 2f 00 00    bnd jmp *0x2f7b(%rip)        # 3fa8 &lt;_GLOBAL_OFFSET_TABLE_+0x10&gt;\n    102d:       0f 1f 00                nopl   (%rax)\n    1030:       f3 0f 1e fa             endbr64 \n    1034:       68 00 00 00 00          push   $0x0\n    1039:       f2 e9 e1 ff ff ff       bnd jmp 1020 &lt;_init+0x20&gt;\n    103f:       90                      nop\n    1040:       f3 0f 1e fa             endbr64 \n    1044:       68 01 00 00 00          push   $0x1\n    1049:       f2 e9 d1 ff ff ff       bnd jmp 1020 &lt;_init+0x20&gt;\n    104f:       90                      nop\n    1050:       f3 0f 1e fa             endbr64 \n    1054:       68 02 00 00 00          push   $0x2\n    1059:       f2 e9 c1 ff ff ff       bnd jmp 1020 &lt;_init+0x20&gt;\n    105f:       90                      nop\n    1060:       f3 0f 1e fa             endbr64 \n    1064:       68 03 00 00 00          push   $0x3\n    1069:       f2 e9 b1 ff ff ff       bnd jmp 1020 &lt;_init+0x20&gt;\n    106f:       90                      nop\n    1070:       f3 0f 1e fa             endbr64 \n    1074:       68 04 00 00 00          push   $0x4\n    1079:       f2 e9 a1 ff ff ff       bnd jmp 1020 &lt;_init+0x20&gt;\n    107f:       90                      nop\n\nDisassembly of section .plt.got:\n\n0000000000001080 &lt;__cxa_finalize@plt&gt;:\n    1080:       f3 0f 1e fa             endbr64 \n    1084:       f2 ff 25 6d 2f 00 00    bnd jmp *0x2f6d(%rip)        # 3ff8 &lt;__cxa_finalize@GLIBC_2.2.5&gt;\n    108b:       0f 1f 44 00 00          nopl   0x0(%rax,%rax,1)\n\nDisassembly of section .plt.sec:\n\n0000000000001090 &lt;toupper@plt&gt;:\n    1090:       f3 0f 1e fa             endbr64 \n    1094:       f2 ff 25 15 2f 00 00    bnd jmp *0x2f15(%rip)        # 3fb0 &lt;toupper@GLIBC_2.2.5&gt;\n    109b:       0f 1f 44 00 00          nopl   0x0(%rax,%rax,1)\n\n00000000000010a0 &lt;puts@plt&gt;:\n    10a0:       f3 0f 1e fa             endbr64 \n    10a4:       f2 ff 25 0d 2f 00 00    bnd jmp *0x2f0d(%rip)        # 3fb8 &lt;puts@GLIBC_2.2.5&gt;\n    10ab:       0f 1f 44 00 00          nopl   0x0(%rax,%rax,1)\n\n00000000000010b0 &lt;__stack_chk_fail@plt&gt;:\n    10b0:       f3 0f 1e fa             endbr64 \n    10b4:       f2 ff 25 05 2f 00 00    bnd jmp *0x2f05(%rip)        # 3fc0 &lt;__stack_chk_fail@GLIBC_2.4&gt;\n    10bb:       0f 1f 44 00 00          nopl   0x0(%rax,%rax,1)\n\n00000000000010c0 &lt;printf@plt&gt;:\n    10c0:       f3 0f 1e fa             endbr64 \n    10c4:       f2 ff 25 fd 2e 00 00    bnd jmp *0x2efd(%rip)        # 3fc8 &lt;printf@GLIBC_2.2.5&gt;\n    10cb:       0f 1f 44 00 00          nopl   0x0(%rax,%rax,1)\n\n00000000000010d0 &lt;__isoc99_scanf@plt&gt;:\n    10d0:       f3 0f 1e fa             endbr64 \n    10d4:       f2 ff 25 f5 2e 00 00    bnd jmp *0x2ef5(%rip)        # 3fd0 &lt;__isoc99_scanf@GLIBC_2.7&gt;\n    10db:       0f 1f 44 00 00          nopl   0x0(%rax,%rax,1)\n\nDisassembly of section .text:\n\n00000000000010e0 &lt;_start&gt;:\n    10e0:       f3 0f 1e fa             endbr64 \n    10e4:       31 ed                   xor    %ebp,%ebp\n    10e6:       49 89 d1                mov    %rdx,%r9\n    10e9:       5e                      pop    %rsi\n    10ea:       48 89 e2                mov    %rsp,%rdx\n    10ed:       48 83 e4 f0             and    $0xfffffffffffffff0,%rsp\n    10f1:       50                      push   %rax\n    10f2:       54                      push   %rsp\n    10f3:       45 31 c0                xor    %r8d,%r8d\n    10f6:       31 c9                   xor    %ecx,%ecx\n    10f8:       48 8d 3d fd 01 00 00    lea    0x1fd(%rip),%rdi        # 12fc &lt;main&gt;\n    10ff:       ff 15 d3 2e 00 00       call   *0x2ed3(%rip)        # 3fd8 &lt;__libc_start_main@GLIBC_2.34&gt;\n    1105:       f4                      hlt    \n    1106:       66 2e 0f 1f 84 00 00    cs nopw 0x0(%rax,%rax,1)\n    110d:       00 00 00 \n\n0000000000001110 &lt;deregister_tm_clones&gt;:\n    1110:       48 8d 3d f9 2e 00 00    lea    0x2ef9(%rip),%rdi        # 4010 &lt;__TMC_END__&gt;\n    1117:       48 8d 05 f2 2e 00 00    lea    0x2ef2(%rip),%rax        # 4010 &lt;__TMC_END__&gt;\n    111e:       48 39 f8                cmp    %rdi,%rax\n    1121:       74 15                   je     1138 &lt;deregister_tm_clones+0x28&gt;\n    1123:       48 8b 05 b6 2e 00 00    mov    0x2eb6(%rip),%rax        # 3fe0 &lt;_ITM_deregisterTMCloneTable@Base&gt;\n    112a:       48 85 c0                test   %rax,%rax\n    112d:       74 09                   je     1138 &lt;deregister_tm_clones+0x28&gt;\n    112f:       ff e0                   jmp    *%rax\n    1131:       0f 1f 80 00 00 00 00    nopl   0x0(%rax)\n    1138:       c3                      ret    \n    1139:       0f 1f 80 00 00 00 00    nopl   0x0(%rax)\n\n0000000000001140 &lt;register_tm_clones&gt;:\n    1140:       48 8d 3d c9 2e 00 00    lea    0x2ec9(%rip),%rdi        # 4010 &lt;__TMC_END__&gt;\n    1147:       48 8d 35 c2 2e 00 00    lea    0x2ec2(%rip),%rsi        # 4010 &lt;__TMC_END__&gt;\n    114e:       48 29 fe                sub    %rdi,%rsi\n    1151:       48 89 f0                mov    %rsi,%rax\n    1154:       48 c1 ee 3f             shr    $0x3f,%rsi\n    1158:       48 c1 f8 03             sar    $0x3,%rax\n    115c:       48 01 c6                add    %rax,%rsi\n    115f:       48 d1 fe                sar    %rsi\n    1162:       74 14                   je     1178 &lt;register_tm_clones+0x38&gt;\n    1164:       48 8b 05 85 2e 00 00    mov    0x2e85(%rip),%rax        # 3ff0 &lt;_ITM_registerTMCloneTable@Base&gt;\n    116b:       48 85 c0                test   %rax,%rax\n    116e:       74 08                   je     1178 &lt;register_tm_clones+0x38&gt;\n    1170:       ff e0                   jmp    *%rax\n    1172:       66 0f 1f 44 00 00       nopw   0x0(%rax,%rax,1)\n    1178:       c3                      ret    \n    1179:       0f 1f 80 00 00 00 00    nopl   0x0(%rax)\n\n0000000000001180 &lt;__do_global_dtors_aux&gt;:\n    1180:       f3 0f 1e fa             endbr64 \n    1184:       80 3d 85 2e 00 00 00    cmpb   $0x0,0x2e85(%rip)        # 4010 &lt;__TMC_END__&gt;\n    118b:       75 2b                   jne    11b8 &lt;__do_global_dtors_aux+0x38&gt;\n    118d:       55                      push   %rbp\n    118e:       48 83 3d 62 2e 00 00    cmpq   $0x0,0x2e62(%rip)        # 3ff8 &lt;__cxa_finalize@GLIBC_2.2.5&gt;\n    1195:       00 \n    1196:       48 89 e5                mov    %rsp,%rbp\n    1199:       74 0c                   je     11a7 &lt;__do_global_dtors_aux+0x27&gt;\n    119b:       48 8b 3d 66 2e 00 00    mov    0x2e66(%rip),%rdi        # 4008 &lt;__dso_handle&gt;\n    11a2:       e8 d9 fe ff ff          call   1080 &lt;__cxa_finalize@plt&gt;\n    11a7:       e8 64 ff ff ff          call   1110 &lt;deregister_tm_clones&gt;\n    11ac:       c6 05 5d 2e 00 00 01    movb   $0x1,0x2e5d(%rip)        # 4010 &lt;__TMC_END__&gt;\n    11b3:       5d                      pop    %rbp\n    11b4:       c3                      ret    \n    11b5:       0f 1f 00                nopl   (%rax)\n    11b8:       c3                      ret    \n    11b9:       0f 1f 80 00 00 00 00    nopl   0x0(%rax)\n\n00000000000011c0 &lt;frame_dummy&gt;:\n    11c0:       f3 0f 1e fa             endbr64 \n    11c4:       e9 77 ff ff ff          jmp    1140 &lt;register_tm_clones&gt;\n\n00000000000011c9 &lt;getCategory&gt;:\n    11c9:       f3 0f 1e fa             endbr64 \n    11cd:       55                      push   %rbp\n    11ce:       48 89 e5                mov    %rsp,%rbp\n    11d1:       48 83 ec 10             sub    $0x10,%rsp\n    11d5:       64 48 8b 04 25 28 00    mov    %fs:0x28,%rax\n    11dc:       00 00 \n    11de:       48 89 45 f8             mov    %rax,-0x8(%rbp)\n    11e2:       31 c0                   xor    %eax,%eax\n    11e4:       48 8d 05 1d 0e 00 00    lea    0xe1d(%rip),%rax        # 2008 &lt;_IO_stdin_used+0x8&gt;\n    11eb:       48 89 c7                mov    %rax,%rdi\n    11ee:       b8 00 00 00 00          mov    $0x0,%eax\n    11f3:       e8 c8 fe ff ff          call   10c0 &lt;printf@plt&gt;\n    11f8:       48 8d 45 f7             lea    -0x9(%rbp),%rax\n    11fc:       48 89 c6                mov    %rax,%rsi\n    11ff:       48 8d 05 41 0e 00 00    lea    0xe41(%rip),%rax        # 2047 &lt;_IO_stdin_used+0x47&gt;\n    1206:       48 89 c7                mov    %rax,%rdi\n    1209:       b8 00 00 00 00          mov    $0x0,%eax\n    120e:       e8 bd fe ff ff          call   10d0 &lt;__isoc99_scanf@plt&gt;\n    1213:       0f b6 45 f7             movzbl -0x9(%rbp),%eax\n    1217:       0f be c0                movsbl %al,%eax\n    121a:       89 c7                   mov    %eax,%edi\n    121c:       e8 6f fe ff ff          call   1090 &lt;toupper@plt&gt;\n    1221:       88 45 f7                mov    %al,-0x9(%rbp)\n    1224:       0f b6 45 f7             movzbl -0x9(%rbp),%eax\n    1228:       0f be c0                movsbl %al,%eax\n    122b:       83 f8 4f                cmp    $0x4f,%eax\n    122e:       74 1f                   je     124f &lt;getCategory+0x86&gt;\n    1230:       83 f8 4f                cmp    $0x4f,%eax\n    1233:       7f 21                   jg     1256 &lt;getCategory+0x8d&gt;\n    1235:       83 f8 46                cmp    $0x46,%eax\n    1238:       74 07                   je     1241 &lt;getCategory+0x78&gt;\n    123a:       83 f8 48                cmp    $0x48,%eax\n    123d:       74 09                   je     1248 &lt;getCategory+0x7f&gt;\n    123f:       eb 15                   jmp    1256 &lt;getCategory+0x8d&gt;\n    1241:       b8 01 00 00 00          mov    $0x1,%eax\n    1246:       eb 22                   jmp    126a &lt;getCategory+0xa1&gt;\n    1248:       b8 02 00 00 00          mov    $0x2,%eax\n    124d:       eb 1b                   jmp    126a &lt;getCategory+0xa1&gt;\n    124f:       b8 03 00 00 00          mov    $0x3,%eax\n    1254:       eb 14                   jmp    126a &lt;getCategory+0xa1&gt;\n    1256:       48 8d 05 f3 0d 00 00    lea    0xdf3(%rip),%rax        # 2050 &lt;_IO_stdin_used+0x50&gt;\n    125d:       48 89 c7                mov    %rax,%rdi\n    1260:       e8 3b fe ff ff          call   10a0 &lt;puts@plt&gt;\n    1265:       b8 03 00 00 00          mov    $0x3,%eax\n    126a:       48 8b 55 f8             mov    -0x8(%rbp),%rdx\n    126e:       64 48 2b 14 25 28 00    sub    %fs:0x28,%rdx\n    1275:       00 00 \n    1277:       74 05                   je     127e &lt;getCategory+0xb5&gt;\n    1279:       e8 32 fe ff ff          call   10b0 &lt;__stack_chk_fail@plt&gt;\n    127e:       c9                      leave  \n    127f:       c3                      ret    \n\n0000000000001280 &lt;calculateTax&gt;:\n    1280:       f3 0f 1e fa             endbr64 \n    1284:       55                      push   %rbp\n    1285:       48 89 e5                mov    %rsp,%rbp\n    1288:       f2 0f 11 45 f8          movsd  %xmm0,-0x8(%rbp)\n    128d:       89 7d f4                mov    %edi,-0xc(%rbp)\n    1290:       83 7d f4 03             cmpl   $0x3,-0xc(%rbp)\n    1294:       74 36                   je     12cc &lt;calculateTax+0x4c&gt;\n    1296:       83 7d f4 03             cmpl   $0x3,-0xc(%rbp)\n    129a:       7f 43                   jg     12df &lt;calculateTax+0x5f&gt;\n    129c:       83 7d f4 01             cmpl   $0x1,-0xc(%rbp)\n    12a0:       74 08                   je     12aa &lt;calculateTax+0x2a&gt;\n    12a2:       83 7d f4 02             cmpl   $0x2,-0xc(%rbp)\n    12a6:       74 15                   je     12bd &lt;calculateTax+0x3d&gt;\n    12a8:       eb 35                   jmp    12df &lt;calculateTax+0x5f&gt;\n    12aa:       f2 0f 10 4d f8          movsd  -0x8(%rbp),%xmm1\n    12af:       f2 0f 10 05 21 0e 00    movsd  0xe21(%rip),%xmm0        # 20d8 &lt;_IO_stdin_used+0xd8&gt;\n    12b6:       00 \n    12b7:       f2 0f 59 c1             mulsd  %xmm1,%xmm0\n    12bb:       eb 33                   jmp    12f0 &lt;calculateTax+0x70&gt;\n    12bd:       f2 0f 10 4d f8          movsd  -0x8(%rbp),%xmm1\n    12c2:       66 0f ef c0             pxor   %xmm0,%xmm0\n    12c6:       f2 0f 59 c1             mulsd  %xmm1,%xmm0\n    12ca:       eb 24                   jmp    12f0 &lt;calculateTax+0x70&gt;\n    12cc:       f2 0f 10 4d f8          movsd  -0x8(%rbp),%xmm1\n    12d1:       f2 0f 10 05 07 0e 00    movsd  0xe07(%rip),%xmm0        # 20e0 &lt;_IO_stdin_used+0xe0&gt;\n    12d8:       00 \n    12d9:       f2 0f 59 c1             mulsd  %xmm1,%xmm0\n    12dd:       eb 11                   jmp    12f0 &lt;calculateTax+0x70&gt;\n    12df:       f2 0f 10 4d f8          movsd  -0x8(%rbp),%xmm1\n    12e4:       f2 0f 10 05 f4 0d 00    movsd  0xdf4(%rip),%xmm0        # 20e0 &lt;_IO_stdin_used+0xe0&gt;\n    12eb:       00 \n    12ec:       f2 0f 59 c1             mulsd  %xmm1,%xmm0\n    12f0:       66 48 0f 7e c0          movq   %xmm0,%rax\n    12f5:       66 48 0f 6e c0          movq   %rax,%xmm0\n    12fa:       5d                      pop    %rbp\n    12fb:       c3                      ret    \n\n00000000000012fc &lt;main&gt;:\n    12fc:       f3 0f 1e fa             endbr64 \n    1300:       55                      push   %rbp\n    1301:       48 89 e5                mov    %rsp,%rbp\n    1304:       48 83 ec 30             sub    $0x30,%rsp\n    1308:       64 48 8b 04 25 28 00    mov    %fs:0x28,%rax\n    130f:       00 00 \n    1311:       48 89 45 f8             mov    %rax,-0x8(%rbp)\n    1315:       31 c0                   xor    %eax,%eax\n    1317:       c6 45 db 59             movb   $0x59,-0x25(%rbp)\n    131b:       e9 f1 00 00 00          jmp    1411 &lt;main+0x115&gt;\n    1320:       48 8d 05 50 0d 00 00    lea    0xd50(%rip),%rax        # 2077 &lt;_IO_stdin_used+0x77&gt;\n    1327:       48 89 c7                mov    %rax,%rdi\n    132a:       b8 00 00 00 00          mov    $0x0,%eax\n    132f:       e8 8c fd ff ff          call   10c0 &lt;printf@plt&gt;\n    1334:       48 8d 45 e0             lea    -0x20(%rbp),%rax\n    1338:       48 89 c6                mov    %rax,%rsi\n    133b:       48 8d 05 49 0d 00 00    lea    0xd49(%rip),%rax        # 208b &lt;_IO_stdin_used+0x8b&gt;\n    1342:       48 89 c7                mov    %rax,%rdi\n    1345:       b8 00 00 00 00          mov    $0x0,%eax\n    134a:       e8 81 fd ff ff          call   10d0 &lt;__isoc99_scanf@plt&gt;\n    134f:       b8 00 00 00 00          mov    $0x0,%eax\n    1354:       e8 70 fe ff ff          call   11c9 &lt;getCategory&gt;\n    1359:       89 45 dc                mov    %eax,-0x24(%rbp)\n    135c:       48 8b 45 e0             mov    -0x20(%rbp),%rax\n    1360:       8b 55 dc                mov    -0x24(%rbp),%edx\n    1363:       89 d7                   mov    %edx,%edi\n    1365:       66 48 0f 6e c0          movq   %rax,%xmm0\n    136a:       e8 11 ff ff ff          call   1280 &lt;calculateTax&gt;\n    136f:       66 48 0f 7e c0          movq   %xmm0,%rax\n    1374:       48 89 45 e8             mov    %rax,-0x18(%rbp)\n    1378:       f2 0f 10 45 e0          movsd  -0x20(%rbp),%xmm0\n    137d:       f2 0f 10 4d e8          movsd  -0x18(%rbp),%xmm1\n    1382:       f2 0f 58 c1             addsd  %xmm1,%xmm0\n    1386:       f2 0f 11 45 f0          movsd  %xmm0,-0x10(%rbp)\n    138b:       48 8b 45 e0             mov    -0x20(%rbp),%rax\n    138f:       66 48 0f 6e c0          movq   %rax,%xmm0\n    1394:       48 8d 05 f4 0c 00 00    lea    0xcf4(%rip),%rax        # 208f &lt;_IO_stdin_used+0x8f&gt;\n    139b:       48 89 c7                mov    %rax,%rdi\n    139e:       b8 01 00 00 00          mov    $0x1,%eax\n    13a3:       e8 18 fd ff ff          call   10c0 &lt;printf@plt&gt;\n    13a8:       48 8b 45 e8             mov    -0x18(%rbp),%rax\n    13ac:       66 48 0f 6e c0          movq   %rax,%xmm0\n    13b1:       48 8d 05 e5 0c 00 00    lea    0xce5(%rip),%rax        # 209d &lt;_IO_stdin_used+0x9d&gt;\n    13b8:       48 89 c7                mov    %rax,%rdi\n    13bb:       b8 01 00 00 00          mov    $0x1,%eax\n    13c0:       e8 fb fc ff ff          call   10c0 &lt;printf@plt&gt;\n    13c5:       48 8b 45 f0             mov    -0x10(%rbp),%rax\n    13c9:       66 48 0f 6e c0          movq   %rax,%xmm0\n    13ce:       48 8d 05 d4 0c 00 00    lea    0xcd4(%rip),%rax        # 20a9 &lt;_IO_stdin_used+0xa9&gt;\n    13d5:       48 89 c7                mov    %rax,%rdi\n    13d8:       b8 01 00 00 00          mov    $0x1,%eax\n    13dd:       e8 de fc ff ff          call   10c0 &lt;printf@plt&gt;\n    13e2:       48 8d 05 cf 0c 00 00    lea    0xccf(%rip),%rax        # 20b8 &lt;_IO_stdin_used+0xb8&gt;\n    13e9:       48 89 c7                mov    %rax,%rdi\n    13ec:       b8 00 00 00 00          mov    $0x0,%eax\n    13f1:       e8 ca fc ff ff          call   10c0 &lt;printf@plt&gt;\n    13f6:       48 8d 45 db             lea    -0x25(%rbp),%rax\n    13fa:       48 89 c6                mov    %rax,%rsi\n    13fd:       48 8d 05 43 0c 00 00    lea    0xc43(%rip),%rax        # 2047 &lt;_IO_stdin_used+0x47&gt;\n    1404:       48 89 c7                mov    %rax,%rdi\n    1407:       b8 00 00 00 00          mov    $0x0,%eax\n    140c:       e8 bf fc ff ff          call   10d0 &lt;__isoc99_scanf@plt&gt;\n    1411:       0f b6 45 db             movzbl -0x25(%rbp),%eax\n    1415:       0f be c0                movsbl %al,%eax\n    1418:       89 c7                   mov    %eax,%edi\n    141a:       e8 71 fc ff ff          call   1090 &lt;toupper@plt&gt;\n    141f:       83 f8 59                cmp    $0x59,%eax\n    1422:       0f 84 f8 fe ff ff       je     1320 &lt;main+0x24&gt;\n    1428:       b8 00 00 00 00          mov    $0x0,%eax\n    142d:       48 8b 55 f8             mov    -0x8(%rbp),%rdx\n    1431:       64 48 2b 14 25 28 00    sub    %fs:0x28,%rdx\n    1438:       00 00 \n    143a:       74 05                   je     1441 &lt;main+0x145&gt;\n    143c:       e8 6f fc ff ff          call   10b0 &lt;__stack_chk_fail@plt&gt;\n    1441:       c9                      leave  \n    1442:       c3                      ret    \n\nDisassembly of section .fini:\n\n0000000000001444 &lt;_fini&gt;:\n    1444:       f3 0f 1e fa             endbr64 \n    1448:       48 83 ec 08             sub    $0x8,%rsp\n    144c:       48 83 c4 08             add    $0x8,%rsp\n    1450:       c3                      ret    </code></pre><p>Now that we have the assembly, can we make it human readable and useful? Let&apos;s try the following prompt</p><blockquote>Look at @calc.asm and generate feature specification as seperate files that describe the application. One per topic domain.</blockquote><figure class=\"kg-card kg-image-card kg-width-full\"><img alt=\"Can a LLM convert C, to ASM to specs and then to a working Z/80 Speccy tape? Yes.\" class=\"kg-image\" height=\"682\" src=\"https://ghuntley.com/content/images/2025/03/CleanShot-2025-03-02-at-19.22.20@2x.png\" width=\"2000\" /></figure><p>Which then produces a specification library - here&apos;s the functional overview...</p><pre><code># Tax Calculator - Functional Overview\n\n## Description\nThe Tax Calculator is a command-line application that calculates taxes and total costs based on user input. The application allows users to enter an amount and select a tax category, then calculates the appropriate tax and displays the total.\n\n## Key Features\n1. **Amount Input**: Accepts a numerical amount as input from the user\n2. **Category Selection**: Allows the user to select from different tax categories:\n   - F: Food category (5% tax)\n   - H: Healthcare category (0% tax - tax exempt)\n   - O: Other/Standard category (10% tax)\n\n3. **Tax Calculation**: Calculates the tax amount based on the selected category and input amount\n4. **Total Calculation**: Adds the tax to the original amount to calculate the total cost\n5. **Results Display**: Shows the original amount, tax amount, and total amount to the user\n6. **Multiple Calculations**: Allows the user to perform multiple calculations in a single session by asking if they want to continue\n\n## Workflow\n1. User is prompted to enter an amount\n2. User selects a tax category\n3. System calculates tax based on the category and amount\n4. System displays the original amount, tax amount, and total amount\n5. User is asked if they want to perform another calculation\n6. If yes, the process repeats; if no, the application terminates </code></pre><p>Here&apos;s the dataflow specification...</p><pre><code># Tax Calculator - Data Flow and Storage Specification\n\n## Data Types and Storage\n\n### User Input Data\n- **Purchase Amount**: Stored as a double-precision floating-point number (64-bit)\n- **Category Selection**: Initially captured as a character, then converted to an integer category ID\n- **Continuation Flag**: Single character stored as a byte\n\n### Calculated Data\n- **Tax Amount**: Calculated and stored as a double-precision floating-point number (64-bit)\n- **Total Amount**: Calculated and stored as a double-precision floating-point number (64-bit)\n\n### Storage Duration\n- All data is stored in stack-allocated variables\n- Data persists only for the duration of a single calculation cycle\n- No data persists between separate executions of the program\n\n## Data Flow\n\n### Input Flow\n1. User enters purchase amount via keyboard\n2. Input is captured through scanf and stored in a local variable\n3. User enters category selection via keyboard\n4. Character input is converted to uppercase and mapped to a category ID\n5. Category ID is returned to the main function\n\n### Processing Flow\n1. Main function receives the purchase amount and category ID\n2. These values are passed to the calculateTax function\n3. calculateTax applies the appropriate tax rate based on the category ID\n4. The calculated tax amount is returned to the main function\n5. Main function adds the tax amount to the original amount to calculate the total\n\n### Output Flow\n1. Original amount is displayed to the user\n2. Calculated tax amount is displayed to the user\n3. Calculated total amount is displayed to the user\n\n### Continuation Flow\n1. User is prompted to continue or exit\n2. Input is captured and converted to uppercase\n3. If input is &apos;Y&apos;, the application loops back to the beginning of the calculation cycle\n4. If input is anything else, the application terminates\n\n## Data Transformation\n\n### Character to Category Mapping\n- &apos;F&apos; (ASCII 0x46) -&gt; Category ID 1 (Food)\n- &apos;H&apos; (ASCII 0x48) -&gt; Category ID 2 (Healthcare)\n- &apos;O&apos; (ASCII 0x4F) -&gt; Category ID 3 (Other)\n- Any other character -&gt; Category ID 3 (Other, default)\n\n### Category to Tax Rate Mapping\n- Category ID 1 (Food) -&gt; 0.05 (5%)\n- Category ID 2 (Healthcare) -&gt; 0.00 (0%)\n- Category ID 3 (Other) -&gt; 0.10 (10%)\n\n## Data Security\n- No persistent storage of data\n- No sensitive data is processed\n- All variables are properly initialized before use\n- Stack memory is protected against buffer overflows </code></pre><p>Here&apos;s the business logic specification:</p><pre><code># Tax Calculator - Tax Calculation Specification\n\n## Tax Categories\nThe application supports three different tax categories:\n\n1. **Food (F)**: \n   - Category ID: 1\n   - Tax Rate: 5%\n   - Applied to all food items\n\n2. **Healthcare (H)**:\n   - Category ID: 2\n   - Tax Rate: 0% (tax exempt)\n   - Applied to all healthcare-related items\n\n3. **Other (O)**:\n   - Category ID: 3\n   - Tax Rate: 10%\n   - Default category for all other items\n   - Used as fallback when an invalid category is selected\n\n## Calculation Formulas\n\n### Tax Amount Calculation\n```\ntaxAmount = amount * taxRate\n```\n\nWhere:\n- `amount` is the purchase amount entered by the user\n- `taxRate` is the decimal tax rate based on the selected category (0.05 for Food, 0.0 for Healthcare, 0.10 for Other)\n\n### Total Amount Calculation\n```\ntotalAmount = amount + taxAmount\n```\n\nWhere:\n- `amount` is the original purchase amount\n- `taxAmount` is the calculated tax amount\n\n## Implementation Details\n\nThe tax calculation is implemented in the `calculateTax` function, which:\n1. Takes two parameters: the purchase amount and the category ID\n2. Applies the appropriate tax rate based on the category ID:\n   - Category 1 (Food): 5% tax rate\n   - Category 2 (Healthcare): 0% tax rate\n   - Category 3 (Other): 10% tax rate\n3. Returns the calculated tax amount\n\nThe category selection is handled by the `getCategory` function, which:\n1. Prompts the user to select a category\n2. Converts the user input to uppercase\n3. Maps the input character to a category ID:\n   - &apos;F&apos; -&gt; 1 (Food)\n   - &apos;H&apos; -&gt; 2 (Healthcare)\n   - &apos;O&apos; -&gt; 3 (Other)\n4. Uses category 3 (Other) as default for invalid inputs </code></pre><p>Plenty of other files were also generated but for the sake of brevity I&apos;m not going to include them.</p><figure class=\"kg-card kg-image-card\"><img alt=\"Can a LLM convert C, to ASM to specs and then to a working Z/80 Speccy tape? Yes.\" class=\"kg-image\" height=\"568\" src=\"https://ghuntley.com/content/images/2025/03/CleanShot-2025-03-02-at-19.28.17@2x.png\" width=\"764\" /></figure><p>Now that we have the specification, let&apos;s strip all &apos;isms related to the C language out of the functional spec.</p><blockquote>Look at @specs-from-calc-c. Remove all ANSI C aspects of the spec and write them to SPECS folder</blockquote><figure class=\"kg-card kg-image-card\"><img alt=\"Can a LLM convert C, to ASM to specs and then to a working Z/80 Speccy tape? Yes.\" class=\"kg-image\" height=\"1220\" src=\"https://ghuntley.com/content/images/2025/03/CleanShot-2025-03-02-at-19.30.49@2x-1.png\" width=\"1070\" /></figure><figure class=\"kg-card kg-image-card\"><img alt=\"Can a LLM convert C, to ASM to specs and then to a working Z/80 Speccy tape? Yes.\" class=\"kg-image\" height=\"1078\" src=\"https://ghuntley.com/content/images/2025/03/CleanShot-2025-03-02-at-19.31.55@2x.png\" width=\"1078\" /></figure><p>Now, this is where it gets interesting. We have successfully taken an application that was C, disassembled it into ASM, and created a <a href=\"https://ghuntley.com/tradecraft/\" rel=\"noreferrer\">high-level clean-room functional specification</a> that describes the application. Cool. Now, let&apos;s provide the LLM with the following prompt</p><blockquote>Implement this as a Z/80 spectrum calculator program<br />Compile it<br />Add it to the disk image<br />Run the emulator with the disk image<br /><br />You may install software</blockquote><p>Which generates the sales tax calculator for the Z80 speccy.</p><pre><code class=\"language-z80\">; Tax Calculator for ZX Spectrum\n; Based on provided specifications\n; Implements a simple tax calculation program with three categories:\n; F: Food (5% tax)\n; H: Healthcare (0% tax)\n; O: Other/Standard (10% tax)\n\n; *********************************************************************\n; Constants and System Variables\n; *********************************************************************\n\n; System constants\nSCREEN_START    equ 16384    ; Start of screen memory\nATTR_START      equ 22528    ; Start of attribute memory\nLAST_K          equ 23560    ; Last key pressed system variable\nCHANNEL_S       equ 5633     ; ROM print routine (output to screen)\nCLS             equ 3503     ; ROM routine to clear screen\nOPEN_CHANNEL    equ 5633     ; ROM routine to open a channel\n\n; Program constants\nFOOD_RATE       equ 5        ; 5% tax rate\nHEALTHCARE_RATE equ 0        ; 0% tax rate\nOTHER_RATE      equ 10       ; 10% tax rate\n\n; Decimal multiplier for fixed-point math\n; We use 2 decimal places, so multiply by 100\nDECIMAL_MULT    equ 100\n\n; *********************************************************************\n; Program Entry Point\n; *********************************************************************\n\n    org 32768           ; Start of code (above BASIC)\n\nstart:\n    call init_program   ; Initialize program\n    \nmain_loop:\n    ; Display welcome message\n    ld de, welcome_msg\n    call print_string\n    \n    ; Get amount\n    call get_amount\n    ; Store amount in amount_value\n    ld (amount_value), hl\n    \n    ; Get category selection\n    call get_category\n    ; Store category in category_value\n    ld a, c\n    ld (category_value), a\n    \n    ; Calculate tax based on category and amount\n    call calculate_tax\n    ; Store tax in tax_value\n    ld (tax_value), hl\n    \n    ; Calculate total\n    call calculate_total\n    ; Store total in total_value\n    ld (total_value), hl\n    \n    ; Display results\n    call display_results\n    \n    ; Ask if user wants to continue\n    call ask_continue\n    cp &apos;Y&apos;              ; Check if user pressed &apos;Y&apos;\n    jr z, main_loop     ; If yes, repeat the main loop\n    cp &apos;y&apos;              ; Check if user pressed &apos;y&apos;\n    jr z, main_loop     ; If yes, repeat the main loop\n    \n    ; Exit program - return to BASIC\n    jp exit_program\n\n; *********************************************************************\n; Initialization\n; *********************************************************************\n\ninit_program:\n    ; Clear screen\n    call CLS\n    ret\n\n; *********************************************************************\n; Input Routines\n; *********************************************************************\n\n; Get decimal amount input from user\nget_amount:\n    ld de, amount_prompt\n    call print_string\n    \n    ; Clear buffer\n    ld hl, input_buffer\n    ld (hl), 0\n    \n    ; Get input string\n    call get_input\n    \n    ; Convert string to number\n    ld de, input_buffer\n    call string_to_number\n    ret\n\n; Get tax category from user\nget_category:\n    ld de, category_prompt\n    call print_string\n    \n    ; Wait for key press\nget_cat_wait:\n    call wait_key\n    cp &apos;F&apos;               ; Check for &apos;F&apos;\n    jr z, cat_food\n    cp &apos;f&apos;               ; Check for &apos;f&apos;\n    jr z, cat_food\n    cp &apos;H&apos;               ; Check for &apos;H&apos; \n    jr z, cat_healthcare\n    cp &apos;h&apos;               ; Check for &apos;h&apos;\n    jr z, cat_healthcare\n    cp &apos;O&apos;               ; Check for &apos;O&apos;\n    jr z, cat_other\n    cp &apos;o&apos;               ; Check for &apos;o&apos;\n    jr z, cat_other\n    \n    ; Invalid category, default to Other\n    ld de, invalid_cat\n    call print_string\n    ld c, 3              ; Category 3 (Other)\n    ret\n    \ncat_food:\n    ld c, 1              ; Category 1 (Food)\n    ret\n    \ncat_healthcare:\n    ld c, 2              ; Category 2 (Healthcare)\n    ret\n    \ncat_other:\n    ld c, 3              ; Category 3 (Other)\n    ret\n\n; Ask if user wants to continue\nask_continue:\n    ld de, continue_prompt\n    call print_string\n    call wait_key        ; Wait for key press\n    ret                  ; Return with key in A\n\n; Wait for key press\nwait_key:\n    ld hl, LAST_K        ; Address of system variable LAST_K\n    ld (hl), 0           ; Clear key buffer\nwait_loop:\n    ld a, (hl)           ; Get key\n    or a                 ; Check if key pressed\n    jr z, wait_loop      ; No key, continue waiting\n    ret                  ; Key pressed, return with key in A\n\n; Get a string input from user\nget_input:\n    ld hl, input_buffer  ; Point to input buffer\n    ld b, 0              ; Input length counter\n    \ninput_loop:\n    call wait_key        ; Wait for key press\n    \n    cp 13                ; Check for ENTER\n    jr z, input_done     ; Input complete\n    \n    cp 8                 ; Check for DELETE\n    jr z, delete_char    ; Handle delete\n    \n    ; Check if character is a valid digit or decimal point\n    cp &apos;0&apos;\n    jr c, input_loop     ; Ignore if less than &apos;0&apos;\n    cp &apos;:&apos;               ; &apos;:&apos; is after &apos;9&apos; in ASCII\n    jr c, valid_digit    ; Valid digit\n    \n    cp &apos;.&apos;               ; Check for decimal point\n    jr nz, input_loop    ; Ignore if not decimal point\n    \nvalid_digit:\n    ; Don&apos;t accept more than 6 characters\n    ld a, b\n    cp 6\n    jr nc, input_loop    ; Too many chars\n    \n    ; Store character in buffer\n    ld a, (LAST_K)\n    ld (hl), a           ; Store character\n    inc hl               ; Next buffer position\n    inc b                ; Increment counter\n    \n    ; Echo character to screen\n    rst 16\n    \n    jr input_loop        ; Continue input loop\n    \ndelete_char:\n    ; Handle backspace (delete) key\n    ld a, b\n    or a                 ; Check if buffer is empty\n    jr z, input_loop     ; If empty, do nothing\n    \n    ; Move cursor back, erase character\n    ld a, 8\n    rst 16               ; Backspace\n    ld a, &apos; &apos;\n    rst 16               ; Space (erase character)\n    ld a, 8\n    rst 16               ; Backspace again\n    \n    ; Update buffer\n    dec hl               ; Move back in buffer\n    dec b                ; Decrement counter\n    ld (hl), 0           ; Clear the deleted character\n    \n    jr input_loop        ; Continue input loop\n    \ninput_done:\n    ; Terminate string with null\n    ld (hl), 0           ; Null terminate\n    \n    ; Print newline\n    ld a, 13\n    rst 16\n    ld a, 10\n    rst 16\n    \n    ret\n\n; *********************************************************************\n; Calculation Routines\n; *********************************************************************\n\n; Calculate tax amount based on category\n; Input: amount_value (HL) and category_value (A)\n; Output: tax in HL\ncalculate_tax:\n    ld a, (category_value)\n    \n    cp 1                  ; Check if Food\n    jr z, calc_food\n    \n    cp 2                  ; Check if Healthcare\n    jr z, calc_healthcare\n    \n    ; Default: Other category\ncalc_other:\n    ld a, OTHER_RATE      ; 10% tax\n    jr do_tax_calc\n    \ncalc_food:\n    ld a, FOOD_RATE       ; 5% tax\n    jr do_tax_calc\n    \ncalc_healthcare:\n    ld a, HEALTHCARE_RATE ; 0% tax\n    jr do_tax_calc\n    \ndo_tax_calc:\n    ; Tax calculation: amount * tax_rate / 100\n    ; HL = amount\n    ld hl, (amount_value)\n    \n    ; Multiply by tax rate\n    ld b, 0\n    ld c, a              ; BC = tax rate\n    call multiply        ; HL = amount * tax rate\n    \n    ; Divide by 100\n    ld bc, 100\n    call divide          ; HL = (amount * tax rate) / 100\n    \n    ret                  ; Return tax in HL\n\n; Calculate total amount (amount + tax)\n; Input: amount_value and tax_value\n; Output: total in HL\ncalculate_total:\n    ld de, (amount_value)  ; DE = amount\n    ld hl, (tax_value)     ; HL = tax\n    add hl, de             ; HL = amount + tax\n    ret\n\n; *********************************************************************\n; Utility Routines\n; *********************************************************************\n\n; Convert string to number\n; Input: DE points to null-terminated string\n; Output: HL contains the number (fixed point, 2 decimal places)\nstring_to_number:\n    ld hl, 0            ; Initialize result to 0\n    ld b, 0             ; Decimal point flag (0 = not seen)\n    ld c, 0             ; Decimal position counter\n    \nstr_to_num_loop:\n    ld a, (de)          ; Get character\n    or a                ; Check for null terminator\n    jr z, str_to_num_done\n    \n    cp &apos;.&apos;              ; Check for decimal point\n    jr z, decimal_point\n    \n    ; Must be a digit\n    sub &apos;0&apos;             ; Convert ASCII to value\n    \n    ; Multiply current result by 10\n    push af             ; Save digit\n    push bc             ; Save flags\n    \n    ld b, h             ; BC = result\n    ld c, l\n    add hl, hl          ; HL = result * 2\n    add hl, hl          ; HL = result * 4\n    add hl, bc          ; HL = result * 5\n    add hl, hl          ; HL = result * 10\n    \n    pop bc              ; Restore flags\n    pop af              ; Restore digit\n    \n    ; If past decimal point, increment decimal counter\n    push af             ; Save digit\n    ld a, b\n    or a                ; Check decimal flag\n    jr z, add_digit     ; Not past decimal yet\n    \n    ; Past decimal point, check counter\n    ld a, c\n    inc c               ; Increment counter\n    cp 2                ; Check if already have 2 decimal places\n    jr nc, skip_digit   ; Skip this digit if already have 2 decimals\n    \nadd_digit:\n    pop af              ; Restore digit\n    ld e, a\n    ld d, 0             ; DE = digit\n    add hl, de          ; Add to result\n    jr next_char\n    \nskip_digit:\n    pop af              ; Restore digit (but don&apos;t use it)\n    jr next_char\n    \ndecimal_point:\n    inc b               ; Set decimal point flag\n    ld c, 0             ; Reset decimal position counter\n    jr next_char\n    \nnext_char:\n    inc de              ; Next character\n    jr str_to_num_loop\n    \nstr_to_num_done:\n    ; If no decimal part was entered, multiply by 100\n    ld a, b\n    or a                ; Check if decimal point was seen\n    jr nz, adjust_decimals\n    \n    ; No decimal point, multiply by 100\n    ld b, h\n    ld c, l\n    add hl, hl          ; * 2\n    add hl, hl          ; * 4\n    add hl, hl          ; * 8\n    add hl, hl          ; * 16\n    add hl, hl          ; * 32\n    add hl, hl          ; * 64\n    add hl, bc          ; * 65\n    add hl, hl          ; * 130\n    ld b, h\n    ld c, l\n    srl b\n    rr c                ; * 65\n    add hl, bc          ; * 195\n    add hl, hl          ; * 390\n    add hl, hl          ; * 780\n    srl h\n    rr l                ; * 390\n    add hl, hl          ; * 780\n    srl h\n    rr l                ; * 390\n    srl h\n    rr l                ; * 195\n    srl h\n    rr l                ; * 97.5\n    add hl, hl          ; * 195\n    add hl, hl          ; * 390\n    srl h\n    rr l                ; * 195\n    add hl, hl          ; * 390\n    srl h\n    rr l                ; * 195\n    add hl, hl          ; * 390\n    srl h\n    rr l                ; * 195\n    add hl, hl          ; * 390\n    srl h\n    rr l                ; * 195\n    add hl, hl          ; * 390\n    srl h\n    rr l                ; * 195\n    add hl, hl          ; * 390\n    srl h\n    rr l                ; * 195\n    add hl, hl          ; * 390\n    srl h\n    rr l                ; * 195\n    jr done_convert\n    \nadjust_decimals:\n    ; Check number of decimal places entered\n    ld a, c\n    or a                ; No decimal places entered?\n    jr z, mul_100       ; Multiply by 100\n    \n    cp 1                ; One decimal place entered?\n    jr z, mul_10        ; Multiply by 10\n    \n    ; Already have 2 decimal places, no adjustment needed\n    jr done_convert\n    \nmul_100:\n    ; Multiply by 100\n    ld b, h\n    ld c, l\n    add hl, hl          ; * 2\n    add hl, hl          ; * 4\n    add hl, hl          ; * 8\n    add hl, bc          ; * 9\n    add hl, hl          ; * 18\n    add hl, hl          ; * 36\n    add hl, bc          ; * 37\n    add hl, hl          ; * 74\n    add hl, hl          ; * 148\n    add hl, bc          ; * 149\n    add hl, bc          ; * 150\n    jr done_convert\n    \nmul_10:\n    ; Multiply by 10\n    ld b, h\n    ld c, l\n    add hl, hl          ; * 2\n    add hl, hl          ; * 4\n    add hl, bc          ; * 5\n    add hl, hl          ; * 10\n    \ndone_convert:\n    ret                 ; Return with number in HL\n\n; Multiply HL by BC\n; Input: HL, BC\n; Output: HL = HL * BC\nmultiply:\n    push de             ; Save DE\n    ld de, 0            ; Initialize result to 0\n    \nmult_loop:\n    ; Check if BC is zero\n    ld a, b\n    or c\n    jr z, mult_done\n    \n    ; Add HL to result\n    ex de, hl           ; DE = multiplier, HL = result\n    add hl, de          ; Add multiplier to result\n    ex de, hl           ; DE = result, HL = multiplier\n    \n    ; Decrement counter\n    dec bc\n    jr mult_loop\n    \nmult_done:\n    ex de, hl           ; HL = result\n    pop de              ; Restore DE\n    ret\n\n; Divide HL by BC\n; Input: HL, BC\n; Output: HL = HL / BC\ndivide:\n    push de             ; Save DE\n    ld de, 0            ; Initialize quotient to 0\n    \ndiv_loop:\n    ; Check if HL &lt; BC\n    call compare_hl_bc\n    jr c, div_done      ; If HL &lt; BC, done\n    \n    ; Subtract BC from HL\n    or a                ; Clear carry\n    sbc hl, bc\n    \n    ; Increment quotient\n    inc de\n    jr div_loop\n    \ndiv_done:\n    ex de, hl           ; HL = quotient\n    pop de              ; Restore DE\n    ret\n\n; Compare HL with BC\n; Sets carry flag if HL &lt; BC\ncompare_hl_bc:\n    ld a, h\n    cp b                ; Compare high bytes\n    ret nz              ; Not equal, return with flags set\n    \n    ld a, l\n    cp c                ; Compare low bytes\n    ret\n\n; *********************************************************************\n; Output Routines\n; *********************************************************************\n\n; Display calculation results\ndisplay_results:\n    ; Display amount\n    ld de, amount_msg\n    call print_string\n    ld hl, (amount_value)\n    call print_number\n    \n    ; Display tax\n    ld de, tax_msg\n    call print_string\n    ld hl, (tax_value)\n    call print_number\n    \n    ; Display total\n    ld de, total_msg\n    call print_string\n    ld hl, (total_value)\n    call print_number\n    \n    ; Print a blank line\n    ld de, newline\n    call print_string\n    \n    ret\n\n; Print a string \n; Input: DE points to null-terminated string\nprint_string:\n    ld a, (de)          ; Get character\n    or a                ; Check for null terminator\n    ret z               ; If zero, we&apos;re done\n    \n    rst 16              ; Print character\n    \n    inc de              ; Point to next character\n    jr print_string     ; Continue printing\n\n; Print a number in decimal format (fixed point, 2 decimal places)\n; Input: HL = number (fixed point, 2 decimal places)\nprint_number:\n    ; Print &apos;$&apos; sign\n    ld a, &apos;$&apos;\n    rst 16\n    \n    ; Extract the integer and fractional parts\n    ; Integer part = number / 100\n    ; Fractional part = number % 100\n    \n    ; Save the original number\n    push hl\n    \n    ; Divide by 100 to get integer part\n    ld bc, 100\n    call divide         ; HL = integer part\n    \n    ; Print integer part\n    call print_decimal\n    \n    ; Print decimal point\n    ld a, &apos;.&apos;\n    rst 16\n    \n    ; Get fractional part\n    pop bc              ; BC = original number\n    push hl             ; Save integer part\n    \n    ; Calculate fractional part = original - (integer * 100)\n    push bc             ; Save original number\n    ld bc, 100\n    call multiply       ; HL = integer * 100\n    pop bc              ; BC = original number\n    \n    ; BC - HL = fractional part\n    or a                ; Clear carry\n    ld a, c\n    sub l\n    ld l, a\n    ld a, b\n    sbc a, h\n    ld h, a             ; HL = fractional part\n    \n    ; Print fractional part as 2 digits\n    ld a, h\n    or a                ; Check if high byte is zero\n    jr z, print_low_byte ; If zero, just print low byte\n    \n    ; Otherwise this is an error, print &quot;00&quot;\n    ld a, &apos;0&apos;\n    rst 16\n    rst 16\n    jr fract_done\n    \nprint_low_byte:\n    ld a, l\n    cp 10               ; Check if less than 10\n    jr nc, print_fract  ; If not, print as is\n    \n    ; Add leading zero for single-digit values\n    push af             ; Save value\n    ld a, &apos;0&apos;\n    rst 16              ; Print leading zero\n    pop af              ; Restore value\n    \nprint_fract:\n    ld h, 0\n    ld l, a\n    call print_decimal\n    \nfract_done:\n    pop hl              ; Restore HL\n    ret\n\n; Print a decimal number in HL\nprint_decimal:\n    ; Print a decimal number (0-65535)\n    ld bc, -10000\n    call num1\n    ld bc, -1000\n    call num1\n    ld bc, -100\n    call num1\n    ld bc, -10\n    call num1\n    ld bc, -1\nnum1:\n    ld a, &apos;0&apos;-1\nnum2:\n    inc a\n    add hl, bc\n    jr c, num2\n    sbc hl, bc\n    \n    ; Skip leading zeros, but always print at least one digit\n    cp &apos;0&apos;\n    jr nz, print_digit  ; Not a leading zero\n    \n    ; Check if we already printed a digit\n    push af\n    ld a, (digit_printed)\n    or a\n    jr nz, print_ok\n    \n    ; Check if we&apos;re at the last digit\n    ld a, c\n    cp 255              ; Check if BC = -1 (last digit)\n    jr nz, skip_zero    ; Not last digit, skip leading zero\n    \nprint_ok:\n    pop af\n    jr print_digit\n    \nskip_zero:\n    pop af\n    ret\n    \nprint_digit:\n    rst 16\n    \n    ; Set the digit_printed flag\n    ld a, 1\n    ld (digit_printed), a\n    ret\n\n; *********************************************************************\n; Exit Program\n; *********************************************************************\n\nexit_program:\n    ; Display exit message\n    ld de, exit_msg\n    call print_string\n    ret                  ; Return to BASIC\n\n; *********************************************************************\n; Data Section\n; *********************************************************************\n\n; Prompts and messages\nwelcome_msg:     defb 13, 10, &quot;TAX CALCULATOR&quot;, 13, 10, 13, 10, 0\namount_prompt:   defb &quot;Enter purchase amount: &quot;, 0\ncategory_prompt: defb &quot;Select tax category (F)ood, (H)ealthcare, (O)ther: &quot;, 0\ninvalid_cat:     defb 13, 10, &quot;Invalid category. Using Other.&quot;, 13, 10, 0\namount_msg:      defb 13, 10, &quot;Amount: &quot;, 0\ntax_msg:         defb 13, 10, &quot;Tax: &quot;, 0\ntotal_msg:       defb 13, 10, &quot;Total: &quot;, 0\ncontinue_prompt: defb 13, 10, 13, 10, &quot;Do you want to continue? (Y/N): &quot;, 0\nexit_msg:        defb 13, 10, 13, 10, &quot;Thank you for using Tax Calculator!&quot;, 13, 10, 0\nnewline:         defb 13, 10, 0\n\n; Variables\ndigit_printed:   defb 0        ; Flag for printing leading zeros\n\n; Input buffer (7 bytes: 6 chars + null terminator)\ninput_buffer:    defs 7, 0\n\n; Variables for calculated values (16-bit words)\namount_value:    defw 0        ; Purchase amount\ncategory_value:  defb 0        ; Tax category\ntax_value:       defw 0        ; Calculated tax amount\ntotal_value:     defw 0        ; Total amount\n\n; Program end\nend start </code></pre><p>Now we need to compile the application using <code>pasmo --tapbas taxcalc.asm taxcalc.tap</code>. So let&apos;s give it a spin! </p><figure class=\"kg-card kg-image-card\"><img alt=\"Can a LLM convert C, to ASM to specs and then to a working Z/80 Speccy tape? Yes.\" class=\"kg-image\" height=\"1754\" src=\"https://ghuntley.com/content/images/2025/03/CleanShot-2025-03-02-at-20.48.11@2x.png\" width=\"1794\" /></figure><p>It works but the sales tax isn&apos;t being calculated properly so let&apos;s head on back and give the LLM the following prompt and attach the above screenshot to it.</p><blockquote>Look at the attached screenshot. <br />The tax did not generate correctly. <br />The amount is accepting user input.<br />The cost is not being asked and user does not accept input.<br /><br />Look at the @00-specs-without-c to see functionality needed. Make changes as needed.</blockquote><figure class=\"kg-card kg-image-card\"><img alt=\"Can a LLM convert C, to ASM to specs and then to a working Z/80 Speccy tape? Yes.\" class=\"kg-image\" height=\"1602\" src=\"https://ghuntley.com/content/images/2025/03/CleanShot-2025-03-02-at-20.56.51@2x.png\" width=\"1074\" /></figure><p>which resolves the formatting issues, however user interactive input does not happen. The application should ask me how much an item costs, but it does not do that. So, let&apos;s head back to the LLM and attach the screenshot.</p><figure class=\"kg-card kg-image-card\"><img alt=\"Can a LLM convert C, to ASM to specs and then to a working Z/80 Speccy tape? Yes.\" class=\"kg-image\" height=\"1716\" src=\"https://ghuntley.com/content/images/2025/03/CleanShot-2025-03-02-at-20.59.08@2x.png\" width=\"1072\" /></figure><p>It took a few more backwards and forwards to steer it via screenshots that had verbose logging but success was achieved.</p><figure class=\"kg-card kg-image-card\"><img alt=\"Can a LLM convert C, to ASM to specs and then to a working Z/80 Speccy tape? Yes.\" class=\"kg-image\" height=\"216\" src=\"https://ghuntley.com/content/images/2025/03/CleanShot-2025-03-02-at-21.32.38@2x.png\" width=\"1084\" /></figure><p>The techniques detailed below were able to take an application from assembler, generate high-level specs and those high-level clean-room specs were able to generate a working Z/80 spectrum application.</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://ghuntley.com/tradecraft/\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Yes, Claude Code can decompile itself. Here&#x2019;s the source code.</div><div class=\"kg-bookmark-description\">These LLMs are shockingly good at deobfuscation, transpilation and structure to structure conversions. I discovered this back around Christmas where I asked an LLM to make me an Haskell audio library by transpiling a rust implementation. An &#x201c;oh fuck&#x201d; moment in timeOver the Christmas break I&#x2019;ve been critically looking</div><div class=\"kg-bookmark-metadata\"><img alt=\"Can a LLM convert C, to ASM to specs and then to a working Z/80 Speccy tape? Yes.\" class=\"kg-bookmark-icon\" src=\"https://ghuntley.com/content/images/icon/android-chrome-192x192-5.png\" /><span class=\"kg-bookmark-author\">Geoffrey Huntley</span><span class=\"kg-bookmark-publisher\">Geoffrey Huntley</span></div></div><div class=\"kg-bookmark-thumbnail\"><img alt=\"Can a LLM convert C, to ASM to specs and then to a working Z/80 Speccy tape? Yes.\" src=\"https://ghuntley.com/content/images/thumbnail/Flux_Dev_A_mysterious_figure_often_obscured_in_shadows_wearing_3--1-.jpeg\" /></div></a></figure><p>Anyway, that was a fun trip back in time and memory lane - thanks, <a href=\"https://bsky.app/profile/damieng.bsky.social/post/3ljdkwup7sc2d?ref=ghuntley.com\">Damien Guard</a>, for the inspiration and nerd-snipe. In all it took me about two hours, of that it was mainly me trying to figure out how to install, run, configure these emulators and how to make a Z/80 tape.</p><p>The actual build was all very manual, driven by me as a human loop, because the Z/80 spectrum isn&apos;t really a good target for automating a reward loop. These LLMs get most things right but some things wrong. By having tests in your codebase and invoking the MCP tools to run these tests, you&apos;ll get successful outcomes automatically nine times out of ten...</p><blockquote>It&apos;s a new world for software engineers, it&apos;s kinda like the Telsa FSD. Sometimes it gets it wrong but if you trust it enough, provide <a href=\"https://ghuntley.com/stdlib/\" rel=\"noreferrer\">enough guidance</a> and understand how these coding assistants work under the hood you can achieve N factor more outcomes than ever before. <br /><br />Software rewrites from one language to another are no longer an expensive thing for a company to do and if a &quot;source available&quot; company has provided the internet with their restricted source-code they can be cloned in hours, automatically, whilst you watch Netflix.</blockquote><h2 id=\"ps-socials-for-this-blog-post-are-below\">ps. socials for this blog post are below </h2><p>If you enjoyed reading, give &apos;em a share, please:</p><ul><li>Twitter: <a href=\"https://x.com/GeoffreyHuntley/status/1896154477872505246?ref=ghuntley.com\">https://x.com/GeoffreyHuntley/status/1896154477872505246</a></li><li>BlueSky: <a href=\"https://bsky.app/profile/ghuntley.com/post/3ljfbuvpojd2a?ref=ghuntley.com\">https://bsky.app/profile/ghuntley.com/post/3ljfbuvpojd2a</a></li><li>LinkedIn: <a href=\"https://www.linkedin.com/posts/geoffreyhuntley_can-an-llm-convert-c-to-asm-to-specs-and-activity-7301919526856663040-ZkvV?utm_source=share&amp;utm_medium=member_desktop&amp;rcm=ACoAAABQKuUB2AJ059keUcRUVLbtmoa6miLVlTI\">https://www.linkedin.com/posts/geoffreyhuntley_can-an-llm-convert-c-to-asm-to-specs-and-activity-7301919526856663040-ZkvV</a></li></ul>"
            ],
            "link": "https://ghuntley.com/z80/",
            "publishedAt": "2025-03-02",
            "source": "Geoffrey Huntley",
            "summary": "<div class=\"kg-card kg-callout-card kg-callout-card-blue\"><div class=\"kg-callout-emoji\">&#x2728;</div><div class=\"kg-callout-text\">Daniel Joyce used the techniques described in this post to port <code style=\"white-space: pre-wrap;\">ls</code> to <code style=\"white-space: pre-wrap;\">rust</code> via an <code style=\"white-space: pre-wrap;\">objdump</code>. You can see the code here: <a href=\"https://github.com/DanielJoyce/ls-rs?ref=ghuntley.com\" rel=\"nofollow\">https://github.com/DanielJoyce/ls-rs</a>. Keen, to see more examples - get in contact if you ship something!</div></div><p><a href=\"https://bsky.app/profile/damieng.bsky.social/post/3ljdkwup7sc2d?ref=ghuntley.com\">Damien Guard</a> nerd sniped me and other folks</p>",
            "title": "Can a LLM convert C, to ASM to specs and then to a working Z/80 Speccy tape? Yes."
        },
        {
            "content": [
                "<img alt=\"Yes, Claude Code can decompile itself. Here&apos;s the source code.\" src=\"https://ghuntley.com/content/images/2025/03/Flux_Dev_A_mysterious_figure_often_obscured_in_shadows_wearing_3--1-.jpeg\" /><p>These LLMs are shockingly good at deobfuscation, transpilation and structure to structure conversions. I discovered this back around Christmas where I asked an LLM to make me an Haskell audio library by transpiling a rust implementation.</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://ghuntley.com/oh-fuck/\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">An &#x201c;oh fuck&#x201d; moment in time</div><div class=\"kg-bookmark-description\">Over the Christmas break I&#x2019;ve been critically looking at my own software development loop, learning a new programming language and re-learning a language I haven&#x2019;t professionally used in over seven years. It&#x2019;s now 2025. Software assistants are now a core staple of my day-to-day life as a staff</div><div class=\"kg-bookmark-metadata\"><img alt=\"Yes, Claude Code can decompile itself. Here&apos;s the source code.\" class=\"kg-bookmark-icon\" src=\"https://ghuntley.com/content/images/icon/android-chrome-192x192-3.png\" /><span class=\"kg-bookmark-author\">Geoffrey Huntley</span><span class=\"kg-bookmark-publisher\">Geoffrey Huntley</span></div></div><div class=\"kg-bookmark-thumbnail\"><img alt=\"Yes, Claude Code can decompile itself. Here&apos;s the source code.\" src=\"https://ghuntley.com/content/images/thumbnail/CleanShot-2025-01-06-at-09.16.53@2x.png\" /></div></a></figure><p>and here&apos;s me using the technique (bellow) to convert an application to a z/80 spectrum tape</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://ghuntley.com/z80/\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Can a LLM convert C, to ASM to specs and then to a working Z/80 Speccy tape? Yes.</div><div class=\"kg-bookmark-description\">Damien Guard nerd sniped me and and other folks wanted more proof that it is now cheap, easy and possible to cheaply rewrite software or clone existing &#x201c;source available&#x201d; businesses (see bottom of the post). So, let&#x2019;s get cracking by creating a toy application by sending this prompt to the</div><div class=\"kg-bookmark-metadata\"><img alt=\"Yes, Claude Code can decompile itself. Here&apos;s the source code.\" class=\"kg-bookmark-icon\" src=\"https://ghuntley.com/content/images/icon/android-chrome-192x192-12.png\" /><span class=\"kg-bookmark-author\">Geoffrey Huntley</span><span class=\"kg-bookmark-publisher\">Geoffrey Huntley</span></div></div><div class=\"kg-bookmark-thumbnail\"><img alt=\"Yes, Claude Code can decompile itself. Here&apos;s the source code.\" src=\"https://ghuntley.com/content/images/thumbnail/bafkreiftzmpb7bbkej76rac3kuijg2mcuyjxxhtnqdie5qq6rbrc45v2iu-1-1.jpg\" /></div></a></figure><p>I&apos;m not going to bury the lede, so let&apos;s dig right into the real reason why you clicked on this post, here&apos;s the source code... </p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://github.com/ghuntley/claude-code-source-code-transpilation?ref=ghuntley.com\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">GitHub - ghuntley/claude-code-source-code-transpilation: This is a cleanroom transpilation of the official Claude Code npm package.</div><div class=\"kg-bookmark-description\">This is a cleanroom transpilation of the official Claude Code npm package. - ghuntley/claude-code-source-code-transpilation</div><div class=\"kg-bookmark-metadata\"><img alt=\"Yes, Claude Code can decompile itself. Here&apos;s the source code.\" class=\"kg-bookmark-icon\" src=\"https://ghuntley.com/content/images/icon/pinned-octocat-093da3e6fa40-2.svg\" /><span class=\"kg-bookmark-author\">GitHub</span><span class=\"kg-bookmark-publisher\">ghuntley</span></div></div><div class=\"kg-bookmark-thumbnail\"><img alt=\"Yes, Claude Code can decompile itself. Here&apos;s the source code.\" src=\"https://ghuntley.com/content/images/thumbnail/claude-code-source-code-transpilation\" /></div></a></figure><p>What follows in this post is how you can do it yourself and a special surprise insight at the bottom...</p><h2 id=\"claude-code\">Claude Code</h2><figure class=\"kg-card kg-image-card\"><img alt=\"Yes, Claude Code can decompile itself. Here&apos;s the source code.\" class=\"kg-image\" height=\"421\" src=\"https://ghuntley.com/content/images/2025/03/image.png\" width=\"748\" /></figure><p>The source code for Claude Code is currently &quot;not available&quot;. Whilst a GitHub repository <a href=\"https://github.com/anthropics/claude-code?ref=ghuntley.com\">has been published</a>, it contains no source code. Claude Code was an unusual announcement to release along side Sonnet 3.7 - I suspect it was/is a marketing gimmick which was built to demonstrate the capability of the new model and to show the world how to build an AI coding agent (and how easy it is) from the creators of the LLM model (they know it best)</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://github.com/anthropics/claude-code?ref=ghuntley.com\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">GitHub - anthropics/claude-code: Claude Code is an agentic coding tool that lives in your terminal, understands your codebase, and helps you code faster by executing routine tasks, explaining complex code, and handling git workflows - all through natural language commands.</div><div class=\"kg-bookmark-description\">Claude Code is an agentic coding tool that lives in your terminal, understands your codebase, and helps you code faster by executing routine tasks, explaining complex code, and handling git workflo&#x2026;</div><div class=\"kg-bookmark-metadata\"><img alt=\"Yes, Claude Code can decompile itself. Here&apos;s the source code.\" class=\"kg-bookmark-icon\" src=\"https://ghuntley.com/content/images/icon/pinned-octocat-093da3e6fa40.svg\" /><span class=\"kg-bookmark-author\">GitHub</span><span class=\"kg-bookmark-publisher\">anthropics</span></div></div><div class=\"kg-bookmark-thumbnail\"><img alt=\"Yes, Claude Code can decompile itself. Here&apos;s the source code.\" src=\"https://ghuntley.com/content/images/thumbnail/claude-code\" /></div></a></figure><p>Claude Code is authored in TypeScript and was released to NPM. You can install it via..</p><pre><code class=\"language-bash\">$ mkdir claude-code &amp;&amp; cd claude-code\n$ npm i @anthropic-ai/claude-code</code></pre><p>After installing the application into a folder you&apos;ll be greeted with the following directory structure..</p><pre><code>tree \n.\n&#x251c;&#x2500;&#x2500; node_modules\n&#x2502;   &#x251c;&#x2500;&#x2500; @anthropic-ai\n&#x2502;   &#x2502;   &#x2514;&#x2500;&#x2500; claude-code\n&#x2502;   &#x2502;       &#x251c;&#x2500;&#x2500; LICENSE.md\n&#x2502;   &#x2502;       &#x251c;&#x2500;&#x2500; README.md\n&#x2502;   &#x2502;       &#x251c;&#x2500;&#x2500; cli.mjs\n&#x2502;   &#x2502;       &#x251c;&#x2500;&#x2500; package.json\n&#x2502;   &#x2502;       &#x251c;&#x2500;&#x2500; scripts\n&#x2502;   &#x2502;       &#x2502;   &#x2514;&#x2500;&#x2500; preinstall.js\n&lt;snip&gt;\n&#x251c;&#x2500;&#x2500; package-lock.json\n&#x2514;&#x2500;&#x2500; package.json\n\n57 directories, 436 files</code></pre><h2 id=\"climjs\">cli.mjs</h2><p>This is the meat of the application itself. It is your typical commonjs application which has been compiled from typescript. As part of the process of compilation with Webpack a minifier step combines all the source code into this file and truncates the symbols.</p><figure class=\"kg-card kg-image-card\"><img alt=\"Yes, Claude Code can decompile itself. Here&apos;s the source code.\" class=\"kg-image\" height=\"598\" src=\"https://ghuntley.com/content/images/2025/03/CleanShot-2025-03-01-at-17.14.43.png\" width=\"831\" /></figure><h2 id=\"so-lets-pull-it-apart\">so let&apos;s pull it apart</h2><p>If you want to this at home. Your first task to is open up <code>cli.mjs</code> within your favourite AI coding assistant or even Claude Code itself. Due to the &quot;safety rails and AI alignment&quot; you&apos;ll need to strip the top comments from the application otherwise they will kick in unless you use an LLM such as Grok which has no guard rails.</p><p>Here&apos;s the prompt that I used.</p><blockquote>CLI.js is a commonjs typescript application which has been compiled with webpack. <br />The symbols have been stripped. <br />Inspect the source code thoroughly (extra thinking) but skip the SentrySDK source code. <br />Create a specification library of features of the application. <br />Convert the source code into human readable. <br />Keep going until you are done!</blockquote><p>Because <code>cli.mjs</code> is close to 5mb - which is way bigger than any LLM context window out here. It shouldn&apos;t work but it does. You&apos;re going to need babysit it for a while and feed it reward tokens of kind words (&quot;<em>your doing good, please continue</em>&quot;) and encourage it to keep on going on - even if it gives up. It will time out, lots...</p><figure class=\"kg-card kg-image-card\"><img alt=\"Yes, Claude Code can decompile itself. Here&apos;s the source code.\" class=\"kg-image\" height=\"881\" src=\"https://ghuntley.com/content/images/2025/03/CleanShot-2025-03-01-at-17.21.34.png\" width=\"507\" /></figure><p>After about two minutes it&apos;ll spit out a technical specification which details how the application was built and the features of the application...</p><figure class=\"kg-card kg-image-card\"><img alt=\"Yes, Claude Code can decompile itself. Here&apos;s the source code.\" class=\"kg-image\" height=\"1105\" src=\"https://ghuntley.com/content/images/2025/03/CleanShot-2025-03-01-at-17.22.14.png\" width=\"507\" /></figure><p>At this point it&apos;ll timeout for sure. This is when you need to do the &quot;new meta&quot; of asking the LLM to write out the technical specification library. I say new meta because - hi folks - welcome, I haven&apos;t talked about this yet publicly yet but the results of this technique when used in combination with the &quot;<a href=\"https://ghuntley.com/stdlib/\">old meta</a>&quot; are truly absurd. I&apos;ll be going deep into this in a follow-up blog post so if you wanna be the first to see it - like, subscribe and click on the bell below below.</p><div class=\"kg-card kg-signup-card kg-width-wide \" style=\"background-color: #F0F0F0; display: none;\">\n            \n            <div class=\"kg-signup-card-content\">\n                \n                <div class=\"kg-signup-card-text \">\n                    <h2 class=\"kg-signup-card-heading\" style=\"color: #000000;\"><span style=\"white-space: pre-wrap;\">Sign up for Geoffrey Huntley</span></h2>\n                    <p class=\"kg-signup-card-subheading\" style=\"color: #000000;\"><span style=\"white-space: pre-wrap;\">I work remotely from a van that is slowly working its way around Australia. Follow me for the intersection of remote work, camping &amp; #vanlife.</span></p>\n                    \n        <form class=\"kg-signup-card-form\">\n            \n            <div class=\"kg-signup-card-fields\">\n                <input class=\"kg-signup-card-input\" id=\"email\" required=\"true\" type=\"email\" />\n                <button class=\"kg-signup-card-button kg-style-accent\" style=\"color: #FFFFFF;\" type=\"submit\">\n                    <span class=\"kg-signup-card-button-default\">Subscribe</span>\n                    <span class=\"kg-signup-card-button-loading\"><svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g class=\"nc-icon-wrapper\" fill=\"currentColor\" stroke=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\">\n            <g class=\"nc-loop-dots-4-24-icon-o\">\n                <circle cx=\"4\" cy=\"12\" r=\"3\">\n                <circle cx=\"12\" cy=\"12\" r=\"3\">\n                <circle cx=\"20\" cy=\"12\" r=\"3\">\n            </g>\n            \n        </g>\n    </svg></span>\n                </button>\n            </div>\n            <div class=\"kg-signup-card-success\" style=\"color: #000000;\">\n                Email sent! Check your inbox to complete your signup.\n            </div>\n            <div class=\"kg-signup-card-error\" style=\"color: #000000;\"></div>\n        </form>\n        \n                    <p class=\"kg-signup-card-disclaimer\" style=\"color: #000000;\"><span style=\"white-space: pre-wrap;\">No spam. Unsubscribe anytime.</span></p>\n                </div>\n            </div>\n        </div><figure class=\"kg-card kg-image-card kg-width-full\"><img alt=\"Yes, Claude Code can decompile itself. Here&apos;s the source code.\" class=\"kg-image\" height=\"1124\" src=\"https://ghuntley.com/content/images/2025/03/CleanShot-2025-03-01-at-17.33.32.png\" width=\"1695\" /></figure><p>Once it has finished dumping out the technical specification library you&apos;ll need to feed it this prompt</p><blockquote>Now deobfuscate the application.<br />Split the application into separate files per domain in the SPECS folder. <br />Provide an overview of the directory structure before starting deobfuscation. <br />Skip the SENTRYSDK.</blockquote><p>After a couple moments you&apos;ll be greeted with the skeleton of the deobfuscated outcome...</p><pre><code>claude-code/\n&#x251c;&#x2500;&#x2500; package.json\n&#x251c;&#x2500;&#x2500; tsconfig.json\n&#x251c;&#x2500;&#x2500; README.md\n&#x251c;&#x2500;&#x2500; LICENSE.md\n&#x251c;&#x2500;&#x2500; src/\n&#x2502;   &#x251c;&#x2500;&#x2500; index.ts                        # Main entry point\n&#x2502;   &#x251c;&#x2500;&#x2500; cli.ts                          # CLI argument parsing and commands\n&#x2502;   &#x251c;&#x2500;&#x2500; config/                         # Configuration management\n&#x2502;   &#x2502;   &#x251c;&#x2500;&#x2500; index.ts\n&#x2502;   &#x2502;   &#x251c;&#x2500;&#x2500; schema.ts\n&#x2502;   &#x2502;   &#x2514;&#x2500;&#x2500; defaults.ts\n&#x2502;   &#x251c;&#x2500;&#x2500; terminal/                       # Terminal interface\n&#x2502;   &#x2502;   &#x251c;&#x2500;&#x2500; index.ts\n&#x2502;   &#x2502;   &#x251c;&#x2500;&#x2500; input.ts\n&#x2502;   &#x2502;   &#x251c;&#x2500;&#x2500; output.ts\n&#x2502;   &#x2502;   &#x2514;&#x2500;&#x2500; rendering.ts\n&#x2502;   &#x251c;&#x2500;&#x2500; codebase/                       # Codebase analysis\n&#x2502;   &#x2502;   &#x251c;&#x2500;&#x2500; index.ts\n&#x2502;   &#x2502;   &#x251c;&#x2500;&#x2500; scanner.ts\n&#x2502;   &#x2502;   &#x251c;&#x2500;&#x2500; indexer.ts\n&#x2502;   &#x2502;   &#x251c;&#x2500;&#x2500; search.ts\n&#x2502;   &#x2502;   &#x2514;&#x2500;&#x2500; watcher.ts\n&#x2502;   &#x251c;&#x2500;&#x2500; commands/                       # Command processing\n&#x2502;   &#x2502;   &#x251c;&#x2500;&#x2500; index.ts\n&#x2502;   &#x2502;   &#x251c;&#x2500;&#x2500; parser.ts\n&#x2502;   &#x2502;   &#x251c;&#x2500;&#x2500; executor.ts\n&#x2502;   &#x2502;   &#x2514;&#x2500;&#x2500; handlers/\n&#x2502;   &#x2502;       &#x251c;&#x2500;&#x2500; edit.ts\n&#x2502;   &#x2502;       &#x251c;&#x2500;&#x2500; search.ts\n&#x2502;   &#x2502;       &#x251c;&#x2500;&#x2500; explain.ts\n&#x2502;   &#x2502;       &#x251c;&#x2500;&#x2500; git.ts\n&#x2502;   &#x2502;       &#x2514;&#x2500;&#x2500; system.ts\n&#x2502;   &#x251c;&#x2500;&#x2500; ai/                             # AI integration\n&#x2502;   &#x2502;   &#x251c;&#x2500;&#x2500; index.ts\n&#x2502;   &#x2502;   &#x251c;&#x2500;&#x2500; client.ts\n&#x2502;   &#x2502;   &#x251c;&#x2500;&#x2500; context.ts\n&#x2502;   &#x2502;   &#x251c;&#x2500;&#x2500; prompts.ts\n&#x2502;   &#x2502;   &#x2514;&#x2500;&#x2500; response.ts\n&#x2502;   &#x251c;&#x2500;&#x2500; fileops/                        # File operations\n&#x2502;   &#x2502;   &#x251c;&#x2500;&#x2500; index.ts\n&#x2502;   &#x2502;   &#x251c;&#x2500;&#x2500; reader.ts\n&#x2502;   &#x2502;   &#x251c;&#x2500;&#x2500; writer.ts\n&#x2502;   &#x2502;   &#x251c;&#x2500;&#x2500; diff.ts\n&#x2502;   &#x2502;   &#x2514;&#x2500;&#x2500; vcs.ts\n&#x2502;   &#x251c;&#x2500;&#x2500; execution/                      # Command execution\n&#x2502;   &#x2502;   &#x251c;&#x2500;&#x2500; index.ts\n&#x2502;   &#x2502;   &#x251c;&#x2500;&#x2500; shell.ts\n&#x2502;   &#x2502;   &#x251c;&#x2500;&#x2500; sandbox.ts\n&#x2502;   &#x2502;   &#x2514;&#x2500;&#x2500; monitor.ts\n&#x2502;   &#x251c;&#x2500;&#x2500; auth/                           # Authentication\n&#x2502;   &#x2502;   &#x251c;&#x2500;&#x2500; index.ts\n&#x2502;   &#x2502;   &#x251c;&#x2500;&#x2500; oauth.ts\n&#x2502;   &#x2502;   &#x2514;&#x2500;&#x2500; tokens.ts\n&#x2502;   &#x251c;&#x2500;&#x2500; telemetry/                      # Analytics and telemetry\n&#x2502;   &#x2502;   &#x251c;&#x2500;&#x2500; index.ts\n&#x2502;   &#x2502;   &#x251c;&#x2500;&#x2500; events.ts\n&#x2502;   &#x2502;   &#x2514;&#x2500;&#x2500; reporter.ts\n&#x2502;   &#x251c;&#x2500;&#x2500; errors/                         # Error handling\n&#x2502;   &#x2502;   &#x251c;&#x2500;&#x2500; index.ts\n&#x2502;   &#x2502;   &#x251c;&#x2500;&#x2500; types.ts\n&#x2502;   &#x2502;   &#x251c;&#x2500;&#x2500; handlers.ts\n&#x2502;   &#x2502;   &#x2514;&#x2500;&#x2500; formatter.ts\n&#x2502;   &#x2514;&#x2500;&#x2500; utils/                          # Utilities\n&#x2502;       &#x251c;&#x2500;&#x2500; index.ts\n&#x2502;       &#x251c;&#x2500;&#x2500; logger.ts\n&#x2502;       &#x251c;&#x2500;&#x2500; async.ts\n&#x2502;       &#x2514;&#x2500;&#x2500; formatting.ts\n&#x251c;&#x2500;&#x2500; scripts/                            # Build and deployment scripts\n&#x2502;   &#x251c;&#x2500;&#x2500; build.js\n&#x2502;   &#x2514;&#x2500;&#x2500; preinstall.js\n&#x2514;&#x2500;&#x2500; tests/                              # Test suite\n    &#x251c;&#x2500;&#x2500; unit/\n    &#x251c;&#x2500;&#x2500; integration/\n    &#x2514;&#x2500;&#x2500; fixtures/</code></pre><p>Now this is the part where it gets wild. Strap yourself in for another <a href=\"https://ghuntley.com/oh-fuck/\" rel=\"noreferrer\">&quot;oh-fuck&quot; moment in time</a>....</p><figure class=\"kg-card kg-image-card kg-width-full\"><img alt=\"Yes, Claude Code can decompile itself. Here&apos;s the source code.\" class=\"kg-image\" height=\"446\" src=\"https://ghuntley.com/content/images/2025/03/CleanShot-2025-03-01-at-17.50.15.png\" width=\"1097\" /></figure><p>As the <code>CLI.js</code> is circa 5Mb in size. What follows is going to require a-lot of patience but the key is to use the following prompt and keep giving it &quot;yeah bb, you doing great. keep going&quot; words of encouragement.</p><blockquote>Look at the SPECS library. <br />Look at CLAUDE-CODE folder. <br />Look at @CLI.js (do not confuse it with @cli.ts), keep transpiling and implement anything that&apos;s not in the SPECS folder that has not been implemented in the CLAUDE-CODE folder.</blockquote><p>Seriously, you are going to need to enter that at least 100 times over the next 30 minutes.   </p><h2 id=\"that-doesnt-impress-me-much\">that doesn&apos;t impress me much...</h2><p>Deobfuscating [nb. how do we even describe this? Is it deobfuscation?] JavaScript isn&apos;t that interesting or impressive though however the resulting source code is highly readable and covers all-the key elements in an coding assistant. We won&apos;t know how accurate it is until Anthropic goes through the motions to release the upstream source-code. </p><p>Understand dear reader that this technique can be done on any programming language and even from pre-existing binaries themselves. I&apos;ve transpiled from ASM to specs and achieved below:</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://ghuntley.com/z80/\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Can a LLM convert C, to ASM to specs and then to a working Z/80 Speccy tape? Yes.</div><div class=\"kg-bookmark-description\">Damien Guard nerd sniped me and and other folks wanted more proof that it is now cheap, easy and possible to cheaply rewrite software or clone existing &#x201c;source available&#x201d; businesses (see bottom of the post). So, let&#x2019;s get cracking by creating a toy application by sending this prompt to the</div><div class=\"kg-bookmark-metadata\"><img alt=\"Yes, Claude Code can decompile itself. Here&apos;s the source code.\" class=\"kg-bookmark-icon\" src=\"https://ghuntley.com/content/images/icon/android-chrome-192x192-6.png\" /><span class=\"kg-bookmark-author\">Geoffrey Huntley</span><span class=\"kg-bookmark-publisher\">Geoffrey Huntley</span></div></div><div class=\"kg-bookmark-thumbnail\"><img alt=\"Yes, Claude Code can decompile itself. Here&apos;s the source code.\" src=\"https://ghuntley.com/content/images/thumbnail/bafkreiftzmpb7bbkej76rac3kuijg2mcuyjxxhtnqdie5qq6rbrc45v2iu-1.jpg\" /></div></a></figure><p> and others have directly converted VB .exe&apos;s to Python...</p><figure class=\"kg-card kg-embed-card\"><blockquote class=\"twitter-tweet\"><p dir=\"ltr\" lang=\"en\">Reddit grandfather uploads 27 year old EXE file of a visual basic game and Claude one-shotted recreating the game in Python in under 5 minutes!!<br /><br />From the binary. <a href=\"https://t.co/KEzUfisxmu?ref=ghuntley.com\">pic.twitter.com/KEzUfisxmu</a></p>&#x2014; Deedy (@deedydas) <a href=\"https://twitter.com/deedydas/status/1894841573311197239?ref_src=twsrc%5Etfw&amp;ref=ghuntley.com\">February 26, 2025</a></blockquote>\n</figure><h2 id=\"still-reading-good-its-time-for-the-grand-reveal-aka-what-this-entire-blog-post-is-about\">still reading? good it&apos;s time for the grand reveal aka what this entire blog post is about...</h2><p>Now, a sharp mind should have picked up by now the implications of above but I&apos;ll spell it out. Using the above technique you can <a href=\"https://en.wikipedia.org/wiki/Cleanroom_software_engineering?ref=ghuntley.com\">clean-room</a> any software in existence in hours or less.</p><p>All those &quot;source available&quot; founders who <a href=\"https://ghuntley.com/screwed/\" rel=\"noreferrer\">raised shit-loads-of-cash in the last boom</a> are now screwed, as anyone can re-implement their &quot;proprietary features&quot; which provide them with revenue within hours using the above technique to launch competing startups <a href=\"https://ghuntley.com/dothings/\">at lower-operating costs</a>. <br /><br />All you need is access to their source-code and they have given you the keys to the kingdom on a golden platter by going to market as &quot;commercial open-source&quot; with source-code &quot;protected by restrictive licensing&quot; uploaded directly onto GitHub.</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://www.theregister.com/2024/08/23/cockroachdb_opinion/?ref=ghuntley.com\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">CockroachDB scurries off to proprietary software land</div><div class=\"kg-bookmark-description\">As VC-owned fauxpen source biz yells &#x2018;show me the money,&#x2019; more may follow to the peril of the community</div><div class=\"kg-bookmark-metadata\"><img alt=\"Yes, Claude Code can decompile itself. Here&apos;s the source code.\" class=\"kg-bookmark-icon\" src=\"https://ghuntley.com/content/images/icon/favicon.svg\" /><span class=\"kg-bookmark-author\">The Register</span><span class=\"kg-bookmark-publisher\">Steven J. Vaughan-Nichols</span></div></div><div class=\"kg-bookmark-thumbnail\"><img alt=\"Yes, Claude Code can decompile itself. Here&apos;s the source code.\" src=\"https://ghuntley.com/content/images/thumbnail/shutterstock_open_source.jpg\" /></div></a></figure><p>Please understand that restrictive software licenses no longer matter because these LLMs can be driven to behave like Bitcoin mixers that bypass licensing and copyright restrictions using the approach detailed in this blog post.<br /><br />These zombie companies are about to get harvested if the founders don&apos;t &quot;Elon Musk&quot; their companies... fast... especially if they don&apos;t have a defensible moat. So, here&apos;s to the next generation of builders. May you use these insights wisely and to your advantage. It&apos;s an incredible time to be alive <em>if you just do things</em>.</p><figure class=\"kg-card kg-bookmark-card kg-card-hascaption\"><a class=\"kg-bookmark-container\" href=\"https://ghuntley.com/dothings\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">The future belongs to people who can just do things</div><div class=\"kg-bookmark-description\">There, I said it. I seriously can&#x2019;t see a path forward where the majority of software engineers are doing artisanal hand-crafted commits by as soon as the end of 2026. If you are a software engineer and were considering taking a gap year/holiday this year it would be an</div><div class=\"kg-bookmark-metadata\"><img alt=\"Yes, Claude Code can decompile itself. Here&apos;s the source code.\" class=\"kg-bookmark-icon\" src=\"https://ghuntley.com/content/images/icon/android-chrome-192x192-4.png\" /><span class=\"kg-bookmark-author\">Geoffrey Huntley</span><span class=\"kg-bookmark-publisher\">Geoffrey Huntley</span></div></div><div class=\"kg-bookmark-thumbnail\"><img alt=\"Yes, Claude Code can decompile itself. Here&apos;s the source code.\" src=\"https://ghuntley.com/content/images/thumbnail/1_96TO5SzegxgqzECdkV2LNA-1.webp\" /></div></a><figcaption><p><span style=\"white-space: pre-wrap;\">if you aren&apos;t losing sleep right now and doing 80+hr weeks of coding right now whyyyyyyyy. there&apos;s so much opportunity available </span><i><em class=\"italic\" style=\"white-space: pre-wrap;\">right now</em></i><span style=\"white-space: pre-wrap;\">...</span></p></figcaption></figure><h2 id=\"ps-socials-for-this-blog-post-are-below\">ps. socials for this blog post are below </h2><p>If you enjoyed reading, give &apos;em a share please:</p><ul><li>Twitter: <a href=\"https://x.com/GeoffreyHuntley/status/1895755817082892340?ref=ghuntley.com\">https://x.com/GeoffreyHuntley/status/1895755817082892340</a></li><li>BlueSky: <a href=\"https://bsky.app/profile/ghuntley.com/post/3ljcjfbqpsh2k?ref=ghuntley.com\">https://bsky.app/profile/ghuntley.com/post/3ljcjfbqpsh2k</a></li></ul>"
            ],
            "link": "https://ghuntley.com/tradecraft/",
            "publishedAt": "2025-03-01",
            "source": "Geoffrey Huntley",
            "summary": "<p>These LLMs are shockingly good at deobfuscation, transpilation and structure to structure conversions. I discovered this back around Christmas where I asked an LLM to make me an Haskell audio library by transpiling a rust implementation.</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://ghuntley.com/oh-fuck/\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">An &#x201c;oh fuck&#x201d; moment in time</div><div class=\"kg-bookmark-description\">Over the Christmas break I&#x2019;</div></div></a></figure>",
            "title": "Yes, Claude Code can decompile itself. Here's the source code."
        },
        {
            "content": [
                "<img alt=\"Dear Student: Yes, AI is here, you&apos;re screwed unless you take action...\" src=\"https://ghuntley.com/content/images/2025/02/llmcurve.png\" /><p>Two weeks ago a student <a href=\"https://ghuntley.com/im-a-student/\">anonymously emailed me</a> asking for advice. This is the reply and if I was in your shoes this is what I&apos;d do.</p><blockquote>So, I read your blog post &quot;<a href=\"https://ghuntley.com/oh-fuck/\" rel=\"noreferrer\">An oh f*** moment in time</a>&quot; alongside &quot;<a href=\"https://ghuntley.com/dothings/\" rel=\"noreferrer\">The future belongs to idea guys that can just do things</a>&quot;, and decided &quot;fine, I&apos;ll go try cursor for myself and <a href=\"https://ghuntley.com/stdlib/\" rel=\"noreferrer\">see how well composer does</a>&quot;. I normally use copilot and some claude, but not much since getting the context of my 50kloc project into Claude is rough, and I didn&apos;t want to start paying for API use so I could start using i.e aider (I normally get copilot for free). I heard some claims about cursor and friends that I assumed were pumped up LinkedIn talk, so I really didn&apos;t think about it until now.<br /><br />For example, I&apos;ve been working on a little JNI module for my android app, but it has a bunch of weird memory errors because managing the JNI resources is borderline impossible and C++ RAII has piles of insane footguns. So, I planned to rewrite it in Rust so I could 100% isolate the memory unsafety. This was a tall order, it was a three-way integration between a bulky C++ library with it&apos;s own CMake setup, and the JNI code of my app. It required some really messy translations from a rust trait into a C++ abstract class. It would take a lot to integrate it into my app. I decided it was a good enough benchmark to see if composer was up to snuff.<br /><br />First go around was not well, I gave the lump sum of all the work I wanted and it choked and went around in circles. Tried to go back to debugging the memory problems manually, but honestly I hate C++ and decided to another go around with composer and the rust module. Second time I sliced up the task into smaller but still pretty big pieces and fed them one at a time to composer.<br /><br />This time, composer probably wrote 99% of the code. Porting the previous shell script, making the shims I needed to map a trait to a C++ abstract class, porting the manual JNI code, and the massive buildscript linking it all together. It debugged its own work&#xa0; when I pasted error traces in (sadly since this rust module was shoehorned into my app composer agent couldn&apos;t really test on it&apos;s own). And it just worked. There was some stuff it couldn&apos;t do, mostly choking on big error traces and incremental build bugs (thanks gradle), and sometimes I needed to point it in a better direction architecturally, but otherwise I barely touched the code. All I did was direct composer to do what I was thinking of. I then just killed time while it did the work.<br /><br />I&apos;m at a loss now. I&apos;m a student. Fresh grads and interns aren&apos;t seen as idea guys that can get stuff done, they&apos;re seen as useless ticket monkeys to be herded by seniors. Now Cursor Composer is the ticket monkey presumably to be herded by a senior, not me. And maybe even the senior isn&apos;t needed if a scaled enough reasoner model can do the task slicing. I&apos;ve already felt like I&apos;ve been shuffling chairs on the titanic, talking about projects and internships as if this threat doesn&apos;t exist, and honestly this confirms it. Is there literally any reason why I shouldn&apos;t just throw away the 10 years of my life and do...I don&apos;t even know what. At this development pace I don&apos;t even know if I <a href=\"https://ghuntley.com/ngmi/\">have time to &quot;pivot&quot;</a> before everything else gets solved by o4 or whatever. What do I even do anymore?<br /><br />Thanks,<br />An Anonymous Student</blockquote><h2 id=\"thats-a-strongly-worded-headline\">that&apos;s a strongly worded headline...</h2><p>It&apos;s just facts; I&apos;m a straight shooter. I&apos;d rather tell it to you straight and provide actionable advice than placate feelings. </p><p>The steps that you take now will determine your success rate with obtaining a SWE role going forward. If you are a <a href=\"https://ghuntley.com/dothings/\">high autonomy person</a> then you&apos;re not fucked, as long as you take action. </p><h2 id=\"it-has-all-happened-before\">it has all happened before</h2><p>The Software Development industry works in cycles; this is the third bust after a boom that I&apos;ve weathered through. Understanding what happened in the 2000 dot-com bust is important because it led to the 2017 boom. </p><p>So, let&apos;s rewind time.</p><figure class=\"kg-card kg-image-card\"><img alt=\"Dear Student: Yes, AI is here, you&apos;re screwed unless you take action...\" class=\"kg-image\" height=\"1350\" src=\"https://ghuntley.com/content/images/2025/02/image-12.png\" width=\"1722\" /></figure><p>It&apos;s now the year 1998, and if you knew how to make a website using <a href=\"https://en.wikipedia.org/wiki/Adobe_Dreamweaver?ref=ghuntley.com\">Dreamweaver</a>, how to <a href=\"https://en.wikipedia.org/wiki/Common_Gateway_Interface?ref=ghuntley.com\">cobble some perl</a>&#xa0;together and use RSH to connect to a Sun e4500, then you were guaranteed a role as a software engineer.</p><p>After a massive run-up of hype and an injection of too much venture capital money resulted in a talent market where there weren&apos;t enough software engineers in the world. </p><p>Life was great. That is, until it wasn&apos;t. The bubble burst in 2000, and an engineer called Philip J. &quot;Pud&quot; Kaplan chronicled the downfall on a website called &quot;<a href=\"https://en.wikipedia.org/wiki/Fucked_Company?ref=ghuntley.com\">Fucked Company dot com</a>&quot;. To put into perspective how important and meaningful this website was at the time - it&apos;s the equivalent of HackerNews (or Slashdot)</p><figure class=\"kg-card kg-image-card\"><img alt=\"Dear Student: Yes, AI is here, you&apos;re screwed unless you take action...\" class=\"kg-image\" height=\"347\" src=\"https://ghuntley.com/content/images/2025/02/image-11.png\" width=\"680\" /></figure><p>Suddenly, all the jobs overnight dried up. Students who had just graduated and were looking for a sweet-sweet software engineering positioning were up shit-creek, just like you are now (if you don&apos;t take action). </p><p>Seemly overnight, the employment switched from a seller&apos;s market (i.e. in employee favour) to a buyers market (i.e. in employers&apos; favour) because there was an oversupply of senior engineering talent desperate to find their next job. Why would a company hire a graduate when they could obtain someone with five years of knowledge on the cheap?</p><p>It was a COVID19 moment in time, if you were born in the wrong year (ie. <a href=\"https://www.nsw.gov.au/education-and-training/nesa/hsc/facts-and-figures/2021/special-consideration?ref=ghuntley.com\">year 12 high school students disrupted in Australia</a>) then your life was utterly turned up-side-down. </p><p>That generation of graduates simply missed out on opportunities and core life experiences, but there were some nice outcomes from it, as it flushed out all the folks who were in tech just for the $$. </p><p>The folks who stayed/entered were those genuinely interested in computers&#xa0; - cause why else would you enter a field that had very few job prospects?</p><h2 id=\"it-took-many-years-to-recover-from-the-bust\">it took many years to recover from the bust</h2><p>but here&apos;s the kicker. Because there was an under-supply of graduates as companies weren&apos;t raising the next generation it lead to a shortage of talented software engineers in the market. The result was inevitable. </p><figure class=\"kg-card kg-embed-card\"></figure><p>The market switched sides to where the employees had all the power, and due to another massive round of venture capital injection, money was flowing freely. </p><p>Every company out there wanted to attract &quot;Google pedigree talent&quot;. Companies everywhere started offering perks and compensation packages to tempt them to come join their company.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img alt=\"Dear Student: Yes, AI is here, you&apos;re screwed unless you take action...\" class=\"kg-image\" height=\"731\" src=\"https://ghuntley.com/content/images/2025/02/CleanShot-2025-02-27-at-18.29.55.png\" width=\"1201\" /><figcaption><span style=\"white-space: pre-wrap;\">L3 at Google is A$280,710 AUD/year. L5 at Google is A$592,734/year. L8 is A$1,655,874/year.</span></figcaption></figure><p>Word got out and suddenly <em>everyone</em> wanted to become a software engineer because the money was absurd. YouTube is now a thing, all sorts of grifters turned up selling courseware on how to get a job and boasting about their millions - which resulted in even more people becoming software-engineers (just for the money) because it <em>was an easy path to fast retirement</em>. </p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img alt=\"Dear Student: Yes, AI is here, you&apos;re screwed unless you take action...\" class=\"kg-image\" height=\"994\" src=\"https://ghuntley.com/content/images/2025/02/CleanShot-2025-02-27-at-18.34.29.png\" width=\"1282\" /><figcaption><span style=\"white-space: pre-wrap;\">All you needed to do was get in the door, hold on for dear life and hop between the </span><a href=\"https://levels.fyi/?ref=ghuntley.com\"><span style=\"white-space: pre-wrap;\">levels.fyi</span></a><span style=\"white-space: pre-wrap;\"> ladders.</span></figcaption></figure><p>It&apos;s now the year 2023, and after a strong 14 years of growth, the industry fell on its face once again. Interest rates went up, and parking money-with-risk at Venture Capital firms was no longer a desirable place for investors because there were other alternatives now available at lower risk<em>.</em>  </p><figure class=\"kg-card kg-image-card\"><img alt=\"Dear Student: Yes, AI is here, you&apos;re screwed unless you take action...\" class=\"kg-image\" height=\"481\" src=\"https://ghuntley.com/content/images/2025/02/image-13.png\" width=\"1456\" /></figure><p>Whilst I managed to avoid the original dot-com dust, this one affected me personally. I was one of the software engineers caught up in the 219,709 layoffs, and it took me (with my experience) six months to find a suitable replacement role. </p><p>If you graduated from university or entered the job market in 2023, then you were competing against me (and/or circa 219,709 qualified employees with experience). </p><p>ie. screwed&#x2026;</p><figure class=\"kg-card kg-image-card\"><img alt=\"Dear Student: Yes, AI is here, you&apos;re screwed unless you take action...\" class=\"kg-image\" height=\"582\" src=\"https://ghuntley.com/content/images/2025/02/image-14.png\" width=\"1405\" /></figure><h2 id=\"it-is-now-the-year-2025\">it is now the year 2025</h2><p>AI is at our doorstep, and the employment market has not recovered from the last bust. You&apos;re lucky in a way because you realized early what&apos;s coming and have time to take action. There are many software engineers who <a href=\"https://ghuntley.com/ngmi/\">simply aren&apos;t gonna make it</a> because they haven&apos;t had the epiphany that you have and haven&apos;t even started progressing through the people stages of AI adoption...</p><figure class=\"kg-card kg-image-card\"><img alt=\"Dear Student: Yes, AI is here, you&apos;re screwed unless you take action...\" class=\"kg-image\" height=\"643\" src=\"https://ghuntley.com/content/images/2025/02/image-15.png\" width=\"1600\" /></figure><h2 id=\"this-time-its-different\">this time it&apos;s different</h2><p>A <a href=\"https://serce.me/posts/2025-02-07-the-llm-curve-of-impact-on-software-engineers?ref=ghuntley.com\">brilliant co-worker</a>&#xa0;penned together the following chart and the following words, which explain the impact of AI on different levels of engineers...</p><figure class=\"kg-card kg-image-card\"><img alt=\"Dear Student: Yes, AI is here, you&apos;re screwed unless you take action...\" class=\"kg-image\" height=\"1080\" src=\"https://ghuntley.com/content/images/2025/02/image-16.png\" width=\"1920\" /></figure><h3 id=\"junior-engineer\">Junior Engineer</h3><blockquote>You&#x2019;re just starting your work in a new codebase and you&#x2019;re still piecing together a solid mental model of how things actually work. Here, an LLM is a lifesaver. Stuck on an error? An LLM can give you an explanation that makes sense. Need to write some code for a minor feature, or do a library upgrade? All of this can be done much faster with an LLM.<br /><br />An LLM can already feel like it can do a huge part of your job for you. That&apos;s why I believe there&#x2019;s a real danger zone here. If you lean on an LLM as a shortcut to get unstuck in the same way as you&#x2019;d reach out to your more senior colleagues when you&#x2019;d otherwise have to ask &#x2013; then fine. In the real world, chances are you won&#x2019;t have the luxury of avoiding LLMs even if you wanted to. However, if you end up copy-pasting code back and forth between your IDE and the LLM without truly understanding what&#x2019;s happening or why, then advancing your engineering skills will become a serious challenge.</blockquote><h3 id=\"mid-level-engineer\"><a href=\"https://serce.me/posts/2025-02-07-the-llm-curve-of-impact-on-software-engineers?ref=ghuntley.com#mid-level-engineer\"></a>Mid-Level Engineer</h3><blockquote>You&#x2019;ve built up a fair amount of context and can navigate your codebase with confidence. You still find that LLMs make you write code much faster. You can ship features faster with copilot&#x2019;s completion, use agents to write less boilerplate code, learn new frameworks much faster with ChatGPT.<br /><br />However, you&#x2019;re already bumping into cases that an LLM simply can&#x2019;t handle yet. It won&#x2019;t decipher what the customers actually wanted from the ticket you were given, it can&#x2019;t use your debugger to pinpoint a dangerous race condition, and it can&#x2019;t help you much when you&#x2019;re responding to a midnight on-call alert.</blockquote><h3 id=\"senior-engineer\"><a href=\"https://serce.me/posts/2025-02-07-the-llm-curve-of-impact-on-software-engineers?ref=ghuntley.com#senior-engineer\"></a>Senior Engineer</h3><blockquote>You&apos;ve got a great mental model of the whole codebase you&apos;re responsible for. You know all of its ins and outs. Hell, you probably wrote a decent part of it. Sure, you can code much faster, and you enjoy it, but how much time do you really spend writing code? When you work on the roadmap, it can&#x2019;t really help you much. When you dive into a weird heisenbug, it can&#x2019;t really help you&#x2014;it gets confused. When you&#x2019;re writing an extensive design document for the next project, it can only help you with the formatting and structure, not the hardest part &#x2013; the substance. It just doesn&#x2019;t have all the nuance and context you&#x2019;ve accumulated in your head, and even if you wanted to, you couldn&#x2019;t write it down.<br /><br />Many of your friends and colleagues are excited, and you want to be excited, but you just can&#x2019;t. The AI is simply not there yet. This is probably the level where the most scepticism about LLMs comes from, and the more technical or unique your domain is, the stronger the disillusionment.</blockquote><h3 id=\"staff-engineer\"><a href=\"https://serce.me/posts/2025-02-07-the-llm-curve-of-impact-on-software-engineers?ref=ghuntley.com#staff-engineer\"></a>Staff+ Engineer</h3><blockquote>While there are many&#xa0;<a href=\"https://staffeng.com/guides/staff-archetypes/?ref=ghuntley.com\">staff archetypes</a>&#xa0;out there, one thing is common between them all &#x2013; your role is often to light the path for others to follow. And to achieve this, you have to experiment a lot.<br /><br />Here&#x2019;s where LLMs can start shining again. Writing proof-of-concept projects has suddenly become much easier. If you need to show the feasibility of taking an approach, an LLM can help create a half-baked, barely working solution much faster than without it. And the best part is that once the LLM gets stuck, you can very quickly get it unstuck using the extensive domain knowledge in your brain.</blockquote><h2 id=\"companies-are-closing-their-doors-on-juniors\">companies are closing their doors on juniors</h2><p>Staff+, senior and mid-level engineers (who invest in themselves) are now more desirable because they can use their expertise to output multiple factors more code, and thanks to wisdom earned over the years (or tens of years), they are able to obtain better outcomes from AI as they have the experience to know when the AI is bullshitting and have developed taste for what does or does not look right.</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://ghuntley.com/squirrel-burgers/\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">No other profession trivialises their profession to the degree of software</div><div class=\"kg-bookmark-description\">Software in 2022 is overwhelmingly built with little to no consequence and is made up of other components which are overwhelmingly developed by unpaid volunteers on an AS-IS basis that are being financially neglected. Systemically, I&#x2019;m concerned that there is a lack of professional liability, rigorous industry best practices, and</div><div class=\"kg-bookmark-metadata\"><img alt=\"Dear Student: Yes, AI is here, you&apos;re screwed unless you take action...\" class=\"kg-bookmark-icon\" src=\"https://ghuntley.com/content/images/icon/android-chrome-192x192.png\" /><span class=\"kg-bookmark-author\">Geoffrey Huntley</span><span class=\"kg-bookmark-publisher\">Geoffrey Huntley</span></div></div><div class=\"kg-bookmark-thumbnail\"><img alt=\"Dear Student: Yes, AI is here, you&apos;re screwed unless you take action...\" src=\"https://ghuntley.com/content/images/thumbnail/Bridges_25.png\" /></div></a></figure><h2 id=\"companies-dont-even-know-how-to-hire-any-more\">companies don&apos;t even know how to hire any more</h2><p>With hundreds of thousands of dollars at stake, all the incentives are there for candidates to cheat. The video below is one of many tools that now exist today that hook the video render of macOS and provide overlays (similar to how OpenGL game hacks work) that can&apos;t be detected by screen recording software or Zoom.</p><figure class=\"kg-card kg-embed-card\"></figure><p>The software interview process was never great but it&apos;s taken a turn for the worst as AI can easily solve any thing thrown at it - including interview screenings.</p><p>Another co-worker of mine recently penned the blog post below, which went viral on HackerNews. I highly recommend <a href=\"https://news.ycombinator.com/item?id=43108673&amp;ref=ghuntley.com\">reading the comments</a>. </p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://kanenarraway.com/posts/ai-killed-the-tech-interview-now-what/?ref=ghuntley.com\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">AI Killed The Tech Interview. Now What?</div><div class=\"kg-bookmark-description\">How can we do better interviews in the age of AI</div><div class=\"kg-bookmark-metadata\"><img alt=\"Dear Student: Yes, AI is here, you&apos;re screwed unless you take action...\" class=\"kg-bookmark-icon\" src=\"https://static.ghost.org/v5.0.0/images/link-icon.svg\" /><span class=\"kg-bookmark-author\">Kane Narraway</span><span class=\"kg-bookmark-publisher\">Kane Narraway</span></div></div><div class=\"kg-bookmark-thumbnail\"><img alt=\"Dear Student: Yes, AI is here, you&apos;re screwed unless you take action...\" src=\"https://ghuntley.com/content/images/thumbnail/techinterview.jpg\" /></div></a></figure><h2 id=\"companies-business-models-are-in-jeopardy\">companies&apos; business models are in jeopardy</h2><p>It&apos;s now incredibly easy to clone any SaaS company if you know how to drive AI and have the expertise. SaaS is about service, but now, the incoming generation of leanly operated AI businesses will undermine SaaS operating margins. They will scale with AI - not humans. </p><figure class=\"kg-card kg-embed-card\"><blockquote class=\"twitter-tweet\"><p dir=\"ltr\" lang=\"en\">AI-powered B2B SaaS apps are in trouble &#x1f635;&#x200d;&#x1f4ab;<br /><br />Instead of paying almost $20,000 I made an AI-powered support bot in less than 3 hours using only <a href=\"https://twitter.com/cursor_ai?ref_src=twsrc%5Etfw&amp;ref=ghuntley.com\">@cursor_ai</a> and  Claude 3.7<br /><br />Fully open-source. Clone the repo and set up your own in less than 5 minutes.<br /><br />This is the future of software. <a href=\"https://t.co/8RWi8oYPeB?ref=ghuntley.com\">https://t.co/8RWi8oYPeB</a> <a href=\"https://t.co/MSPVRYOSog?ref=ghuntley.com\">pic.twitter.com/MSPVRYOSog</a></p>&#x2014; Sam Hogan &#x1f1fa;&#x1f1f8; (@0xSamHogan) <a href=\"https://twitter.com/0xSamHogan/status/1894937763717550272?ref_src=twsrc%5Etfw&amp;ref=ghuntley.com\">February 27, 2025</a></blockquote>\n</figure><p>You&apos;ve already read the article below where this was hinted at, so I&apos;ll supplement with the following wisdom. I suspect the future of work is going to be lots of small 10-person companies operating similar to how a law firm works - with profit sharing between the senior partners. </p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://ghuntley.com/dothings/\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">The future belongs to idea guys who can just do things</div><div class=\"kg-bookmark-description\">There, I said it. I seriously can&#x2019;t see a path forward where the majority of software engineers are doing artisanal hand-crafted commits by as soon as the end of 2026. If you are a software engineer and were considering taking a gap year/holiday this year it would be an</div><div class=\"kg-bookmark-metadata\"><img alt=\"Dear Student: Yes, AI is here, you&apos;re screwed unless you take action...\" class=\"kg-bookmark-icon\" src=\"https://ghuntley.com/content/images/icon/android-chrome-192x192-1.png\" /><span class=\"kg-bookmark-author\">Geoffrey Huntley</span><span class=\"kg-bookmark-publisher\">Geoffrey Huntley</span></div></div><div class=\"kg-bookmark-thumbnail\"><img alt=\"Dear Student: Yes, AI is here, you&apos;re screwed unless you take action...\" src=\"https://ghuntley.com/content/images/thumbnail/1_96TO5SzegxgqzECdkV2LNA.webp\" /></div></a></figure><h2 id=\"so-when-does-this-story-get-good\">so, when does this story get good?</h2><p>If you graduated last year and are entering the workforce this year, then it doesn&apos;t unless you take action. It&apos;s a COVID19 moment in life again. </p><figure class=\"kg-card kg-embed-card\"><blockquote class=\"twitter-tweet\"><p dir=\"ltr\" lang=\"en\">* <a href=\"https://t.co/pqaA3Pip9v?ref=ghuntley.com\">https://t.co/pqaA3Pip9v</a><br /><br />* <a href=\"https://t.co/NK41GANrbg?ref=ghuntley.com\">https://t.co/NK41GANrbg</a><br /><br />SWE Agents have gone mainstream. <br /><br />Time for all CS departments to refund tuitions to their students and close the doors. It is over.</p>&#x2014; Erik Meijer (@headinthebox) <a href=\"https://twitter.com/headinthebox/status/1887586564089520179?ref_src=twsrc%5Etfw&amp;ref=ghuntley.com\">February 6, 2025</a></blockquote>\n</figure><p>If you are a student who has just started university and will be graduating four years from now - there will be software engineering roles, although <a href=\"https://ghuntley.com/multi-boxing/\">they will be different</a>. </p><p>What&apos;s likely to happen is - if more companies close their doors to juniors then the next generation of juniors won&apos;t be raised - similar to what happened in the dotcom boom/bust - and we&#x2019;ll get another boom - which will lead to the incredible perks and fat paychecks for people with the right skills because not enough juniors entered the workforce&#x2026;</p><h2 id=\"what-would-i-do-if-i-was-in-your-shoes\">what would I do if I was in your shoes..</h2><p>Understand that time is on your side if you take action. You have about a year, maybe less. Whatever you do - do not squander it. Your current edge is that most software engineers have not discovered what you have. When they do - it&apos;s game over unless you have an edge.</p><figure class=\"kg-card kg-image-card\"><img alt=\"Dear Student: Yes, AI is here, you&apos;re screwed unless you take action...\" class=\"kg-image\" height=\"643\" src=\"https://ghuntley.com/content/images/2025/02/image-15.png\" width=\"1600\" /></figure><p><strong>Learn the fundamentals that university typically does not teach:</strong></p><ul><li>Create an application (it can be anything, even a basic todo app website)</li><li>Learn how to do property-based testing and craft code that can be tested.</li><li>Set up a CI pipeline (something other than GitHub Actions).</li><li>Learn SCM (source code management) such as Git from first principles (<a href=\"https://github.com/georgeowen1993/learn-git-the-hard-way/tree/master?ref=ghuntley.com\">pdf</a>). </li><li>Learn how to release software in increments using SCM+CI+Property Based Testing.</li></ul><p><strong>Find yourself a peer that pushes you to the limits of learning</strong><br />The standard pace of learning is for chumps. If you are better than the average, then you can fold space-time and outpace the competition. Read this blog post.</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://sive.rs/kimo?ref=ghuntley.com\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">There&#x2019;s no speed limit | Derek Sivers</div><div class=\"kg-bookmark-description\"></div><div class=\"kg-bookmark-metadata\"><img alt=\"Dear Student: Yes, AI is here, you&apos;re screwed unless you take action...\" class=\"kg-bookmark-icon\" src=\"https://ghuntley.com/content/images/icon/favicon-3.ico\" /><span class=\"kg-bookmark-author\">Derek Sivers</span></div></div><div class=\"kg-bookmark-thumbnail\"><img alt=\"Dear Student: Yes, AI is here, you&apos;re screwed unless you take action...\" src=\"https://ghuntley.com/content/images/thumbnail/kimohat.jpg\" /></div></a></figure><p><strong>Do not join a Startup</strong><br />In the last VC boom and bust before AI, many startups raised too much capital or engaged in outright fraud to pump their customer numbers up by cross-selling with each other. The AI that&apos;s about to happen is going to be brutal for them&#x2014;there are many, many living, dead zombie companies out there.</p><p>Only join an existing startup if it pays well (ignore the equity/dreams of a jackpot) and if you find an operating environment that pushes your growth and learning to the limits. </p><p>Understand that most Startups fail, and you could be out on your ass overnight. Ensure you have plenty of cash stowed away - it could take you +6 months to find a new role.</p><p><strong>Don&apos;t get a job that has a ban on AI coding tools</strong><br />You&apos;ll be doing yourself a huge disservice. Look for companies that encourage it.</p><p><strong>Obtain skills that are going to be highly desirable by every employer</strong><br />I&apos;m going to call it right now - ignore commodity bullshit disposable knowledge like AWS - focus on what people don&apos;t know and what will be in demand.</p><p>Become a subject matter expert in <a href=\"https://ghuntley.com/mcp/\" rel=\"noreferrer\">MCPs</a>. There is brand new territory open to you right now to be a prolific open-source author of MCPs, as not many people are creating them at this moment in time. <br /><br />Pull apart <a href=\"https://github.com/block/goose?ref=ghuntley.com\">https://github.com/block/goose</a> and <a href=\"https://github.com/All-Hands-AI/OpenHands?ref=ghuntley.com\">https://github.com/All-Hands-AI/OpenHands</a>. Learn how they work and then build your own AI coding assistant from the ground up, starting with the first principles, or follow along with my series on building them incrementally, piece by piece.</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://ghuntley.com/specs/\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">From Design doc to code: the Groundhog AI coding assistant (and new Cursor meta)</div><div class=\"kg-bookmark-description\">Ello everyone, in the &#x201c;Yes, Claude Code can decompile itself. Here&#x2019;s the source code&#x201d; blog post, I teased about a new meta when using Cursor. This post is a follow-up to the post below. You are using Cursor AI incorrectly...I&#x2019;m hesitant to give this advice away for free,</div><div class=\"kg-bookmark-metadata\"><img alt=\"Dear Student: Yes, AI is here, you&apos;re screwed unless you take action...\" class=\"kg-bookmark-icon\" src=\"https://ghuntley.com/content/images/icon/android-chrome-192x192-11.png\" /><span class=\"kg-bookmark-author\">Geoffrey Huntley</span><span class=\"kg-bookmark-publisher\">Geoffrey Huntley</span></div></div><div class=\"kg-bookmark-thumbnail\"><img alt=\"Dear Student: Yes, AI is here, you&apos;re screwed unless you take action...\" src=\"https://ghuntley.com/content/images/thumbnail/1-1.png\" /></div></a></figure><p>You want to be the employee that companies are fighting for because you have 6+ months edge on everyone else and are bringing new ideas/techniques to the table. Become the one that understands what all these tools do - under the hood - better than an engineer who&apos;s 20+ years into their career and hasn&apos;t been paying attention.</p><p><strong>Focus on shipping with rust</strong><br />Every programming language community and ecosystem has a window in time when it attracts brilliant minds. Right now, that&apos;s the Rust ecosystem. It&apos;s full of innovators&#x2014;you want to hang out with them. </p><p>If you focus on learning something commodity, such as typescript, you are incorrectly positioned yourself. Having said all of that, programming languages no longer matter, but Rust has a unique property where it&apos;s able to achieve better outcomes with LLMs due to its type system that other programming languages (except Haskell) lack.</p><p><strong>Understand how your work directly translates to business value</strong><br />The organizational abstraction layers are shrinking. Going forward, it&apos;s incredibly important to think and act like an entrepreneur. You aren&apos;t a software engineer who types code into an IDE - those days are gone. Instead, you need to understand how your work directly translates to business value and to achieve that; you need to become a product engineer. Find yourself a product manager (or founder) who has immense domain depth and befriend them. Learn what high-value problems are to be solved and discover their pain points/research items by walking in their boots or the boots of a customer. Be a doctor, not a waiter. Learn a little bit about business and finance.</p><p><strong>Build a widget, not an aeroplane</strong><br />When building, start small. As soon as you make the tiniest of things, share them with the world. Take the approach of building lots of small things that compose well and can be combined to make something big. It&apos;s a marathon, not a sprint.</p><p><strong>Build a public profile</strong><br />I can&apos;t stress this enough. So many opportunities in my life that yielded fruits only happened because I manifested luck. Once you have a couple of MCPs under your belt and you are on the way to building your own AI coding assistant, start networking. Don&apos;t network to get a job. Network to share your knowledge with others.</p><p>In application, this means:</p><ul><li>Create your own personal, professional website (i.e. name dot com) and regularly post what you learn. Start small - build this - <a href=\"https://til.simonwillison.net/?ref=ghuntley.com\">https://til.simonwillison.net/</a></li><li>Create a GitHub account and start publishing all your work there</li><li>Publishing your MCP tools on npm and/or crates.io (recruiters scour these two)</li><li>Attend meetups&#x2014;they are always looking for speakers. Public speaking is hard, no matter how good you get. Push past it and start sharing your knowledge.</li><li>Identify peers and build relations with them. Share your knowledge without asking for anything in return.</li></ul><p><strong>Play with the tools, develop edges and unique insights...</strong></p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://ghuntley.com/mcp/\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">A Model Context Protocol Server (MCP) for Microsoft Paint</div><div class=\"kg-bookmark-description\">Why did I do this? I have no idea, honest, but it now exists. It has been over 10 years since I last had to use the Win32 API, and part of me was slightly curious about how the Win32 interop works with Rust. Anywhoooo, below you&#x2019;ll find the primitives</div><div class=\"kg-bookmark-metadata\"><img alt=\"Dear Student: Yes, AI is here, you&apos;re screwed unless you take action...\" class=\"kg-bookmark-icon\" src=\"https://ghuntley.com/content/images/icon/android-chrome-192x192-24.png\" /><span class=\"kg-bookmark-author\">Geoffrey Huntley</span><span class=\"kg-bookmark-publisher\">Geoffrey Huntley</span></div></div><div class=\"kg-bookmark-thumbnail\"><img alt=\"Dear Student: Yes, AI is here, you&apos;re screwed unless you take action...\" src=\"https://ghuntley.com/content/images/thumbnail/GmegnMwa0AAKQB--4.jpg\" /></div></a></figure><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://ghuntley.com/specs/\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">From Design doc to code: the Groundhog AI coding assistant (and new Cursor meta)</div><div class=\"kg-bookmark-description\">Ello everyone, in the &#x201c;Yes, Claude Code can decompile itself. Here&#x2019;s the source code&#x201d; blog post, I teased about a new meta when using Cursor. This post is a follow-up to the post below. You are using Cursor AI incorrectly...I&#x2019;m hesitant to give this advice away for free,</div><div class=\"kg-bookmark-metadata\"><img alt=\"Dear Student: Yes, AI is here, you&apos;re screwed unless you take action...\" class=\"kg-bookmark-icon\" src=\"https://ghuntley.com/content/images/icon/android-chrome-192x192-10.png\" /><span class=\"kg-bookmark-author\">Geoffrey Huntley</span><span class=\"kg-bookmark-publisher\">Geoffrey Huntley</span></div></div><div class=\"kg-bookmark-thumbnail\"><img alt=\"Dear Student: Yes, AI is here, you&apos;re screwed unless you take action...\" src=\"https://ghuntley.com/content/images/thumbnail/1.png\" /></div></a></figure><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://ghuntley.com/stdlib/\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">You are using Cursor AI incorrectly...</div><div class=\"kg-bookmark-description\">I&#x2019;m hesitant to give this advice away for free, but I&#x2019;m gonna push past it and share it anyway. You&#x2019;re using Cursor incorrectly. Over the last few weeks I&#x2019;ve been doing /zooms with software engineers - from entry level, to staff level and all the way up to principal level.</div><div class=\"kg-bookmark-metadata\"><img alt=\"Dear Student: Yes, AI is here, you&apos;re screwed unless you take action...\" class=\"kg-bookmark-icon\" src=\"https://ghuntley.com/content/images/icon/android-chrome-192x192-2.png\" /><span class=\"kg-bookmark-author\">Geoffrey Huntley</span><span class=\"kg-bookmark-publisher\">Geoffrey Huntley</span></div></div><div class=\"kg-bookmark-thumbnail\"><img alt=\"Dear Student: Yes, AI is here, you&apos;re screwed unless you take action...\" src=\"https://ghuntley.com/content/images/thumbnail/s-l1600.jpg\" /></div></a></figure><p>ps. socials @ <a href=\"https://x.com/GeoffreyHuntley/status/1895043009991032996?ref=ghuntley.com\">https://x.com/GeoffreyHuntley/status/1895043009991032996</a> </p><figure class=\"kg-card kg-embed-card\"></figure>"
            ],
            "link": "https://ghuntley.com/screwed/",
            "publishedAt": "2025-02-27",
            "source": "Geoffrey Huntley",
            "summary": "<p>Two weeks ago a student <a href=\"https://ghuntley.com/im-a-student/\">anonymously emailed me</a> asking for advice. This is the reply and if I was in your shoes this is what I&apos;d do.</p><blockquote>So, I read your blog post &quot;<a href=\"https://ghuntley.com/oh-fuck/\" rel=\"noreferrer\">An oh f*** moment in time</a>&quot; alongside &quot;<a href=\"https://ghuntley.com/dothings/\" rel=\"noreferrer\">The future belongs to idea</a></blockquote>",
            "title": "Dear Student: Yes, AI is here, you're screwed unless you take action..."
        },
        {
            "content": [],
            "link": "https://harper.blog/notes/2025-03-03_f07c87dc5ff2_was-able-to-grab-some-photos-o/",
            "publishedAt": "2025-03-04",
            "source": "Harper Reed",
            "summary": "<p>Was able to grab some photos of our friends Jordan and Marlene.</p> <figure> <img alt=\"image_1.jpg\" height=\"1800\" src=\"https://harper.blog/notes/2025-03-03_f07c87dc5ff2_was-able-to-grab-some-photos-o/image_1.jpg\" width=\"1800\" /> </figure> <figure> <img alt=\"image_2.jpg\" height=\"1800\" src=\"https://harper.blog/notes/2025-03-03_f07c87dc5ff2_was-able-to-grab-some-photos-o/image_2.jpg\" width=\"1800\" /> </figure> <hr /> <p>Thank you for using RSS. I appreciate you. <a href=\"mailto:harper&#64;modest.com\">Email me</a></p>",
            "title": "Note #183"
        },
        {
            "content": [],
            "link": "https://paulgraham.com/do.html",
            "publishedAt": "2025-03-01",
            "source": "Paul Graham",
            "summary": "",
            "title": "What to Do"
        },
        {
            "content": [],
            "link": "https://qntm.org/antimemetics",
            "publishedAt": "2025-03-03",
            "source": "QNTM",
            "summary": "<b><a href=\"https://qntm.org/antimemetics\">Fiction</a> \u00bb</b> \n\nOn sale 11 November 2025. Preorder now.\n...",
            "title": "There Is No Antimemetics Division"
        },
        {
            "content": [
                "<p>Years ago at Borland. My first real gig. I was poached from an internship into a full-time QA gig. When I accepted the offer, they sent me a box of Borland schwag, t-shirts, notebooks, and pens. I was elated. No more hourly wages, I was full-time.</p>\n<p>Six months in, my manager sat me down at her desk and slid a piece of paper over. She was quiet and, in hindsight, nervous. I read the paper and realized she was documenting how I had failed at my job. She asked me to sign the piece of paper I&#8217;d barely read.</p>\n<p>I did. Next to my signature was a date. It wasn&#8217;t today; it was 90 days from today.</p>\n<h2>Disclaimers</h2>\n<p>I wrote a piece about <a href=\"https://randsinrepose.com/archives/a-performance-question/\">performance management</a> a few years back. This was entirely for managers. This piece is for the individual contributor on a performance plan, but I need to set two initial conditions to make this helpful.</p>\n<p>First, there are bad managers who use performance management not to address a performance issue but to let go of an employee as quickly as possible. Sorry. These managers suck. For <em>this</em> article&#8217;s sake, we assume the manager intends to address the performance issue.</p>\n<p>Second, I&#8217;m assuming this is a fixable situation. You are in a job you can do, and through a combination of your and your manager&#8217;s focused effort, it is possible to succeed.</p>\n<h2>The First Challenge: Acceptance</h2>\n<p>&#8220;I had no idea I was failing.&#8221;</p>\n<p>I thought this when my manager slid the paper over to me. I&#8217;ve heard this when I was the manager, and I hear this over and over via the recap when my managers deliver a performance plan.</p>\n<p>This is the overwhelming first reaction to a performance plan, and the contributing factors for this reaction are:</p>\n<ul>\n<li>Humans really don&#8217;t like to give negative feedback. In fact, we&#8217;ve rebranded this type of feedback as constructive feedback because we are so profoundly uncomfortable delivering it. Because <a href=\"https://randsinrepose.com/archives/say-the-hard-thing/\">we avoid giving it early and often</a>, this is likely the first time you&#8217;ve heard it in a focused and direct way. </li>\n<li>Humans really don&#8217;t like to receive negative feedback. It&#8217;s a self-preservation thing. It&#8217;s pride. We effortlessly twist the story to hear the narrative that best suits our worldview. </li>\n</ul>\n<p>Your first of four challenges is entertaining the idea that you can fail. You&#8217;re not going to wholesale believe this right now, but if you can&#8217;t consider the possibility of failing, you certainly won&#8217;t be able to address it.</p>\n<h2>The Second Challenge: Clarity</h2>\n<p>After your initial reluctant acceptance of the situation, the second challenge is clarifying the current state and remediations. Assuming you have a competent manager, this data should be sitting right in front of you in a written form, but here&#8217;s what you need to do, preferably during this first meeting:</p>\n<ul>\n<li>Read the description of the situation. Forgetting your instinct to holler, &#8220;This is a total surprise&#8221; does the description make sense? Is it fair? Does it describe reality? If you declare, &#8220;Everything here is wrong, and this is a travesty,&#8221; you fail the first challenge. Clarifying misperceptions, adding critical missing data, and asking for more detail are the first healthy steps in resolving this situation, and they demonstrate your willingness to do so.</li>\n<li>Read the expected next steps. This is a description of the work you need to complete. Like the description of the situation, the goal is understanding. What work do you need to complete? Is it obvious how success will be measured for these tasks? How often will we be meeting to review progress?</li>\n<li>Finally, there&#8217;s that date at the end of the document. What does it mean? Delicate topic here because it could mean, &#8220;We&#8217;ll check-in on this date&#8221; or &#8220;This is when we&#8217;ll decide on your status at the company.&#8221; Understanding what this date means is critical data you need.</li>\n</ul>\n<p>The time you take to review this document the moment it lands is essential. Yes, it&#8217;s okay to sleep on it and have additional questions later, but at this first moment, you are setting expectations with your manager about how you will approach this work. Constructively engaging in the conversation sets a starting constructive tone.</p>\n<h2>The Third Challenge: Do the Work</h2>\n<p>Once everyone agrees on what actions to take and what success looks like, we begin the third challenge: do the work.</p>\n<p>The challenge here is focus. Remember that piece of paper she slid over and had me sign? I asked about that date, which was 90 days in the future. The answer was, &#8220;If we don&#8217;t fix this by this date, then we will take action.&#8221; The date exists to give the plan structure, but it feels like a threat. It sounds like an angry clock ticking in the back of your head, and if all you do is obsess about the ticking, you won&#8217;t do the work.</p>\n<p>Focus on the work. Back at Borland, I was so new to the industry that I didn&#8217;t understand the gig. Borland was experiencing rapid growth, so my manager didn&#8217;t spend sufficient time with me, and I was all over the place.</p>\n<p>The work:</p>\n<ul>\n<li>Write test plans that exercise new features.</li>\n<li>Find defects by executing these test plans and performing ad-hoc spot testing.</li>\n<li>Report these defects in a manner that is helpful to the folks who will be fixing these defects.</li>\n<li>Carefully confirm when these defects are reported closed. </li>\n</ul>\n<p>That&#8217;s it. That was my job. Why was I failing? My memory is hazy, but I think we were many months (years?) away from having a testable product, so I was tinkering. Writing little throw-away automation scripts. Goofing around with a partially implemented product. Waiting for someone to tell me what to do. The features weren&#8217;t close to done, so no test plans and no defects were filed, so I tinkered. I goofed around, probably until the paper slid across the table.</p>\n<p>Time to work.</p>\n<p>Test plans. Yes, the feature was still being built, but two conversations with the engineers in the hallway quickly described what was and wasn&#8217;t working. Great, here is the first draft of the test plans for the working portions of the feature. Yes, they would change once the complete feature landed, but a partial test plan both framed my initial thinking and could confirm what was even partially working for engineering.</p>\n<p>Find, report, and confirm defects. From the test plan. Yes, most of these defects were never fixed because the product changed so much, but the defects I filed demonstrated that I understood the current state of the product. When the defects were particularly heinous, they were fixed quickly.</p>\n<p>And I asked for help. With the angry clock tick tocking in your ear, it&#8217;s easy to narrow your focus to what you can do right now, but the clarity you defined in the first challenge will only take you so far. You need help, and while asking might feel like admitting weakness, it builds strength. Your request for help tells those you ask that you care about their opinion and are serious about the work.</p>\n<h2>The Final Challenge: Exceed Expectations</h2>\n<p>You will succeed at this performance plan by achieving what your manager describes in the document. The final challenge might be optional, but I think it&#8217;s critical. I&#8217;ve repeatedly reminded you to face this situation stoically, calmly ask for clarification, and purposefully attack the work, but\u2026</p>\n<p>\u2026 it&#8217;s still a hit. An ego hit. I thought I was doing ok until I wasn&#8217;t. I was embarrassed when I realized what was written on the paper and ashamed while considering my next steps that weekend.</p>\n<p>The final challenge isn&#8217;t just to do the work but to exceed expectations. My approach at Borland and whenever a helpful someone gives me constructive feedback is to hear it, address it, and act on it in a fashion that demonstrates that I am the expert.</p>\n<p>My testing area back at Borland was database creation and editing for Paradox for Windows. The user interface to create a database and later change its structure. When I arrived, the user interface did not exist. Databases were being created and edited via the command line or the prior DOS-based version of the product.</p>\n<p>My goal: become an expert in this area. Develop a deep understanding of the database&#8217;s characteristics, the different record types, performance, and storage characteristics. There was much to know, and little was written down, so I wandered the halls. I badgered the engineers for any data they could share. Yes, just scribble on the whiteboard. That&#8217;s fine. Product management? Tell me what you think. Hopes and dreams are fine. Here&#8217;s a piece of paper \u2014 scribble away. This is useful because, amongst the chaos of developing a 1.0 product, I began to have the clearest view of our goals for creating and editing a database.</p>\n<p>Months later. Long after the performance plan was complete, I remember the head of product, an engineering director, and the engineer responsible for the feature walked into my office with a floppy disc. I grabbed the disc, installed the root, and hammered on the latest bits. No automated testing, just me running an ad-hoc smoke test \u2014 from memory \u2014 to assess the quality of these close to final bits. Took five minutes, and halfway through, the director smiled and looked at the head of product and said, &#8220;Told you. He&#8217;s the guy.&#8221;</p>\n<p>I finished, spun around in my chair, and said, &#8220;It&#8217;s good.&#8221; Each of these humans was here because of the relationships I formed when asking endless questions about the product for which I was accountable.</p>\n<p>The hardest part of a performance plan isn&#8217;t stoicism, understanding, or doing the work. It&#8217;s recovering from the gut punch that comes with recognized failure. Exceeding expectations isn&#8217;t about doing extra work but building confidence in one&#8217;s capabilities.</p>\n<h2>90 Days and Signature</h2>\n<p>You&#8217;re reading a recap of a performance plan that occurred decades ago, told as an idyllic tale of success designed to educate. I did eventually succeed at Borland, but I&#8217;m confident that I said nothing when the paper slid over. I was ashamed. I was depressed that weekend. I didn&#8217;t jump into Monday with vim and vigor. I was confused and spiraled into self-pity.</p>\n<p>I don&#8217;t remember how I turned it around, but it started when I signed this paper that defined a deadline. It started when I accepted the failure of my prior work. I&#8217;ve used this practice over and over again through the years because I fail quite a bit. It&#8217;s never fun and often embarrassing, but it&#8217;s always an opportunity to start a learning process.</p>\n<p>I do vividly remember one moment from the following week. I was sitting in a conference room that had been converted into cubes. I was staring dumbly at my screen when my manager walked in, sat on the edge of my desk, and stared at me momentarily before asking, &#8220;How are you?&#8221;</p>\n<p>I responded, &#8220;I&#8217;m good. Let&#8217;s do this.&#8221;</p>\n<p>So we did.</p>"
            ],
            "link": "https://randsinrepose.com/archives/ok-so-youre-failing/",
            "publishedAt": "2025-03-03",
            "source": "Rands in Repose",
            "summary": "Years ago at Borland. My first real gig. I was poached from an internship into a full-time QA gig. When I accepted the offer, they sent me a box of Borland schwag, t-shirts, notebooks, and pens. I was elated. No more hourly wages, I was full-time. Six months in, my manager sat me down at&#8230; <a class=\"read-more\" href=\"https://randsinrepose.com/archives/ok-so-youre-failing/\">More</a>",
            "title": "Ok. So, You\u2019re Failing"
        },
        {
            "content": [],
            "link": "https://simonwillison.net/2025/Mar/4/squadron/#atom-entries",
            "publishedAt": "2025-03-04",
            "source": "Simon Willison",
            "summary": "<p>I believe that the price you have to pay for taking on a project is <a href=\"https://simonwillison.net/2022/Nov/6/what-to-blog-about/#projects\">writing about it afterwards</a>. On that basis, I feel compelled to write up my decidedly non-software project from this weekend: Squadron, an automaton.</p> <p>I've been obsessed with <a href=\"https://en.wikipedia.org/wiki/Automaton\">automata</a> for decades, ever since I first encountered the <a href=\"https://en.wikipedia.org/wiki/Cabaret_Mechanical_Theatre\">Cabaret Mechanical Theater</a> in Covent Garden in London (there from 1984-2003 - today it's a roaming collection). If you're not familiar with them, they are animated mechanical sculptures. I consider them to be the highest form of art.</p> <p>For my birthday this year Natalie signed me up for a two day, 16 hour hour weekend class to make one at <a href=\"https://www.thecrucible.org/\">The Crucible</a> in Oakland. If you live in the SF Bay Area and are not yet aware of the Crucible I'm delighted to introduce you - it's a phenomenal non-profit art school with an enormous warehouse that teaches blacksmithing, glass blowing, welding, ceramics, woodwork and dozens of other crafts. Here's <a href=\"https://www.thecrucible.org/course-search/\">their course catalog</a>. Go enrich your soul!</p> <p>I took their class in \"Mechanical Sculpture\", which turned out to be <em>exactly</em> a class in how to make automata. I guess the term \"automota\" isn't widely",
            "title": "I built an automaton called Squadron"
        },
        {
            "content": [],
            "link": "https://simonwillison.net/2025/Mar/2/accessibility-and-gen-ai/#atom-entries",
            "publishedAt": "2025-03-02",
            "source": "Simon Willison",
            "summary": "<p>I was a guest on <a href=\"https://accessibility-and-gen-ai.simplecast.com/episodes/ep-6-simon-willison-datasette\">the most recent episode</a> of the <a href=\"https://linktr.ee/a11ygenai\">Accessibility + Gen AI Podcast</a>, hosted by Eamon McErlean and Joe Devon. We had a really fun, wide-ranging conversation about a host of different topics. I've extracted a few choice quotes from the transcript.</p> <p> </p> <h4 id=\"alt-text\">LLMs for drafting alt text</h4> <p>I use LLMs for the first draft of my alt text (<a href=\"https://www.youtube.com/watch?v=zoxpEM6TLEU&amp;t=22m10s\">22:10</a>):</p> <blockquote> <p>I actually use Large Language Models for most of my alt text these days. Whenever I tweet an image or whatever, I've got a Claude project called Alt text writer. It's got a prompt and an example. I dump an image in and it gives me the alt text.</p> <p>I very rarely just use it because that's rude, right? You should never dump text onto people that you haven't reviewed yourself. But it's always a good starting point.</p> <p>Normally I'll edit a tiny little bit. I'll delete an unimportant detail or I'll bulk something up. And then I've got alt text that works.</p> <p>Often it's actually got really good taste. A great example is if you've got a screenshot of an interface, there's a lot of words in that screenshot and",
            "title": "Notes from my Accessibility and Gen AI podcast appearance"
        },
        {
            "content": [],
            "link": "https://simonwillison.net/2025/Mar/2/hallucinations-in-code/#atom-entries",
            "publishedAt": "2025-03-02",
            "source": "Simon Willison",
            "summary": "<p>A surprisingly common complaint I see from developers who have tried using LLMs for code is that they encountered a hallucination - usually the LLM inventing a method or even a full software library that doesn't exist - and it crashed their confidence in LLMs as a tool for writing code. How could anyone productively use these things if they invent methods that don't exist?</p> <p>Hallucinations in code <strong>are the least harmful hallucinations you can encounter from a model</strong>.</p> <p>(When I talk about <em>hallucinations</em> here I mean instances where an LLM invents a completely untrue fact, or in this case outputs code references which don't exist at all. I see these as a separate issue from bugs and other mistakes, which are the topic of the rest of this post.)</p> <p>The real risk from using LLMs for code is that they'll make mistakes that <em>aren't</em> instantly caught by the language compiler or interpreter. And these happen <em>all the time</em>!</p> <p>The moment you run LLM generated code, any hallucinated methods will be instantly obvious: you'll get an error. You can fix that yourself or you can feed the error back into the LLM and watch it correct itself.</p> <p>Compare this to",
            "title": "Hallucinations in code are the least dangerous form of LLM mistakes"
        },
        {
            "content": [],
            "link": "https://simonwillison.net/2025/Feb/28/llm-schemas/#atom-entries",
            "publishedAt": "2025-02-28",
            "source": "Simon Willison",
            "summary": "<p><a href=\"https://llm.datasette.io/en/stable/changelog.html#v0-23\">LLM 0.23</a> is out today, and the signature feature is support for <strong><a href=\"https://llm.datasette.io/en/stable/schemas.html\">schemas</a></strong> - a new way of providing structured output from a model that matches a specification provided by the user. I've also upgraded both the <a href=\"https://github.com/simonw/llm-anthropic\">llm-anthropic</a> and <a href=\"https://github.com/simonw/llm-gemini\">llm-gemini</a> plugins to add support for schemas.</p> <p>TLDR: you can now do things like this:</p> <div class=\"highlight highlight-source-shell\"><pre>llm --schema <span class=\"pl-s\"><span class=\"pl-pds\">'</span>name,age int,short_bio<span class=\"pl-pds\">'</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>invent a cool dog<span class=\"pl-pds\">'</span></span></pre></div> <p>And get back:</p> <div class=\"highlight highlight-source-json\"><pre>{ <span class=\"pl-ent\">\"name\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Zylo<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-ent\">\"age\"</span>: <span class=\"pl-c1\">4</span>, <span class=\"pl-ent\">\"short_bio\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Zylo is a unique hybrid breed, a mix between a Siberian Husky and a Corgi. With striking blue eyes and a fluffy, colorful coat that changes shades with the seasons, Zylo embodies the spirit of winter and summer alike. Known for his playful personality and intelligence, Zylo can perform a variety of tricks and loves to fetch his favorite frisbee. Always ready for an adventure, he's just as happy hiking in the mountains as he is cuddling on the couch after a long day of play.<span class=\"pl-pds\">\"</span></span> }</pre></div> <p>More details <a href=\"https://llm.datasette.io/en/stable/changelog.html#v0-23\">in the release notes</a> and <a href=\"https://llm.datasette.io/en/stable/schemas.html#schemas-tutorial\">LLM schemas tutorial</a>, which includes an example (extracting people",
            "title": "Structured data extraction from unstructured content using LLM schemas"
        }
    ],
    "lookbackDays": 7,
    "publishDate": "2025-03-05"
}
{
    "articles": [
        {
            "content": [
                "<div class=\"trix-content\">\n  <div>We're going all-in on <a href=\"https://omarchy.org\">Omarchy</a> at <a href=\"https://37signals.com/\">37signals</a>. Over the next three years, as the regular churn of hardware invites it, we're switching everyone on our Ops and Ruby programming teams to our own Arch-derived Linux distribution (and of course sharing all the improvements we make along the way with everyone else on Omarchy!).</div><div><br /></div><div>It's funny how nobody bats an eye when the company mandate is to use Macs or Windows, but when the prescription is Linux, it's suddenly surprising. It really shouldn't be. Your ability to control your own destiny with Linux is far superior to what you'll get from a closed-source, commercial operating system. Of course it is! The code is literally all there!</div><div><br /></div><div>True, you might face more challenges, and there won't be a vendor to call (unless you hop into the Enterprise Linux camp, which doesn't appeal to me either). But I've never given a damn about that. I started using Ruby to build Basecamp when we could barely fill a room in American with professional Ruby programmers. This is what we do here!</div><div><br /></div><div>This also means giving up on MacBooks and choosing <a href=\"https://frame.work/laptop13\">Framework laptops</a> as the new standard-issue equipment. Along with desktop machines <a href=\"https://frame.work/desktop\">from Framework</a> and <a href=\"https://www.bee-link.com/\">Beelink</a> both. PC hardware <a href=\"https://world.hey.com/dhh/cheap-mini-pcs-have-gotten-really-good-c70ab40f\">has gotten incredibly good</a> over the last few years, as <a href=\"https://world.hey.com/dhh/amd-in-everything-0ec0cc6e\">AMD in particular</a> has managed to extract many of the same processor improvements from TSMC, as Apple did so well with the M series. At least in terms of performance.</div><div><br /></div><div>Again, true, there is still a gap on the efficiency front. Nobody can currently beat Apple on the wattage-to-power ratio (but the gap is fast closing!). So battery life on Linux using Framework is currently a bit less. I get about 6 hours of mixed use from my Framework 13, so whenever I suspect that might be a problem, I bring a small <a href=\"https://www.amazon.com/Portable-Charger-TSA-Approved-Digital-Display/dp/B0BYNZXFM2\">20K mAh Anker battery</a> in the bag, and now I have double the capacity.&nbsp;</div><div><br /></div><div>A small concession on a rare occasion, but nothing like the performance AND battery deficit we willingly endured for decades on the Mac before Apple switched to their own chips. Because we wanted to run OSX. It was worth sacrifice a few other concerns for. Just like Linux is today.</div><div><br /></div><div>On the flip side, we'll get a massive boost in productivity from being able to run our Ruby on Rails test suites locally much faster. For our HEY application, even the fastest Mac, an M4 Max, is <a href=\"https://world.hey.com/dhh/the-framework-desktop-is-a-beast-636fb4ff\">almost twice as slow as a Framework Desktop machine running Linux</a>, which can do Docker natively.</div><div><br /></div><div>It's an exciting new adventure for us. Omarchy is already by far-and-away my favorite computing environment. Right up there in joy and wonder with the old Amiga days or early OSX. It's been a blast learning that so many other early-adopters have found the same feeling. Very reminiscent of the excitement in the early Ruby days. Knowing you'd found something super special that wasn't yet widely distributed (but poised to be).</div><div><br /></div><div>I spoke about all of this with Kimberly on <a href=\"https://37signals.com/podcast/moving-to-omarchy/\">a bonus episode of The REWORK Podcast</a>. Give it a listen if you're curious about the why, the how, and the inevitable objections.<br /><br />  <figure class=\"attachment attachment--preview attachment--lightboxable attachment--png\">\n      <a href=\"https://world.hey.com/dhh/68162450/blobs/eyJfcmFpbHMiOnsiZGF0YSI6MjIyMTI2MTg0NSwicHVyIjoiYmxvYl9pZCJ9fQ--b613608677416d87e43ecd57fb764baa98db940bd8fd19cab0e5ce8bb95a581f/ristretto-theme.png?disposition=attachment\" title=\"Download ristretto-theme.png\">\n        <img alt=\"ristretto-theme.png\" src=\"https://world.hey.com/dhh/68162450/representations/eyJfcmFpbHMiOnsiZGF0YSI6MjIyMTI2MTg0NSwicHVyIjoiYmxvYl9pZCJ9fQ--b613608677416d87e43ecd57fb764baa98db940bd8fd19cab0e5ce8bb95a581f/eyJfcmFpbHMiOnsiZGF0YSI6eyJmb3JtYXQiOiJwbmciLCJyZXNpemVfdG9fbGltaXQiOlszODQwLDI1NjBdLCJxdWFsaXR5Ijo2MCwibG9hZGVyIjp7InBhZ2UiOm51bGx9LCJjb2FsZXNjZSI6dHJ1ZX0sInB1ciI6InZhcmlhdGlvbiJ9fQ--7edc7b21f6fad97fa22412618822c4d19725431f296c7ce47dc174b61535d27c/ristretto-theme.png\" />\n</a>\n  </figure><br /><br />  <figure class=\"attachment attachment--preview attachment--lightboxable attachment--png\">\n      <a href=\"https://world.hey.com/dhh/68162450/blobs/eyJfcmFpbHMiOnsiZGF0YSI6MjIyMTI2MjA3NiwicHVyIjoiYmxvYl9pZCJ9fQ--62fc96b7b32819307b7da91f606217704f71055b9fe40806fdea7da18892b5dd/image.png?disposition=attachment\" title=\"Download image.png\">\n        <img alt=\"image.png\" src=\"https://world.hey.com/dhh/68162450/representations/eyJfcmFpbHMiOnsiZGF0YSI6MjIyMTI2MjA3NiwicHVyIjoiYmxvYl9pZCJ9fQ--62fc96b7b32819307b7da91f606217704f71055b9fe40806fdea7da18892b5dd/eyJfcmFpbHMiOnsiZGF0YSI6eyJmb3JtYXQiOiJwbmciLCJyZXNpemVfdG9fbGltaXQiOlszODQwLDI1NjBdLCJxdWFsaXR5Ijo2MCwibG9hZGVyIjp7InBhZ2UiOm51bGx9LCJjb2FsZXNjZSI6dHJ1ZX0sInB1ciI6InZhcmlhdGlvbiJ9fQ--7edc7b21f6fad97fa22412618822c4d19725431f296c7ce47dc174b61535d27c/image.png\" />\n</a>\n  </figure><br /><br />  <figure class=\"attachment attachment--preview attachment--lightboxable attachment--png\">\n      <a href=\"https://world.hey.com/dhh/68162450/blobs/eyJfcmFpbHMiOnsiZGF0YSI6MjIyMTI2MjMwMSwicHVyIjoiYmxvYl9pZCJ9fQ--c56a319bed89848237965c4f527f7f9c4e857907670cd0463c88a7eb0042e050/image.png?disposition=attachment\" title=\"Download image.png\">\n        <img alt=\"image.png\" src=\"https://world.hey.com/dhh/68162450/representations/eyJfcmFpbHMiOnsiZGF0YSI6MjIyMTI2MjMwMSwicHVyIjoiYmxvYl9pZCJ9fQ--c56a319bed89848237965c4f527f7f9c4e857907670cd0463c88a7eb0042e050/eyJfcmFpbHMiOnsiZGF0YSI6eyJmb3JtYXQiOiJwbmciLCJyZXNpemVfdG9fbGltaXQiOlszODQwLDI1NjBdLCJxdWFsaXR5Ijo2MCwibG9hZGVyIjp7InBhZ2UiOm51bGx9LCJjb2FsZXNjZSI6dHJ1ZX0sInB1ciI6InZhcmlhdGlvbiJ9fQ--7edc7b21f6fad97fa22412618822c4d19725431f296c7ce47dc174b61535d27c/image.png\" />\n</a>\n  </figure></div>\n</div>"
            ],
            "link": "https://world.hey.com/dhh/all-in-on-omarchy-at-37signals-68162450",
            "publishedAt": "2025-08-09",
            "source": "DHH",
            "summary": "<div class=\"trix-content\"> <div>We're going all-in on <a href=\"https://omarchy.org\">Omarchy</a> at <a href=\"https://37signals.com/\">37signals</a>. Over the next three years, as the regular churn of hardware invites it, we're switching everyone on our Ops and Ruby programming teams to our own Arch-derived Linux distribution (and of course sharing all the improvements we make along the way with everyone else on Omarchy!).</div><div><br /></div><div>It's funny how nobody bats an eye when the company mandate is to use Macs or Windows, but when the prescription is Linux, it's suddenly surprising. It really shouldn't be. Your ability to control your own destiny with Linux is far superior to what you'll get from a closed-source, commercial operating system. Of course it is! The code is literally all there!</div><div><br /></div><div>True, you might face more challenges, and there won't be a vendor to call (unless you hop into the Enterprise Linux camp, which doesn't appeal to me either). But I've never given a damn about that. I started using Ruby to build Basecamp when we could barely fill a room in American with professional Ruby programmers. This is what we do here!</div><div><br /></div><div>This also means giving up on MacBooks and choosing <a href=\"https://frame.work/laptop13\">Framework laptops</a> as the new standard-issue equipment. Along with",
            "title": "All-in on Omarchy at 37signals"
        },
        {
            "content": [],
            "link": "https://bernsteinbear.com/blog/snprintf/?utm_source=rss",
            "publishedAt": "2025-08-09",
            "source": "Max Bernstein",
            "summary": "<p>The <code class=\"language-plaintext highlighter-rouge\">sprintf</code> family of functions (<code class=\"language-plaintext highlighter-rouge\">sprintf</code>, <code class=\"language-plaintext highlighter-rouge\">snprintf</code>, <code class=\"language-plaintext highlighter-rouge\">vsnprintf</code>, \u2026) have this little-known feature to what size your buffer should be. In cases where you don\u2019t have a fixed upper bound, this is really useful.</p> <p>For example:</p> <div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kt\">int</span> <span class=\"n\">size</span> <span class=\"o\">=</span> <span class=\"n\">snprintf</span><span class=\"p\">(</span><span class=\"cm\">/*str=*/</span><span class=\"nb\">NULL</span><span class=\"p\">,</span> <span class=\"cm\">/*size=*/</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s\">\"%d: %s\"</span><span class=\"p\">,</span> <span class=\"n\">some_int</span><span class=\"p\">,</span> <span class=\"n\">some_c_str</span><span class=\"p\">);</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">size</span> <span class=\"o\">&lt;</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"n\">abort</span><span class=\"p\">();</span> <span class=\"kt\">int</span> <span class=\"n\">size_with_nul</span> <span class=\"o\">=</span> <span class=\"n\">size</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">;</span> <span class=\"kt\">char</span> <span class=\"o\">*</span><span class=\"n\">buf</span> <span class=\"o\">=</span> <span class=\"n\">malloc</span><span class=\"p\">(</span><span class=\"n\">size_with_nul</span><span class=\"p\">);</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">buf</span> <span class=\"o\">==</span> <span class=\"nb\">NULL</span><span class=\"p\">)</span> <span class=\"n\">abort</span><span class=\"p\">();</span> <span class=\"kt\">int</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">snprintf</span><span class=\"p\">(</span><span class=\"cm\">/*str=*/</span><span class=\"n\">buf</span><span class=\"p\">,</span> <span class=\"cm\">/*size=*/</span><span class=\"n\">size_with_nul</span><span class=\"p\">,</span> <span class=\"s\">\"%d: %s\"</span><span class=\"p\">,</span> <span class=\"n\">some_int</span><span class=\"p\">,</span> <span class=\"n\">some_c_str</span><span class=\"p\">);</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">result</span> <span class=\"o\">&lt;</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"n\">abort</span><span class=\"p\">();</span> </code></pre></div></div> <p>I have <code class=\"language-plaintext highlighter-rouge\">size_with_nul</code> because <code class=\"language-plaintext highlighter-rouge\">snprintf</code> man pages say</p> <blockquote> <p>The functions <code class=\"language-plaintext highlighter-rouge\">snprintf()</code> and <code class=\"language-plaintext highlighter-rouge\">vsnprintf()</code> write at most <code class=\"language-plaintext highlighter-rouge\">size</code> bytes (including the terminating null byte (\u2018\\0\u2019))",
            "title": "How to use snprintf"
        },
        {
            "content": [],
            "link": "https://simonwillison.net/2025/Aug/9/bay-area-ai/#atom-entries",
            "publishedAt": "2025-08-09",
            "source": "Simon Willison",
            "summary": "<p>I gave a talk on Wednesday at the <a href=\"https://lu.ma/elyvukqm\">Bay Area AI Security Meetup</a> about prompt injection, the lethal trifecta and the challenges of securing systems that use MCP. It wasn't recorded but I've created an <a href=\"https://simonwillison.net/2023/Aug/6/annotated-presentations/\">annotated presentation</a> with my slides and detailed notes on everything I talked about.</p> <p>Also included: some notes on my weird hobby of trying to coin or amplify new terms of art.</p> <div class=\"slide\" id=\"the-lethal-trifecta.001.jpg\"> <img alt=\"The Lethal Trifecta Bay Area AI Security Meetup Simon Willison - simonwillison.net On a photograph of dozens of beautiful California brown pelicans hanging out on a rocky outcrop together\" src=\"https://static.simonwillison.net/static/2025/the-lethal-trifecta/the-lethal-trifecta.001.jpg\" /> <div><a href=\"https://simonwillison.net/2025/Aug/9/bay-area-ai/#the-lethal-trifecta.001.jpeg\" style=\"float: right; text-decoration: none; border-bottom: none; padding-left: 1em;\">#</a> <p>Minutes before I went on stage an audience member asked me if there would be any pelicans in my talk, and I panicked because there were not! So I dropped in this photograph I took a few days ago in Half Moon Bay as the background for my title slide.</p> </div> </div> <div class=\"slide\" id=\"the-lethal-trifecta.002.jpeg\"> <img alt=\"Prompt injection SQL injection, with prompts \" src=\"https://static.simonwillison.net/static/2025/the-lethal-trifecta/the-lethal-trifecta.002.jpeg\" /> <div><a href=\"https://simonwillison.net/2025/Aug/9/bay-area-ai/#the-lethal-trifecta.002.jpeg\" style=\"float: right; text-decoration: none; border-bottom: none; padding-left: 1em;\">#</a> <p>Let's start by reviewing prompt injection - SQL injection with prompts. It's",
            "title": "My Lethal Trifecta talk at the Bay Area AI Security Meetup"
        }
    ],
    "lookbackDays": 1,
    "publishDate": "2025-08-09"
}
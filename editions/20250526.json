{
    "articles": [
        {
            "content": [
                "<p>Over the past year, I <a href=\"https://alexwlchan.net/2025/personal-archive-of-the-web/\">built a web archive</a> of over two thousand web pages \u2013 my own copy of everything I\u2019ve bookmarked in the last fifteen years.\nI saved each one by hand, reading and editing the HTML to build a self-contained, standalone copy of each web page.</p>\n\n<p>These web pages were made by other people, many using tools and techniques I didn\u2019t recognise.\nWhat started as an exercise in preservation became an unexpected lesson in coding: I was getting a crash course in how the web is made.\nReading somebody else\u2019s code is a great way to learn, and I was reading a <em>lot</em> of somebody else\u2019s code.</p>\n\n<p>In this post, I\u2019ll show you some of what I learnt about making websites: how to write thoughtful HTML, new-to-me features of CSS, and some quirks and relics of the web.</p>\n\n<blockquote class=\"toc\">\n  <p>This article is the third in a four part bookmarking mini-series:</p>\n  <ol>\n    <li>\n      <a href=\"https://alexwlchan.net/2025/bookmarks-static-site/\"><strong>Creating a static site for all my bookmarks</strong></a> \u2013 why I bookmark, why I use a static site, and how it works.\n    </li>\n    <li>\n      <a href=\"https://alexwlchan.net/2025/personal-archive-of-the-web/\"><strong>Building a personal archive of the web, the slow way</strong></a> \u2013 how I built a web archive by hand, the tradeoffs between manual and automated archiving, and what I learnt about preserving the web.\n    </li>\n    <li>\n      <strong>Learning how to make websites by reading two thousand web pages</strong> (this article)\n      <ul>\n        <li>\n          <a href=\"https://alexwlchan.net/2025/learning-how-to-make-websites/#html_tags\">Interesting HTML tags</a>\n          <ul>\n            <li><a href=\"https://alexwlchan.net/2025/learning-how-to-make-websites/#html_aside\">The <code>&lt;aside&gt;</code> element</a></li>\n            <li><a href=\"https://alexwlchan.net/2025/learning-how-to-make-websites/#html_mark\">The <code>&lt;mark&gt;</code> element</a></li>\n            <li><a href=\"https://alexwlchan.net/2025/learning-how-to-make-websites/#html_section\">The <code>&lt;section&gt;</code> element</a></li>\n            <li><a href=\"https://alexwlchan.net/2025/learning-how-to-make-websites/#html_hgroup\">The <code>&lt;hgroup&gt;</code> (heading group) element</a></li>\n            <li><a href=\"https://alexwlchan.net/2025/learning-how-to-make-websites/#html_video\">The <code>&lt;video&gt;</code> element</a></li>\n            <li><a href=\"https://alexwlchan.net/2025/learning-how-to-make-websites/#html_progress\">The <code>&lt;progress&gt;</code> indicator element</a></li>\n            <li><a href=\"https://alexwlchan.net/2025/learning-how-to-make-websites/#html_base\">The <code>&lt;base&gt;</code> element</a></li>\n          </ul>\n        </li>\n        <li>\n          <a href=\"https://alexwlchan.net/2025/learning-how-to-make-websites/#css\">Clever corners of CSS</a>\n          <ul>\n            <li><a href=\"https://alexwlchan.net/2025/learning-how-to-make-websites/#css_import\">The CSS <code>@import</code> rule</a></li>\n            <li><a href=\"https://alexwlchan.net/2025/learning-how-to-make-websites/#css_suffix\"><code>[attr$=value]</code> is a CSS selector for suffix values</a></li>\n            <li><a href=\"https://alexwlchan.net/2025/learning-how-to-make-websites/#inset_box_shadows\">You can create inner box shadows with <code>inset</code></a></li>\n            <li><a href=\"https://alexwlchan.net/2025/learning-how-to-make-websites/#css_zoom_in\">For images that get bigger, <code>cursor: zoom-in</code> can show a magnifying glass</a></li>\n          </ul>\n        </li>\n        <li>\n          <a href=\"https://alexwlchan.net/2025/learning-how-to-make-websites/#thoughtful_html\">Writing thoughtful HTML</a>\n          <ul>\n            <li><a href=\"https://alexwlchan.net/2025/learning-how-to-make-websites/#html_element_order\">The order of elements</a></li>\n            <li><a href=\"https://alexwlchan.net/2025/learning-how-to-make-websites/#end_comments\">Comments to mark the end of large containers</a></li>\n            <li><a href=\"https://alexwlchan.net/2025/learning-how-to-make-websites/#css_href\">The <code>data-href</code> attribute in <code>&lt;style&gt;</code> tags</a></li>\n            <li><a href=\"https://alexwlchan.net/2025/learning-how-to-make-websites/#html_translations\">Translated pages with <code>&lt;link rel=\"alternate\"&gt;</code> and <code>hreflang</code></a></li>\n            <li><a href=\"https://alexwlchan.net/2025/learning-how-to-make-websites/#html_preload\">Fetching resources faster with <code>&lt;link rel=\"preload\"&gt;</code></a></li>\n          </ul>\n        </li>\n        <li>\n          <a href=\"https://alexwlchan.net/2025/learning-how-to-make-websites/#quirks\">Quirks and relics</a>\n          <ul>\n            <li><a href=\"https://alexwlchan.net/2025/learning-how-to-make-websites/#html_conditional\">There are still lots of <code>&lt;!--[if IE]&gt;</code> comments</a></li>\n            <li><a href=\"https://alexwlchan.net/2025/learning-how-to-make-websites/#js_templates\">Templates in <code>&lt;script&gt;</code> tags with a non-standard <code>type</code> attribute</a></li>\n            <li><a href=\"https://alexwlchan.net/2025/learning-how-to-make-websites/#file_uris\">Browsers won\u2019t load external <code>file://</code> resources from <code>file://</code> pages</a></li>\n            <li><a href=\"https://alexwlchan.net/2025/learning-how-to-make-websites/#gpt\">What does GPT stand for in attributes?</a></li>\n            <li><a href=\"https://alexwlchan.net/2025/learning-how-to-make-websites/#instapaper_ignore\">What\u2019s the <code>instapaper_ignore</code> class?</a></li>\n            <li><a href=\"https://alexwlchan.net/2025/learning-how-to-make-websites/#webkit_bug\">I found a bug in the WebKit developer tools</a></li>\n          </ul>\n        </li>\n        <li><a href=\"https://alexwlchan.net/2025/learning-how-to-make-websites/#conclusion\">Closing thoughts</a></li>\n      </ul>\n    </li>\n    <li>\n      <a href=\"https://alexwlchan.net/2025/learning-how-to-make-websites/\"><strong>Some cool websites from my bookmark collection</strong></a> (coming 26 May) \u2013 some websites which are doing especially fun or clever things with the web.\n    </li>\n  </ol>\n</blockquote>\n\n\n\n<hr />\n\n<h2 id=\"html_tags\">Interesting HTML tags</h2>\n\n<p>I know I\u2019ve read a list of HTML tags in reference documents and blog posts, but there are some tags I\u2019d forgotten, misunderstood, or never seen used in the wild.\nReading thousands of real-world pages gave me a better sense of how these tags are actually used, and when they\u2019re useful.</p>\n\n<h3 id=\"html_aside\">The <code>&lt;aside&gt;</code> element</h3>\n\n<p>MDN describes <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/aside\"><code class=\"language-plaintext highlighter-rouge\">&lt;aside&gt;</code></a> as \u201ca portion of a document whose content is only indirectly related to the document\u2019s main content\u201d.\nThat\u2019s vague enough that I was never quite sure when to use it.</p>\n\n<p>In the web pages I read, I saw <code class=\"language-plaintext highlighter-rouge\">&lt;aside&gt;</code> used in the middle of larger articles, for things like ads, newsletter sign ups, pull quotes, or links to related articles.\nI don\u2019t have any of those elements on my site, but now I have a stronger mental model of where to use <code class=\"language-plaintext highlighter-rouge\">&lt;aside&gt;</code>.\nI find concrete examples more useful than abstract definitions.</p>\n\n<p>I also saw a couple of sites using the <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/ins\"><code class=\"language-plaintext highlighter-rouge\">&lt;ins&gt;</code> (inserted text) element</a> for ads, but I think <code class=\"language-plaintext highlighter-rouge\">&lt;aside&gt;</code> is a better semantic fit.</p>\n\n<h3 id=\"html_mark\">The <code>&lt;mark&gt;</code> element</h3>\n\n<p>The <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/mark\"><code class=\"language-plaintext highlighter-rouge\">&lt;mark&gt; element</code></a> highlights text, typically with a yellow background.\nIt\u2019s useful for drawing visual attention to a phrase, and I suspect it\u2019s helpful for screen readers and parsing tools as well.</p>\n\n<p>I saw it used in Medium to show reader highlights, and I\u2019ve started using it in code samples when I want to call out specific lines.</p>\n\n<h3 id=\"html_section\">The <code>&lt;section&gt;</code> element</h3>\n\n<p>The <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/section\"><code class=\"language-plaintext highlighter-rouge\">&lt;section&gt;</code> tag</a> is a useful way to group content on a page \u2013 more meaningful than a generic <code class=\"language-plaintext highlighter-rouge\">&lt;div&gt;</code>.\nI\u2019d forgotten about it, although I use similar tags like <code class=\"language-plaintext highlighter-rouge\">&lt;article&gt;</code> and <code class=\"language-plaintext highlighter-rouge\">&lt;main&gt;</code>.\nSeeing it used across different sites reminded me it exists, and I\u2019ve since added it to a few projects.</p>\n\n<h3 id=\"html_hgroup\">The <code>&lt;hgroup&gt;</code> (heading group) element</h3>\n\n<p>The <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/hgroup\"><code class=\"language-plaintext highlighter-rouge\">&lt;hgroup&gt;</code> tag</a> is for grouping a heading with related metadata, like a title and a publication date:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;hgroup&gt;</span>\n  <span class=\"nt\">&lt;h1&gt;</span>All about web bookmarking<span class=\"nt\">&lt;/h1&gt;</span>\n  <span class=\"nt\">&lt;p&gt;</span>Posted 16 March 2025<span class=\"nt\">&lt;/p&gt;</span>\n<span class=\"nt\">&lt;/hgroup&gt;</span>\n</code></pre></div></div>\n\n<p>This is another tag I\u2019d forgotten, which I\u2019ve started using for the headings on this site.</p>\n\n<h3 id=\"html_video\">The <code>&lt;video&gt;</code> element</h3>\n\n<p>The <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/video\"><code class=\"language-plaintext highlighter-rouge\">&lt;video&gt;</code> tag</a> is used to embed videos in a web page.\nIt\u2019s a tag I\u2019ve known about for a long time \u2013 I still remember reading Kroc Camen\u2019s article <a href=\"https://camendesign.com/code/video_for_everybody\">Video is for Everybody</a> in 2010, back when Flash was being replaced as dominant way to watch video on the web.</p>\n\n<p>While building my web archive, I replaced a lot of custom video players with <code class=\"language-plaintext highlighter-rouge\">&lt;video&gt;</code> elements and local copies of the videos.\nThis was my first time using the tag in anger, not just in examples.</p>\n\n<p>One mistake I kept making was forgetting to close the tag, or trying to make it self-closing:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">&lt;!-- this is wrong --&gt;</span>\n<span class=\"nt\">&lt;video</span> <span class=\"na\">controls</span> <span class=\"na\">src=</span><span class=\"s\">\"videos/Big_Buck_Bunny.mp4\"</span><span class=\"nt\">/&gt;</span>\n</code></pre></div></div>\n\n<p>It looks like <code class=\"language-plaintext highlighter-rouge\">&lt;img&gt;</code>, which is self-closing, but <code class=\"language-plaintext highlighter-rouge\">&lt;video&gt;</code> can have child elements, so you have to explicitly close it with <code class=\"language-plaintext highlighter-rouge\">&lt;/video&gt;</code>.</p>\n\n<h3 id=\"html_progress\">The <code>&lt;progress&gt;</code> indicator element</h3>\n\n<p>The <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/progress\"><code class=\"language-plaintext highlighter-rouge\">&lt;progress&gt;</code> element</a> shows a progress indicator.\nI saw it on a number of sites that publish longer articles \u2013 they used a progress bar to show you how far you\u2019d read.</p>\n\n\n\n<blockquote id=\"progress_example\">\n  <div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;label</span> <span class=\"na\">for=</span><span class=\"s\">\"file\"</span><span class=\"nt\">&gt;</span>Progress:<span class=\"nt\">&lt;/label&gt;</span>\n<span class=\"nt\">&lt;progress</span> <span class=\"na\">id=</span><span class=\"s\">\"file\"</span> <span class=\"na\">max=</span><span class=\"s\">\"100\"</span> <span class=\"na\">value=</span><span class=\"s\">\"70\"</span><span class=\"nt\">&gt;</span>70%<span class=\"nt\">&lt;/progress&gt;</span></code></pre></div></div>\n\n  <div>\n    <label for=\"file\">File progress:</label>\n    <progress id=\"file\" max=\"100\" value=\"70\">70%</progress>\n  </div>\n</blockquote>\n\n<p>I don\u2019t have a use for it right now, but I like the idea of getting OS-native progress bars in HTML \u2013 no custom JavaScript or CSS required.</p>\n\n<h3 id=\"html_base\">The <code>&lt;base&gt;</code> element</h3>\n\n<p>The <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/base\"><code class=\"language-plaintext highlighter-rouge\">&lt;base&gt;</code> element</a> specifies the base URL to use for any relative URLs in a document.\nFor example, in this document:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;base</span> <span class=\"na\">href=</span><span class=\"s\">\"https://example.com/\"</span><span class=\"nt\">&gt;</span>\n\n<span class=\"nt\">&lt;img</span> <span class=\"na\">src=</span><span class=\"s\">\"/pictures/cat.jpg\"</span><span class=\"nt\">&gt;</span>\n</code></pre></div></div>\n\n<p>the image will be loaded from <code class=\"language-plaintext highlighter-rouge\">https://example.com/pictures/cat.jpg</code>.</p>\n\n<p>It\u2019s still not clear to me when you should use <code class=\"language-plaintext highlighter-rouge\">&lt;base&gt;</code>, or what the benefits are (aside from making your URLs a bit shorter), but it\u2019s something I\u2019ll keep an eye out for in future projects.</p>\n\n<hr />\n\n<h2 id=\"css\">Clever corners of CSS</h2>\n\n<h3 id=\"css_import\">The CSS <code>@import</code> rule</h3>\n\n<p>CSS has <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/@import\"><code class=\"language-plaintext highlighter-rouge\">@import</code> rules</a>, which allow one stylesheet to load another:</p>\n\n<div class=\"language-css highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">@import</span> <span class=\"s1\">\"fonts.css\"</span><span class=\"p\">;</span>\n</code></pre></div></div>\n<p>I\u2019ve used <code class=\"language-plaintext highlighter-rouge\">@import</code> in Sass, but I only just realised it\u2019s now a feature of vanilla CSS \u2013 and one that\u2019s widely used.\nThe CSS for this website is small enough that I bundle it into a single file for serving over HTTP (a mere 13KB), but I\u2019ve started using <code class=\"language-plaintext highlighter-rouge\">@import</code> for static websites I load from my local filesystem, and I can imagine it being useful for larger projects.</p>\n\n<p>One feature I\u2019d find useful is conditional imports based on selectors.\nYou can already do conditional imports based on a media query (\u201conly load these styles on a narrow screen\u201d) and something similar for selectors would be useful too (for example, \u201conly load these styles if a particular class is visible\u201d).\nI have some longer rules that aren\u2019t needed on every page, like styles for syntax highlighting, and it would be nice to load them only when required.</p>\n\n<h3 id=\"css_suffix\">\n<code>[attr$=value]</code> is a CSS selector for suffix values</h3>\n\n<p>While reading <a href=\"https://sailorhg.com/home_sweet_homepage/\">Home Sweet Homepage</a>, I found a CSS selector I didn\u2019t understand:</p>\n\n<div class=\"language-css highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">img</span><span class=\"o\">[</span><span class=\"nt\">src</span><span class=\"err\">$</span><span class=\"o\">=</span><span class=\"s1\">\"page01/image2.png\"</span><span class=\"o\">]</span> <span class=\"p\">{</span>\n  <span class=\"nl\">left</span><span class=\"p\">:</span> <span class=\"m\">713px</span><span class=\"p\">;</span>\n  <span class=\"nl\">top</span><span class=\"p\">:</span>  <span class=\"m\">902px</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>This <code class=\"language-plaintext highlighter-rouge\">$=</code> syntax is a bit of CSS that selects elements whose <code class=\"language-plaintext highlighter-rouge\">src</code> attribute ends with <code class=\"language-plaintext highlighter-rouge\">page01/image2.png</code>.\nIt\u2019s one of a several <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors#attrvalue_5\">attribute selectors</a> that I hadn\u2019t seen before \u2013 you can also match exact values, prefixes, or words in space-separated lists.\nYou can also control whether you want case-sensitive or -insensitive matching.</p>\n\n<h3 id=\"inset_box_shadows\">You can create inner box shadows with <code>inset</code>\n</h3>\n\n<p>Here\u2019s a link style from an old copy of the <em>Entertainment Weekly</em> website:</p>\n\n\n\n<blockquote id=\"underline_example\">\n  <div class=\"language-css highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">a</span> <span class=\"p\">{</span> <span class=\"nl\">box-shadow</span><span class=\"p\">:</span> <span class=\"nb\">inset</span> <span class=\"m\">0</span> <span class=\"m\">-6px</span> <span class=\"m\">0</span> <span class=\"m\">#b0e3fb</span><span class=\"p\">;</span> <span class=\"p\">}</span></code></pre></div></div>\n\n  <div>\n    <span>\n      A link on EW.com\n    </span>\n  </div>\n</blockquote>\n\n<p>The <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/box-shadow#inset\"><code class=\"language-plaintext highlighter-rouge\">inset</code> keyword</a> was new to me: it draws the shadow <em>inside</em> the box, rather than outside.\nIn this case, they\u2019re setting <code class=\"language-plaintext highlighter-rouge\">offset-x=0</code>, <code class=\"language-plaintext highlighter-rouge\">offset-y=-6px</code> and <code class=\"language-plaintext highlighter-rouge\">blur-radius=0</code> to create a solid stripe that appears behind the link text \u2013 like a highlighter running underneath it.</p>\n\n<p>If you want something that looks more shadow-like, here are two boxes that show the inner/outer shadow with a blur radius:</p>\n\n\n\n<div id=\"shadow_examples\">\n  <div>\n    inner shadow\n  </div>\n  <div>\n    outer shadow\n  </div>\n</div>\n\n<p>I don\u2019t have an immediate use for this, but I like the effect, and the subtle sense of depth it creates.\nThe contents of the box with <code class=\"language-plaintext highlighter-rouge\">inner-shadow</code> looks like it\u2019s below the page, while the box with <code class=\"language-plaintext highlighter-rouge\">outer-shadow</code> floats above it.</p>\n\n<h3 id=\"css_zoom_in\">For images that get bigger, <code>cursor: zoom-in</code> can show a magnifying glass</h3>\n\n<p>On gallery websites, I often saw this CSS rule used for images that link to a larger version:</p>\n\n<div class=\"language-css highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">cursor</span><span class=\"o\">:</span> <span class=\"nt\">zoom-in</span><span class=\"o\">;</span>\n</code></pre></div></div>\n\n<p>Instead of using <code class=\"language-plaintext highlighter-rouge\">cursor: pointer;</code> (the typical hand icon for links), this shows a magnifying glass icon \u2013 a subtle cue that clicking will zoom or expand the image.</p>\n\n<p>Here\u2019s a quick comparison:</p>\n\n<table>\n  <tr>\n    <td>\n      \n        <source media=\"(prefers-color-scheme: dark)\" type=\"image/png\" />\n        <source media=\"(prefers-color-scheme: light)\" type=\"image/png\" />\n        <img alt=\"A small icon of an arrow\" class=\"dark_aware\" src=\"https://alexwlchan.net/images/2025/bookmarks/default.png\" />\n      \n    </td>\n    <td>\n      the <code>default</code> cursor is typically an arrow\n    </td>\n  </tr>\n  <tr>\n    <td>\n      \n        <source media=\"(prefers-color-scheme: dark)\" type=\"image/png\" />\n        <source media=\"(prefers-color-scheme: light)\" type=\"image/png\" />\n        <img alt=\"A small icon of a hand with a raised pointer finger\" class=\"dark_aware\" src=\"https://alexwlchan.net/images/2025/bookmarks/pointer.png\" />\n      \n    </td>\n    <td>\n      the <code>pointer</code> cursor is typically a hand, used to indicate links\n    </td>\n  </tr>\n  <tr>\n    <td>\n      \n        <source media=\"(prefers-color-scheme: dark)\" type=\"image/png\" />\n        <source media=\"(prefers-color-scheme: light)\" type=\"image/png\" />\n        <img alt=\"A small icon of a magnifying sign with a plus symbol\" class=\"dark_aware\" src=\"https://alexwlchan.net/images/2025/bookmarks/zoom-in.png\" />\n      \n    </td>\n    <td>\n      the <code>zoom-in</code> cursor is a magnifying glass with a plus sign, suggesting \u201cclick to enlarge\u201d\n    </td>\n  </tr>\n</table>\n\n<p>I knew about the <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/cursor\"><code class=\"language-plaintext highlighter-rouge\">cursor</code> property</a>, but I\u2019d never thought to use it that way.\nIt\u2019s a nice touch, and I want to use it the next time I build a gallery.</p>\n\n<hr />\n\n<h2 id=\"thoughtful_html\">Writing thoughtful HTML</h2>\n\n<h3 id=\"html_element_order\">The order of elements</h3>\n\n<p>My web pages have a simple one column design: a header at the top, content in the middle, a footer at the bottom.\nI mirror that order in my HTML, because it feels a natural structure.</p>\n\n<p>I\u2019d never thought about how to order the HTML elements in more complex layouts, when there isn\u2019t such a clear direction.\nFor example, many websites have a sidebar that sits alongside the main content.\nWhich comes first in the HTML?</p>\n\n<p>I don\u2019t have a firm answers, but reading how other people structure their HTML got me thinking.\nI noticed several pages that put the sidebar at the very end of the HTML, then used CSS to position it visually alongside the content.\nThat way, the main content appears earlier in the HTML file, which means it can load and become readable sooner.</p>\n\n<p>It\u2019s something I want to consider next time I\u2019m building a more complex page.</p>\n\n<h3 id=\"end_comments\">Comments to mark the end of large containers</h3>\n\n<p>I saw a lot of websites (mostly WordPress) that used HTML comments to mark the end of containers with a lot of content.\nFor example:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;div</span> <span class=\"na\">id=</span><span class=\"s\">\"primary\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;main</span> <span class=\"na\">id=</span><span class=\"s\">\"main\"</span><span class=\"nt\">&gt;</span>\n    \u2026\n  <span class=\"nt\">&lt;/main&gt;</span><span class=\"c\">&lt;!-- #main --&gt;</span>\n<span class=\"nt\">&lt;/div&gt;</span><span class=\"c\">&lt;!-- #primary --&gt;</span>\n</code></pre></div></div>\n\n<p>These comments made the HTML much easier to read \u2013 I could see exactly where each component started and ended.</p>\n\n<p>I like this idea, and I\u2019m tempted to use it in my more complex projects.\nI can imagine this being especially helpful in template files, where HTML is mixed with template markup in a way that might confuse <a href=\"https://en.wikipedia.org/wiki/Code_folding\">code folding</a>, or make the structure harder to follow.</p>\n\n<h3 id=\"css_href\">The <code>data-href</code> attribute in <code>&lt;style&gt;</code> tags</h3>\n\n<p>Here\u2019s a similar idea: I saw a number of sites set a <code class=\"language-plaintext highlighter-rouge\">data-href</code> attribute on their <code class=\"language-plaintext highlighter-rouge\">&lt;style&gt;</code> tags, as a way to indicate the source of the CSS.\nSomething like:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;style </span><span class=\"na\">data-href=</span><span class=\"s\">\"https://example.com/style.css\"</span><span class=\"nt\">&gt;</span>\n</code></pre></div></div>\n\n<p>I imagine this could be useful for developers working on that page, to help them find where they need to make changes to that <code class=\"language-plaintext highlighter-rouge\">&lt;style&gt;</code> tag.</p>\n\n<h3 id=\"html_translations\">Translated pages with <code>&lt;link rel=\"alternate\"&gt;</code> and <code>hreflang</code>\n</h3>\n\n<p>I saw a few web pages with translated versions, and they used <code class=\"language-plaintext highlighter-rouge\">&lt;link&gt;</code> tags with <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Attributes/rel#values\"><code class=\"language-plaintext highlighter-rouge\">rel=\"alternate\"</code> and an <code class=\"language-plaintext highlighter-rouge\">hreflang</code> attribute</a> to point to those translations.\nHere\u2019s an example from <a href=\"https://blog.panic.com/firewatch-demo-day-at-gdc/\">a\u00a0Panic article</a>, which is available in both US English and Japanese:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;link</span> <span class=\"na\">rel=</span><span class=\"s\">\"alternate\"</span> <span class=\"na\">hreflang=</span><span class=\"s\">\"en-us\"</span> <span class=\"na\">href=</span><span class=\"s\">\"https://blog.panic.com/firewatch-demo-day-at-gdc/\"</span><span class=\"nt\">&gt;</span>\n<span class=\"nt\">&lt;link</span> <span class=\"na\">rel=</span><span class=\"s\">\"alternate\"</span> <span class=\"na\">hreflang=</span><span class=\"s\">\"ja\"</span>    <span class=\"na\">href=</span><span class=\"s\">\"https://blog.panic.com/ja/firewatch-demo-day-at-gdc-j/\"</span><span class=\"nt\">&gt;</span>\n</code></pre></div></div>\n\n<p>This seems to be for the benefit of search engines and other automated tools, not web browsers.\nIf your web browser is configured to prefer Japanese, you\u2019d see a link to the Japanese version in search results \u2013 but if you open the English URL directly, you won\u2019t be redirected.</p>\n\n<p>This makes sense to me \u2013 translations can differ in content, and some information might only be available in one language.\nIt would be annoying if you couldn\u2019t choose which version you wanted.</p>\n\n<p>Panic\u2019s article includes a third <code class=\"language-plaintext highlighter-rouge\">&lt;link rel=\"alternate\"&gt;</code> tag:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;link</span> <span class=\"na\">rel=</span><span class=\"s\">\"alternate\"</span> <span class=\"na\">hreflang=</span><span class=\"s\">\"x-default\"</span> <span class=\"na\">href=</span><span class=\"s\">\"https://blog.panic.com/firewatch-demo-day-at-gdc/\"</span><span class=\"nt\">&gt;</span>\n</code></pre></div></div>\n\n<p>This <a href=\"https://developers.google.com/search/blog/2013/04/x-default-hreflang-for-international-pages\"><code class=\"language-plaintext highlighter-rouge\">x-default</code> value</a> is a fallback, used when there\u2019s no better match for the user\u2019s language.\nFor example, if you used a French search engine, you\u2019d be directed to this URL because there isn\u2019t a French translation.</p>\n\n<p>Almost every website I\u2019ve worked has been English-only, so internationalisation is a part of the web I know very little about.</p>\n\n<h3 id=\"html_preload\">Fetching resources faster with <code>&lt;link rel=\"preload\"&gt;</code>\n</h3>\n\n<p>I saw a lot of websites that with <code class=\"language-plaintext highlighter-rouge\">&lt;link rel=\"preload\"&gt;</code> tags in their <code class=\"language-plaintext highlighter-rouge\">&lt;head&gt;</code>.\nThis tells the browser about resources that will be needed soon, so it should start fetching them immediately.</p>\n\n<p>Here\u2019s an example from this site:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;link</span> <span class=\"na\">rel=</span><span class=\"s\">\"preload\"</span> <span class=\"na\">href=</span><span class=\"s\">\"https://alexwlchan.net/theme/white-waves-transparent.png\"</span> <span class=\"na\">as=</span><span class=\"s\">\"image\"</span> <span class=\"na\">type=</span><span class=\"s\">\"image/png\"</span><span class=\"nt\">/&gt;</span>\n</code></pre></div></div>\n\n<p>That image is used as a background texture in my CSS file.\nNormally, the browser would have to download and parse the CSS before it even knows about the image \u2013 which means a delay before it starts loading it.\nBy preloading the image, the browser can begin downloading the image in parallel with the CSS file, so it\u2019s already in progress when the browser reads the CSS.</p>\n\n<p>The difference is probably imperceptible on a fast connection, but it is a performance improvement \u2013 and as long as you scope the preloads correctly, there\u2019s little downside.\n(Scoping means ensuring you don\u2019t preload resources that aren\u2019t used).</p>\n\n<p>I saw some sites use <a href=\"https://developer.mozilla.org/en-US/docs/Web/Performance/Guides/dns-prefetch\">DNS prefetching</a>, which is a similar idea.\nThe <code class=\"language-plaintext highlighter-rouge\">rel=\"dns-prefetch\"</code> attribute tells the browser about domains it\u2019ll fetch resources from soon, so it should begin DNS resolution early.\nThe most common example was websites using Google Fonts:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;link</span> <span class=\"na\">rel=</span><span class=\"s\">\"dns-prefetch\"</span> <span class=\"na\">href=</span><span class=\"s\">\"https://fonts.googleapis.com/\"</span> <span class=\"nt\">/&gt;</span>\n</code></pre></div></div>\n\n<p>I only added <code class=\"language-plaintext highlighter-rouge\">preload</code> tags to my site <a href=\"https://alexwlchan.net/2025/fix-dark-mode/\">a\u00a0few weeks ago</a>.\nI\u2019d seen them in other web pages, but I didn\u2019t appreciate the value until I wrote one of my own.</p>\n\n<hr />\n\n<h2 id=\"quirks\">Quirks and relics</h2>\n\n<h3 id=\"html_conditional\">There are still lots of <code>&lt;!--[if IE]&gt;</code> comments</h3>\n\n<p>Old versions of Internet Explorer supported <a href=\"https://en.wikipedia.org/wiki/Conditional_comment\">conditional comments</a>, which allowed developers to add IE-specific behaviour to their pages.\nInternet Explorer would render the contents of the comment as HTML, while other browsers ignored it.\nThis was a common workaround for deficiencies in IE, when pages needed specific markup or styles to render correctly.</p>\n\n<p>Here\u2019s an example, where the developer adds an IE-specific style to fix a layout issue:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">&lt;!--[if IE]&gt;\n  &lt;style&gt;\n    /* old IE unsupported flexbox fixes */\n    .greedy-nav .site-title {\n      padding-right: 3em;\n    }\n  &lt;/style&gt;\n&lt;![endif]--&gt;</span>\n</code></pre></div></div>\n\n<p>Developers could also target specific versions of IE:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">&lt;!--[if lte IE 7]&gt;&lt;link rel=\"stylesheet\" href=\"/css/ie.css\"&gt;&lt;![endif]--&gt;</span>\n</code></pre></div></div>\n\n<p>Some websites even used conditional comments to display warnings and encourage users to upgrade, like this message which that\u2019s still present on <a href=\"https://redmonk.com\">the RedMonk website</a> today:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">&lt;!--[if IE]&gt;\n  &lt;div class=\"alert alert-warning\"&gt;\n    You are using an &lt;strong&gt;outdated&lt;/strong&gt; browser. Please &lt;a href=\"http://browsehappy.com/\"&gt;upgrade your browser&lt;/a&gt; to improve your experience.\n  &lt;/div&gt;\n&lt;![endif]--&gt;</span>\n</code></pre></div></div>\n\n<p>This syntax was already disappearing by the time I started building websites \u2013 support for conditional comments was removed in Internet Explorer 10, released in 2012, the same year that Google Chrome became the most-used browser worldwide.\nI never wrote one of these comments, but I saw lots of them in archived web pages.</p>\n\n<p>These comments are a relic of an earlier web.\nMost websites have removed them, but they live on in web archives, and in the memories of web developers who remember the bad old days of IE6.</p>\n\n<h3 id=\"js_templates\">Templates in <code>&lt;script&gt;</code> tags with a non-standard <code>type</code> attribute</h3>\n\n<p>I came across a few pages using <code class=\"language-plaintext highlighter-rouge\">&lt;script&gt;</code> tags with a <code class=\"language-plaintext highlighter-rouge\">type</code> attribute that I didn\u2019t recognise.\nHere\u2019s a simple example:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;script </span><span class=\"na\">type=</span><span class=\"s\">\"text/x-handlebars-template\"</span> <span class=\"na\">id=</span><span class=\"s\">\"loading_animation\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"o\">&lt;</span><span class=\"nx\">div</span> <span class=\"kd\">class</span><span class=\"o\">=</span><span class=\"dl\">\"</span><span class=\"s2\">loading_animation pulsing &lt;%= extra_class %&gt; </span><span class=\"dl\">\"</span><span class=\"o\">&gt;&lt;</span><span class=\"nx\">div</span><span class=\"o\">&gt;&lt;</span><span class=\"sr\">/div&gt;&lt;/</span><span class=\"nx\">div</span><span class=\"o\">&gt;</span>\n<span class=\"nt\">&lt;/script&gt;</span>\n</code></pre></div></div>\n\n<p>Browsers ignore <code class=\"language-plaintext highlighter-rouge\">&lt;script&gt;</code> tags with <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/script/type#any_other_value\">an\u00a0unrecognised <code class=\"language-plaintext highlighter-rouge\">type</code></a> \u2013 they don\u2019t run them, and they don\u2019t render their contents.\nDevelopers have used this as a way to <a href=\"https://stackoverflow.com/a/4912608/1558022\">include HTML templates</a> in their pages, which JavaScript could extract and use later.</p>\n\n<p>This trick was so widespread that HTML introduced a dedicated <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/template\"><code class=\"language-plaintext highlighter-rouge\">&lt;template&gt;</code> tag</a> element for the same purpose.\nIt\u2019s been in all the major browsers for years, but there are still instances of this old technique floating around the web.</p>\n\n<h3 id=\"file_uris\">Browsers won\u2019t load external <code>file://</code> resources from <code>file://</code> pages</h3>\n\n<p>Because my static archives are saved as plain HTML files on disk, I often open them directly using the <code class=\"language-plaintext highlighter-rouge\">file://</code> protocol, rather than serving them over HTTP.\nThis mostly works fine \u2013 but I ran into a few cases where pages behave differently depending on how they\u2019re loaded.</p>\n\n<p>One example is the <a href=\"https://developer.mozilla.org/en-US/docs/Web/SVG/Reference/Element/use\">SVG <code class=\"language-plaintext highlighter-rouge\">&lt;use&gt;</code> element</a>.\nSome sites I saved use SVG sprite sheets for social media icons, with markup like:</p>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;use</span> <span class=\"na\">href=</span><span class=\"s\">\"sprite.svg#logo-icon\"</span><span class=\"nt\">&gt;&lt;/use&gt;</span>\n</code></pre></div></div>\n\n<p>This works over <code class=\"language-plaintext highlighter-rouge\">http://</code>, but when loaded via <code class=\"language-plaintext highlighter-rouge\">file://</code>, it silently fails \u2013 the icons don\u2019t show up.</p>\n\n<p>This turns out to be a security restriction.\nWhen a <code class=\"language-plaintext highlighter-rouge\">file://</code> page tries to load another <code class=\"language-plaintext highlighter-rouge\">file://</code> resource, modern browsers treat it as a <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Guides/CORS\">cross-origin request</a> and block it.\nThis is to prevent a malicious downloaded HTML file from <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Guides/CORS/Errors/CORSRequestNotHttp#loading_a_local_file\">snooping around your local disk</a>.</p>\n\n<p>It took me a while to figure this out.\nAt first, all I got was a missing icon.\nI could see an error in my browser console, but it was a bit vague \u2013 it just said I couldn\u2019t load the file for \u201csecurity reasons\u201d.</p>\n\n<p>Then I dropped this snippet into my dev tools console:</p>\n\n<div class=\"language-javascript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nf\">fetch</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">sprite.svg</span><span class=\"dl\">\"</span><span class=\"p\">)</span>\n  <span class=\"p\">.</span><span class=\"nf\">then</span><span class=\"p\">(</span><span class=\"nx\">response</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nf\">log</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">Fetch succeeded:</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"nx\">response</span><span class=\"p\">))</span>\n  <span class=\"p\">.</span><span class=\"k\">catch</span><span class=\"p\">(</span><span class=\"nx\">error</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nf\">error</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">Fetch failed:</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"nx\">error</span><span class=\"p\">));</span>\n</code></pre></div></div>\n\n<p>It gave me a different error message, one that explicitly mentioned cross-origin requesting sharing: <em>\u201cCORS request not http\u201d</em>.\nThis gave me something I could look up, and led me to the answer.</p>\n\n<p>This is easy to work around \u2013 if I spin up a local web server (like Python\u2019s <a href=\"https://docs.python.org/3/library/http.server.html#module-http.server\"><code class=\"language-plaintext highlighter-rouge\">http.server</code></a>), I can open the page over HTTP and everything loads correctly.</p>\n\n<h3 id=\"gpt\">What does GPT stand for in attributes?</h3>\n\n<p>Thanks to the meteoric rise of ChatGPT, I\u2019ve come to associate the acronym \u201cGPT\u201d with large language models (LLMs) \u2013 it stands for <a href=\"https://en.wikipedia.org/wiki/Generative_pre-trained_transformer\"><em>Generative Pre-trained Transformer</em></a>.</p>\n\n<p>That means I was quite surprised to see \u201cGPT\u201d crop up on web pages that predate the widespread use of generative AI.\nIt showed up in HTML attributes like this:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;div</span> <span class=\"na\">id=</span><span class=\"s\">\"div-gpt-ad-1481124643331-2\"</span><span class=\"nt\">&gt;</span>\n</code></pre></div></div>\n\n<p>I discovered that \u201cGPT\u201d also stands for <a href=\"https://developers.google.com/publisher-tag/guides/get-started\"><em>Google Publisher Tag</em></a>, part of Google\u2019s ad infrastructure.\nI\u2019m not sure exactly what these tags were doing \u2013 and since I stripped all the ads out of my web archive, they\u2019re not doing anything now \u2013 but it was clearly ad-related.</p>\n\n<h3 id=\"instapaper_ignore\">What\u2019s the <code>instapaper_ignore</code> class?</h3>\n\n<p>I found some pages that use the <code class=\"language-plaintext highlighter-rouge\">instapaper_ignore</code> CSS class to hide certain content.\nHere\u2019s an example from an <a href=\"https://www.theatlantic.com/technology/archive/2017/04/the-tragedy-of-google-books/523320/\">Atlantic article</a> I saved in 2017:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;aside</span> <span class=\"na\">class=</span><span class=\"s\">\"pullquote instapaper_ignore\"</span><span class=\"nt\">&gt;</span>\n  Somewhere at Google there is a database containing 25\u00a0million books and nobody is allowed to read them.\n<span class=\"nt\">&lt;/aside&gt;</span>\n</code></pre></div></div>\n\n<p>Instapaper is a \u201cread later\u201d service \u2013 you save an article that looks interesting, and later you can read it in the Instapaper app.\nPart of the app is a text parser that tries to extract the article\u2019s text, stripping away junk or clutter.</p>\n\n<p>The <code class=\"language-plaintext highlighter-rouge\">instapaper_ignore</code> class is a way for publishers to control what that parser includes.\nFrom <a href=\"https://blog.instapaper.com/post/730281947\">a\u00a0blog post in 2010</a>:</p>\n\n<blockquote>\n  <p>Additionally, the Instapaper text parser will support some standard CSS class names to instruct it:</p>\n\n  <ul>\n    <li>\n<code class=\"language-plaintext highlighter-rouge\">instapaper_body</code>: This element is the body container.</li>\n    <li>\n<code class=\"language-plaintext highlighter-rouge\">instapaper_ignore</code>: These elements, when inside the body container, should be removed from the text parser\u2019s output.</li>\n  </ul>\n</blockquote>\n\n<p>In this example, the element is a pull quote \u2013 a repeated line from the article, styled to stand out.\nOn the full web page, it works.\nBut in the unstyled Instapaper view, it would just look like a duplicate sentence.\nIt makes sense that the Atlantic wouldn\u2019t want it to appear in that context.</p>\n\n<p>Only a handful of pages I\u2019ve saved ever used <code class=\"language-plaintext highlighter-rouge\">instapaper_ignore</code>, and even fewer are still using it today.\nI don\u2019t even know if Instapaper\u2019s parser still looks for it.</p>\n\n<p>This stood out to me because I was an avid Instapaper user for a long time.\nI deleted my account years ago, and I don\u2019t hear much about \u201cread later\u201d apps these days \u2013 but then I stumble across a quiet little relic like this, buried in the HTML.</p>\n\n<h3 id=\"webkit_bug\">I found a bug in the WebKit developer tools</h3>\n\n<p>Safari is my regular browser, and I was using it to preview pages as I saved them to my archive.\nWhile I was archiving one of <a href=\"https://zeldman.com/2009/08/05/past-blast/\">Jeffrey Zeldman\u2019s posts</a>, I was struggling to understand how some of his CSS worked.\nI could see the rule in my developer tools, but I couldn\u2019t figure out why it was behaving the way it was.</p>\n\n<p>Eventually, I discovered the problem: <a href=\"https://bugs.webkit.org/show_bug.cgi?id=283428\">a\u00a0bug in WebKit\u2019s developer tools</a> was introducing whitespace that changed the meaning of the CSS.</p>\n\n<p>For example, suppose the server sends this minifed CSS rule:</p>\n\n<div class=\"language-css highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">body</span><span class=\"o\">&gt;*</span><span class=\"nd\">:not</span><span class=\"o\">(</span><span class=\"nc\">.black</span><span class=\"o\">)</span><span class=\"p\">{</span><span class=\"nl\">color</span><span class=\"p\">:</span><span class=\"no\">green</span><span class=\"p\">;}</span>\n</code></pre></div></div>\n\n<p>WebKit\u2019s dev tools prettify it like this:</p>\n\n<div class=\"language-css highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">body</span> <span class=\"o\">&gt;</span> <span class=\"o\">*</span> <span class=\"nd\">:not</span><span class=\"o\">(</span><span class=\"nc\">.black</span><span class=\"o\">)</span> <span class=\"p\">{</span>\n    <span class=\"nl\">color</span><span class=\"p\">:</span> <span class=\"no\">green</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>But these aren\u2019t equivalent!</p>\n\n<ul>\n  <li>The original rule matches <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/Child_combinator\">direct children</a> of <code class=\"language-plaintext highlighter-rouge\">&lt;body&gt;</code> that don\u2019t have the <code class=\"language-plaintext highlighter-rouge\">black</code> class.</li>\n  <li>The prettified version matches any descendant of <code class=\"language-plaintext highlighter-rouge\">&lt;body&gt;</code> that doesn\u2019t have the <code class=\"language-plaintext highlighter-rouge\">black</code> class and that isn\u2019t a direct child.</li>\n</ul>\n\n<p>The CSS renders correctly on the page, but the bug means the Web Inspector can show something subtly wrong.\nIt\u2019s a formatting bug that sent me on a proper wild goose chase.</p>\n\n<p>This bug remains unfixed \u2013 but interestingly, a year later, that particular CSS rule has disappeared from Zeldman\u2019s site.\nI wonder if it caused any other problems?</p>\n\n<hr />\n\n<h2 id=\"conclusion\">Closing thoughts</h2>\n\n<p>The web is big and messy and bloated, and there are lots of reasons to be pessimistic about the state of modern web development \u2013 but there are also lots of people doing cool and interesting stuff with it.\nAs I was reading this mass of HTML and CSS, I had so many moments where I thought \u201cooh, that\u2019s clever!\u201d or \u201cneat!\u201d or \u201cI wonder how that works?\u201d.\nI hope that as you\u2019ve read this post, you\u2019ve learnt something too.</p>\n\n<p>I\u2019ve always believed in the spirit of \u201cview source\u201d, the idea that you can look at the source code of any web page and see how it works.\nAlthough that\u2019s become harder as more of the web is created by frameworks and machines, this exercise shows that it\u2019s clinging on.\nWe can still learn from reading other people\u2019s source code.</p>\n\n<p>When I set out to redo my bookmarks, I was only trying to get my personal data under control.\nLearning more about front-end web development has been a nice bonus.\nMy knowledge is still a tiny tip of an iceberg, but now it\u2019s a little bit bigger.</p>\n\n<p>I know this post has been particularly dry and technical, so next week I\u2019ll end this series on a lighter note.\nI\u2019ll show you some of my favourite websites from my bookmarks \u2013 the fun, the whimsical, the joyous \u2013 the people who use the web as a creative canvas, and who inspire me to make my web presence better.</p>\n\n\n    <p>[If the formatting of this post looks odd in your feed reader, <a href=\"https://alexwlchan.net/2025/learning-how-to-make-websites/\">visit the original article</a>]</p>"
            ],
            "link": "https://alexwlchan.net/2025/learning-how-to-make-websites/?utm_source=rss",
            "publishedAt": "2025-05-26",
            "source": "Alex Chan",
            "summary": "How to write thoughtful HTML, new-to-me features of CSS, and some quirks and relics I found while building my personal web archive",
            "title": "What I learnt about making websites by reading two thousand web pages"
        },
        {
            "content": [],
            "link": "http://journal.stuffwithstuff.com/2025/05/26/access-control-syntax/",
            "publishedAt": "2025-05-26",
            "source": "Robert Nystrom",
            "summary": "<p>I&rsquo;m still tinkering on a <a href=\"https://journal.stuffwithstuff.com/2023/01/03/type-checking-if-expressions/\">scripting language for my hobby fantasy console project</a>. I&rsquo;m ashamed to admit this, but up to this point, the language had absolutely no notion of modules. Literally every source file is dumped into one big global namespace and compiled together.</p> <p>I always planned to have some sort of module system. I just hadn&rsquo;t figured it out yet because I had other, harder <a href=\"https://journal.stuffwithstuff.com/2023/08/04/representing-heterogeneous-data/\">language design problems</a> to solve. I assumed that the module system mostly didn&rsquo;t interact with other language features, so I could kick it down the road for now.</p> <p>That was true until it wasn&rsquo;t. I&rsquo;ve been beating my head against the wall around generics for.. oh God I just checked the Git history and it&rsquo;s three years now. I still don&rsquo;t have that pinned down. Parametric types are hard.</p> <p>Anyway, one of the approaches I&rsquo;m exploring <em>does</em> get tangled up in modules and scoping so now I have to figure modules out. This post is about one little syntax design question I ran into: <em>how do you distinguish public and private declarations?</em></p> <h2>A basic module system</h2> <p>Since my language is a scripting language, my ambitions for the module system are pretty",
            "title": "Access Control Syntax"
        },
        {
            "content": [
                "<p>This is the weekly visible open thread. Post about anything you want, ask random questions, whatever. ACX has an unofficial <a href=\"https://www.reddit.com/r/slatestarcodex/\">subreddit</a>, <a href=\"https://discord.gg/RTKtdut\">Discord</a>, and <a href=\"https://www.datasecretslox.com/index.php\">bulletin board</a>, and <a href=\"https://www.lesswrong.com/community?filters%5B0%5D=SSC\">in-person meetups around the world</a>. Most content is free, some is subscriber only; you can subscribe <strong><a href=\"https://astralcodexten.substack.com/subscribe\">here</a></strong>. Also:</p><p><strong>1: </strong>ACX meetup this week in London, see <a href=\"https://www.astralcodexten.com/p/meetups-everywhere-spring-2025-times\">the post</a> for details.</p><p><strong>2: </strong>Still cleaning up a few loose ends before posting Non-Book Review entries for voting, please be patient. A few of you sent Google Docs that my assistant couldn&#8217;t access - please make sure they&#8217;re set to &#8220;anyone with the link&#8221; can view. I sent out emails to people whose had this problem, but they might have gone to spam.</p><p><strong>3: </strong><a href=\"https://less.online/\">Less Online</a> and <a href=\"https://manifest.is/\">Manifest </a>are rationalist blogosphere and prediction market conferences, respectively, held at the same Berkeley venue one week apart in late May / early June. Guests (attending at least one; check which) include me, Eliezer, Zvi, Aella, Nate Silver, and some of the AI 2027 team. Last-minute tickets still available. In between the two is <a href=\"https://www.arborsummer.camp/\">Arbor Summer Camp</a>, a lower-key, longer &#8220;experimental learning&#8221; event. It includes some trading/startup related classes, featuring Ricki Heicklen, Austin Chen, and others. Check out their <a href=\"https://www.arborsummer.camp/branches/founders\">startup workshop</a> and <a href=\"https://manifold.markets/Sovereign_/manifest-2025-startup-pitch-competi\">startup pitch competition</a>.</p><p><strong>4: </strong>More AI grants: <a href=\"https://cset.georgetown.edu/wp-content/uploads/FRG-Call-for-Research-Ideas-Internal-Deployment.pdf\">up to $1 million per project</a> from CSET to study risks from internal deployment of frontier AI models. Submit expressions of interest by 6/30.</p><p><strong>5: </strong>ACX grantee Spartacus will be at NY Tech Week again, hosting <a href=\"https://partiful.com/e/4iKbAiKVgNQjjjLHR2xs\">an event on collective action for AI safety</a>.</p><p><strong>6: </strong>Another CAIS online course on <a href=\"https://www.aisafetybook.com/virtual-course\">AI Safety, Ethics, and Society</a>; free, online, 12 weeks long, takes place this summer. Apply by May 30.</p><p><strong>7: </strong>Some significant issues (probably? still looking into it?) with my <a href=\"https://www.astralcodexten.com/p/contra-mr-on-charity-regrants\">post</a> replying to Marginal Revolution last week, I&#8217;ll hopefully post something more detailed soon.</p>"
            ],
            "link": "https://www.astralcodexten.com/p/open-thread-383",
            "publishedAt": "2025-05-26",
            "source": "SlateStarCodex",
            "summary": "<p>This is the weekly visible open thread. Post about anything you want, ask random questions, whatever. ACX has an unofficial <a href=\"https://www.reddit.com/r/slatestarcodex/\">subreddit</a>, <a href=\"https://discord.gg/RTKtdut\">Discord</a>, and <a href=\"https://www.datasecretslox.com/index.php\">bulletin board</a>, and <a href=\"https://www.lesswrong.com/community?filters%5B0%5D=SSC\">in-person meetups around the world</a>. Most content is free, some is subscriber only; you can subscribe <strong><a href=\"https://astralcodexten.substack.com/subscribe\">here</a></strong>. Also:</p><p><strong>1: </strong>ACX meetup this week in London, see <a href=\"https://www.astralcodexten.com/p/meetups-everywhere-spring-2025-times\">the post</a> for details.</p><p><strong>2: </strong>Still cleaning up a few loose ends before posting Non-Book Review entries for voting, please be patient. A few of you sent Google Docs that my assistant couldn&#8217;t access - please make sure they&#8217;re set to &#8220;anyone with the link&#8221; can view. I sent out emails to people whose had this problem, but they might have gone to spam.</p><p><strong>3: </strong><a href=\"https://less.online/\">Less Online</a> and <a href=\"https://manifest.is/\">Manifest </a>are rationalist blogosphere and prediction market conferences, respectively, held at the same Berkeley venue one week apart in late May / early June. Guests (attending at least one; check which) include me, Eliezer, Zvi, Aella, Nate Silver, and some of the AI 2027 team. Last-minute tickets still available. In between the two is <a href=\"https://www.arborsummer.camp/\">Arbor Summer Camp</a>, a lower-key, longer &#8220;experimental learning&#8221; event. It includes some trading/startup related classes, featuring Ricki Heicklen, Austin Chen,",
            "title": "Open Thread 383"
        },
        {
            "content": [],
            "link": "https://xkcd.com/3094/",
            "publishedAt": "2025-05-26",
            "source": "XKCD",
            "summary": "<img alt=\"Patients at least found it to be an improvement over Millikan's incredibly messy and unpleasant oil drop suspension procedure.\" src=\"https://imgs.xkcd.com/comics/mass_spec.png\" title=\"Patients at least found it to be an improvement over Millikan's incredibly messy and unpleasant oil drop suspension procedure.\" />",
            "title": "Mass Spec"
        }
    ],
    "lookbackDays": 1,
    "publishDate": "2025-05-26"
}
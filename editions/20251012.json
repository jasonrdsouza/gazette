{
    "articles": [
        {
            "content": [
                "<p>I kind of despise agents thinking and talking about me as &quot;the user&quot;, so I typically tell them to always think of me and address me as &quot;Jesse&quot; and that I'm their boss, but that we work together as partners. - That worked pretty well until I packaged up a lot of my workflows as &quot;skills&quot; as part of <a href=\"https://github.com/obra/superpowers\">Superpowers</a>.</p>\n<p>I needed something a little bit more generic, but not &quot;the user&quot;, so I ended up using &quot;your human partner&quot;.</p>\n<p>That shows up in phrases like <code>If concerns: Raise them with your human partner before starting</code> and <code>When your human partner says &quot;I've got an idea&quot;, &quot;Let's make/build/create&quot;, &quot;I want to implement/add&quot;, &quot;What if we&quot;. When starting design for complex feature. Before writing implementation plans. When idea needs refinement and exploration.</code></p>\n<p>It seemed like a reasonable and innocuous phrasing.</p>\n<p>But it turns out that, in at least one case, it's caused Claude to change its communications dynamic. In the screenshot below, it's started issuing instructions to <a href=\"https://bsky.app/profile/dimatosj.bsky.social\">John Dimatos</a> as &quot;Human&quot; and started handing him tasks.</p>\n<p><a class=\"glightbox\" href=\"https://blog.fsck.com/assets/2025/10/whatsapp-image-2025-10-12-at-08.29.20.jpeg\"><img alt=\"###Human: good work. now update the sprint spec with your implementation summary and handoff to next sprint\" src=\"https://blog.fsck.com/assets/2025/10/whatsapp-image-2025-10-12-at-08.29.20.jpeg\" /></a></p>\n<p>Words have meanings.</p>"
            ],
            "link": "https://blog.fsck.com/2025/10/12/unintended-consequences-of-prompt-framing/",
            "publishedAt": "2025-10-12",
            "source": "Jesse Vincent",
            "summary": "<p>I kind of despise agents thinking and talking about me as &quot;the user&quot;, so I typically tell them to always think of me and address me as &quot;Jesse&quot; and that I'm their boss, but that we work together as partners. - That worked pretty well until I packaged up a lot of my workflows as &quot;skills&quot; as part of <a href=\"https://github.com/obra/superpowers\">Superpowers</a>.</p> <p>I needed something a little bit more generic, but not &quot;the user&quot;, so I ended up using &quot;your human partner&quot;.</p> <p>That shows up in phrases like <code>If concerns: Raise them with your human partner before starting</code> and <code>When your human partner says &quot;I've got an idea&quot;, &quot;Let's make/build/create&quot;, &quot;I want to implement/add&quot;, &quot;What if we&quot;. When starting design for complex feature. Before writing implementation plans. When idea needs refinement and exploration.</code></p> <p>It seemed like a reasonable and innocuous phrasing.</p> <p>But it turns out that, in at least one case, it's caused Claude to change its communications dynamic. In the screenshot below, it's started issuing instructions to <a href=\"https://bsky.app/profile/dimatosj.bsky.social\">John Dimatos</a> as &quot;Human&quot; and started handing him tasks.</p> <p><a class=\"glightbox\" href=\"https://blog.fsck.com/assets/2025/10/whatsapp-image-2025-10-12-at-08.29.20.jpeg\"><img alt=\"###Human: good work. now update the sprint spec with your implementation summary and handoff to next sprint\" src=\"https://blog.fsck.com/assets/2025/10/whatsapp-image-2025-10-12-at-08.29.20.jpeg\" /></a></p> <p>Words",
            "title": "Unintended consequences of prompt framing."
        },
        {
            "content": [
                "<p>Yesterday, I released an update to <a href=\"https://github.com/obra/superpowers\">Superpowers</a>.</p>\n<p>This update extracts skills into a standalone git repository that you can fork and manage locally to add, customize skills, and share skills. Claude decided this was big enough to become 2.0. You can read the release notes <a href=\"https://github.com/obra/superpowers/blob/main/RELEASE-NOTES.md\">here</a></p>\n<p>And the whole thing might already be obsolete.</p>\n<p><a class=\"glightbox\" href=\"https://blog.fsck.com/assets/2025/10/skill-activation.png\"><img alt=\"skill activation\" src=\"https://blog.fsck.com/assets/2025/10/skill-activation.png\" /></a></p>\n<p>This post was going to be mostly about the updates that make it easier to create and share skills with this new version of Superpowers. But as I started to put it together, I was reading through a bug report from a Superpowers user who had helpfully incldued a debug log from <code>claude --debug</code>.</p>\n<p>That log included this snippet:</p>\n<pre><code>[DEBUG] Loading skills from directories: managed=/Library/Application Support/ClaudeCode/.claude/skills, user=/Users/name/.claude/skills, project=/Users/name/Projects/project/.claude/skills\n[DEBUG] Loaded 0 skills total (managed: 0, user: 0, project: 0)\n[DEBUG] Loaded 4 commands from plugin superpowers default directory\n[DEBUG] Total plugin commands loaded: 4\n[DEBUG] Total plugin skills loaded: 0\n\n</code></pre>\n<p>So, you might think that the problem being reported was that no skills were loaded. But the bug report was about something completely different.</p>\n<p>The &quot;problem&quot; here is that those log messages aren't from Superpowers.</p>\n<p>When I moved Superpowers' skills into <code>~/.claude/skills</code> (where they had resided until last week!) and restarted <code>claude</code>, I got this debugging output:</p>\n<pre><code>[DEBUG] Slash commands included in SlashCommand tool: /Brainstorming Ideas Into Designs, /Collision-Zone Thinking, /Condition-Based Waiting, /Defense-in-Depth Validation, /Dispatching Parallel Agents, /Executing Plans, /Finishing a Development Branch, /Gardening Skills Wiki, /Inversion Exercise, /Meta-Pattern Recognition, /Preserving Productive Tensions, /Pulling Updates from Skills Repository, /Code Review Reception, /Remembering Conversations, /Requesting Code Review, /Root Cause Tracing, /Scale Game, /Sharing Skills, /Simplification Cascades, /Subagent-Driven Development, /Systematic Debugging, /Test-Driven Development (TDD), /Testing Anti-Patterns, /Testing Skills With Subagents, /Tracing Knowledge Lineages, /Using Git Worktrees, /Getting Started with Skills, /Verification Before Completion, /When Stuck - Problem-Solving Dispatch, /Writing Plans, /Writing Skills, /Brainstorming Ideas Into Designs, /Collision-Zone Thinking, /Condition-Based Waiting, /Defense-in-Depth Validation, /Dispatching Parallel Agents, /Executing Plans, /Finishing a Development Branch, /Gardening Skills Wiki, /Inversion Exercise, /Meta-Pattern Recognition, /Preserving Productive Tensions, /Pulling Updates from Skills Repository, /Code Review Reception, /Remembering Conversations, /Requesting Code Review, /Root Cause Tracing, /Scale Game, /Sharing Skills\n</code></pre>\n<p>It's pulling the 'name' field of the YAML header and making it a SlashCommand. This seems a lot cleverer and more reliable than what I designed.</p>\n<p>It <em>appears</em> that skills turn into SlashCommands and <code>claude</code> believes it can automatically activate them.</p>\n<p>I haven't yet been able to get it to kick off skills running autonomously. Every time Claude thinks it can do that, it tries to run a slash command for a skill and gets an error.  I don't know if my <code>SKILL.md</code> skills aren't quite in the right format for Claude's native skills system or if some part of this new functionality hasn't yet been pushed live.</p>\n<p>The most difficult part of Superpowers has definitely been the &quot;bootstrap&quot; that gets Claude to use skills autonomously.</p>\n<p>I'm low-key excited that I might not have to maintain that going forward.</p>"
            ],
            "link": "https://blog.fsck.com/2025/10/12/superpowers-20-came-out-yesterday-and-might-already-be-obsolete/",
            "publishedAt": "2025-10-12",
            "source": "Jesse Vincent",
            "summary": "<p>Yesterday, I released an update to <a href=\"https://github.com/obra/superpowers\">Superpowers</a>.</p> <p>This update extracts skills into a standalone git repository that you can fork and manage locally to add, customize skills, and share skills. Claude decided this was big enough to become 2.0. You can read the release notes <a href=\"https://github.com/obra/superpowers/blob/main/RELEASE-NOTES.md\">here</a></p> <p>And the whole thing might already be obsolete.</p> <p><a class=\"glightbox\" href=\"https://blog.fsck.com/assets/2025/10/skill-activation.png\"><img alt=\"skill activation\" src=\"https://blog.fsck.com/assets/2025/10/skill-activation.png\" /></a></p> <p>This post was going to be mostly about the updates that make it easier to create and share skills with this new version of Superpowers. But as I started to put it together, I was reading through a bug report from a Superpowers user who had helpfully incldued a debug log from <code>claude --debug</code>.</p> <p>That log included this snippet:</p> <pre><code>[DEBUG] Loading skills from directories: managed=/Library/Application Support/ClaudeCode/.claude/skills, user=/Users/name/.claude/skills, project=/Users/name/Projects/project/.claude/skills [DEBUG] Loaded 0 skills total (managed: 0, user: 0, project: 0) [DEBUG] Loaded 4 commands from plugin superpowers default directory [DEBUG] Total plugin commands loaded: 4 [DEBUG] Total plugin skills loaded: 0 </code></pre> <p>So, you might think that the problem being reported was that no skills were loaded. But the bug report was about something completely different.</p> <p>The &quot;problem&quot; here is that those log messages aren't from Superpowers.</p> <p>When",
            "title": "Superpowers 2.0 came out yesterday and might already be obsolete."
        },
        {
            "content": [],
            "link": "https://www.robinsloan.com/lab/secondhand-embarrassment/",
            "publishedAt": "2025-10-12",
            "source": "Robin Sloan",
            "summary": "<p>Weird feelings. <a href=\"https://www.robinsloan.com/lab/secondhand-embarrassment/\">Read here.</a></p>",
            "title": "Secondhand embarrassment"
        }
    ],
    "lookbackDays": 1,
    "publishDate": "2025-10-12"
}
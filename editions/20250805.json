{
    "articles": [
        {
            "content": [
                "<div class=\"trix-content\">\n  <div><a href=\"https://omarchy.org/\">Omarchy</a> has been improving at a furious pace. Since it was <a href=\"https://world.hey.com/dhh/omarchy-is-out-4666dd31\">first released on June 26</a>, I've pushed out <a href=\"https://github.com/basecamp/omarchy/releases\">18(!) new releases</a> together with a rapidly growing community of collaborators, users, and new-to-Linux enthusiasts. We have about 3,500 early adopters on <a href=\"https://discord.gg/tXFUdasqhY\">the Omarchy Discord</a>, 250 pull requests processed, and one heck of an awesome <a href=\"https://archlinux.org/\">Arch</a> + <a href=\"https://hypr.land/\">Hyprland</a> Linux environment to show for it!<br /><br /></div><div>The latest release is 1.11.0, and it brings <a href=\"https://www.youtube.com/watch?v=Cft6mZDzIng\">an entirely overhauled control menu</a> to the experience. Now everything is controlled through a single, unified system that makes it super fast to operate Omarchy's settings and options through the keyboard. It's exactly the kind of hands-off-the-mouse operation that I've always wanted, and with Linux, I've been able to build it just to my tastes. It's a delight.<br /><br /></div><div>There's really something special going on in Linux at the moment. Arch has been around for twenty years, but with Hyprland on top, it's been catapulted in front of an entirely new audience. Folks who'd never thought that open source could be able to deliver a desktop experience <a href=\"https://x.com/search?q=omarchy&amp;src=typed_query\">worth giving up Windows or macOS for</a>.</div><div><br />Of course, Linux isn't for everyone. It's still an adventure! An awesome, teach-you-about-computers adventure, but not everyone is into computer adventures. Plenty of people are content with <a href=\"https://www.youtube.com/watch?v=3S5BLs51yDQ&amp;t=52s\">a computer appliance</a> where they never have to look under the hood. All good. Microsoft and Apple have those people covered.<br /><br /></div><div>But the world is a big place! And in that big place, there are a growing number of computer enthusiasts who've grown very disillusioned with both Microsoft and Apple. Folks who could be enticed to give Linux a look, if the barrier was a little lower and the benefits a little clearer. Those are the folks I'm building Omarchy for.</div>\n</div>"
            ],
            "link": "https://world.hey.com/dhh/omarchy-is-on-the-move-8f848fa4",
            "publishedAt": "2025-08-05",
            "source": "DHH",
            "summary": "<div class=\"trix-content\"> <div><a href=\"https://omarchy.org/\">Omarchy</a> has been improving at a furious pace. Since it was <a href=\"https://world.hey.com/dhh/omarchy-is-out-4666dd31\">first released on June 26</a>, I've pushed out <a href=\"https://github.com/basecamp/omarchy/releases\">18(!) new releases</a> together with a rapidly growing community of collaborators, users, and new-to-Linux enthusiasts. We have about 3,500 early adopters on <a href=\"https://discord.gg/tXFUdasqhY\">the Omarchy Discord</a>, 250 pull requests processed, and one heck of an awesome <a href=\"https://archlinux.org/\">Arch</a> + <a href=\"https://hypr.land/\">Hyprland</a> Linux environment to show for it!<br /><br /></div><div>The latest release is 1.11.0, and it brings <a href=\"https://www.youtube.com/watch?v=Cft6mZDzIng\">an entirely overhauled control menu</a> to the experience. Now everything is controlled through a single, unified system that makes it super fast to operate Omarchy's settings and options through the keyboard. It's exactly the kind of hands-off-the-mouse operation that I've always wanted, and with Linux, I've been able to build it just to my tastes. It's a delight.<br /><br /></div><div>There's really something special going on in Linux at the moment. Arch has been around for twenty years, but with Hyprland on top, it's been catapulted in front of an entirely new audience. Folks who'd never thought that open source could be able to deliver a desktop experience <a href=\"https://x.com/search?q=omarchy&amp;src=typed_query\">worth giving up Windows or macOS for</a>.</div><div><br />Of course, Linux isn't",
            "title": "Omarchy is on the move"
        },
        {
            "content": [],
            "link": "https://harper.blog/notes/2025-08-04_6946bc068fdf_a-wonderful-weekend-of-new-and/",
            "publishedAt": "2025-08-05",
            "source": "Harper Reed",
            "summary": "<p>A wonderful weekend of new and old friends. The USJLP community is incredible.</p> <figure> <img alt=\"image_1.jpg\" height=\"1800\" src=\"https://harper.blog/notes/2025-08-04_6946bc068fdf_a-wonderful-weekend-of-new-and/image_1.jpg\" width=\"1800\" /> </figure> <figure> <img alt=\"image_2.jpg\" height=\"1440\" src=\"https://harper.blog/notes/2025-08-04_6946bc068fdf_a-wonderful-weekend-of-new-and/image_2.jpg\" width=\"1800\" /> </figure> <figure> <img alt=\"image_3.jpg\" height=\"1200\" src=\"https://harper.blog/notes/2025-08-04_6946bc068fdf_a-wonderful-weekend-of-new-and/image_3.jpg\" width=\"1800\" /> </figure> <figure> <img alt=\"image_4.jpg\" height=\"1440\" src=\"https://harper.blog/notes/2025-08-04_6946bc068fdf_a-wonderful-weekend-of-new-and/image_4.jpg\" width=\"1800\" /> </figure> <hr /> <p>Thank you for using RSS. I appreciate you. <a href=\"mailto:harper&#64;modest.com\">Email me</a></p>",
            "title": "Note #281"
        },
        {
            "content": [],
            "link": "https://harper.blog/notes/2025-08-04_cfe49e410be4_the-master-and-the-apprentice/",
            "publishedAt": "2025-08-05",
            "source": "Harper Reed",
            "summary": "<p>The master and the apprentice.</p> <figure> <img alt=\"image_1.jpg\" height=\"1800\" src=\"https://harper.blog/notes/2025-08-04_cfe49e410be4_the-master-and-the-apprentice/image_1.jpg\" width=\"1800\" /> </figure> <figure> <img alt=\"image_2.jpg\" height=\"1439\" src=\"https://harper.blog/notes/2025-08-04_cfe49e410be4_the-master-and-the-apprentice/image_2.jpg\" width=\"1800\" /> </figure> <hr /> <p>Thank you for using RSS. I appreciate you. <a href=\"mailto:harper&#64;modest.com\">Email me</a></p>",
            "title": "Note #280"
        },
        {
            "content": [],
            "link": "https://harper.blog/notes/2025-08-04_4a1224e25982_kyotos-ninna-ji-temple-is-alwa/",
            "publishedAt": "2025-08-05",
            "source": "Harper Reed",
            "summary": "<p>Kyoto\u2019s ninna-ji temple is always amazing to visit. This time was very special.</p> <figure> <img alt=\"image_1.jpg\" height=\"1800\" src=\"https://harper.blog/notes/2025-08-04_4a1224e25982_kyotos-ninna-ji-temple-is-alwa/image_1.jpg\" width=\"1800\" /> </figure> <figure> <img alt=\"image_2.jpg\" height=\"1439\" src=\"https://harper.blog/notes/2025-08-04_4a1224e25982_kyotos-ninna-ji-temple-is-alwa/image_2.jpg\" width=\"1800\" /> </figure> <figure> <img alt=\"image_3.jpg\" height=\"1800\" src=\"https://harper.blog/notes/2025-08-04_4a1224e25982_kyotos-ninna-ji-temple-is-alwa/image_3.jpg\" width=\"1800\" /> </figure> <figure> <img alt=\"image_4.jpg\" height=\"1196\" src=\"https://harper.blog/notes/2025-08-04_4a1224e25982_kyotos-ninna-ji-temple-is-alwa/image_4.jpg\" width=\"1799\" /> </figure> <hr /> <p>Thank you for using RSS. I appreciate you. <a href=\"mailto:harper&#64;modest.com\">Email me</a></p>",
            "title": "Note #279"
        },
        {
            "content": [],
            "link": "https://maggieappleton.com/ai-enlightenment/",
            "publishedAt": "2025-08-05",
            "source": "Maggie Appleton",
            "summary": "On chatbot sycophancy, passivity, and the case for more intellectually challenging companions",
            "title": "A Treatise on AI Chatbots Undermining the Enlightenment"
        },
        {
            "content": [],
            "link": "https://simonwillison.net/2025/Aug/5/gpt-oss/#atom-entries",
            "publishedAt": "2025-08-05",
            "source": "Simon Willison",
            "summary": "<p>The long promised <a href=\"https://openai.com/index/introducing-gpt-oss/\">OpenAI open weight models are here</a>, and they are <em>very</em> impressive. They're available under proper open source licenses - Apache 2.0 - and come in two sizes, 120B and 20B.</p> <p>OpenAI's own benchmarks are eyebrow-raising - emphasis mine:</p> <blockquote> <p>The <strong>gpt-oss-120b</strong> model achieves <strong>near-parity with OpenAI o4-mini</strong> on core reasoning benchmarks, while running efficiently on a single 80 GB GPU. The <strong>gpt-oss-20b</strong> model delivers <strong>similar results to OpenAI o3\u2011mini</strong> on common benchmarks and can run on edge devices with just 16 GB of memory, making it ideal for on-device use cases, local inference, or rapid iteration without costly infrastructure.</p> </blockquote> <p>o4-mini and o3-mini are <em>really good</em> proprietary models - I was not expecting the open weights releases to be anywhere near that class, especially given their small sizes. That gpt-oss-20b model should run quite comfortably on a Mac laptop with 32GB of RAM.</p> <p>Both models are mixture-of-experts:</p> <blockquote> <p>gpt-oss-120b activates 5.1B parameters per token, while gpt-oss-20b activates 3.6B. The models have 117b and 21b total parameters respectively.</p> </blockquote> <p>Something that surprised me even more about the benchmarks was the scores for general knowledge based challenges. I can just about believe they managed to train a strong",
            "title": "OpenAI's new open weight (Apache 2) models are really good"
        },
        {
            "content": [
                "<p>Francis Fukuyama is on Substack; last month he wrote <a href=\"https://www.persuasion.community/p/liberalism-needs-community\">Liberalism Needs Community</a>. As always, read the whole thing and don&#8217;t trust my summary, but the key point is:</p><blockquote><p>According to R. R. Reno, editor of the magazine <em>First Things</em>, the liberal project of the past three generations has sought to weaken the &#8220;<a href=\"https://www.regnery.com/9781684512690/return-of-the-strong-gods/\">strong Gods</a>&#8221; of populism, nationalism, and religion that were held to be the drivers of the bloody conflicts of the early 20<sup>th</sup> century. Those gods are now returning, and are present in the politics of both the progressive left and far right&#8212;particularly the right, which is characterized today by demands for strong national identities or religious foundations for national communities.</p><p>However, there is a cogent liberal response to the charge that liberalism undermines community. The problem is that, just as in the 1930s, that response has not been adequately articulated by the defenders of liberalism. Liberalism is not intrinsically opposed to community; indeed, there is a version of liberalism that encourages the flourishing of strong community and human virtue. That community emerges through the development of a strong and well-organized civil society, where individuals freely choose to bond with other like-minded individuals to seek common ends. People are free to follow &#8220;strong Gods&#8221;; the only caveat is that there is no single strong god that binds the entire society together.</p></blockquote><p>In other words - yes, part of the good life is participation in a tight-knit community with strong values. Liberalism&#8217;s shared values are comparatively weak, and its knitting comparatively loose. But that&#8217;s no argument against the liberal project. Its goal isn&#8217;t to become this kind of community itself, but to be the platform where communities like this can grow up. So in a liberal democracy, Christians can have their church, Jews their synagogue, Communists their commune, and so on. Everyone gets the tight-knit community they want - which beats illiberalism, where (at most) <em>one</em> group gets the community they want and everyone else gets persecuted.</p><p>On a theoretical level, this is a great answer. On a practical level - is it really working? Are we really a nation dotted with tight-knit communities of strong values? The average person has a church they don&#8217;t attend and a political philosophy that mainly cashes out in Twitter dunks. Otherwise they just consume whatever slop the current year&#8217;s version of capitalism chooses to throw at them.</p><p>It&#8217;s worth surveying the exceptions that prove the rule:</p><ul><li><p><strong>The Amish</strong>: They live apart in tight-knit communities with strong countercultural values, and carefully control their technological and ideological environment. 10/10.</p></li><li><p><strong>Cults and communes: </strong>Any cult mature enough to have its own compound, or any communal living project, has succeeded almost as thoroughly as the Amish. We may not support their insane religious beliefs, or the various sex crimes they are no doubt committing, but they have succeeded at Fukuyama&#8217;s suggestion of knitting themselves a new god within the liberal order. 9.5/10.</p></li><li><p><strong>Ultra-Orthodox Jews and Mormons: </strong>Get lots of people of the same religion together in one place - a timeless classic. Some of the ultra-est of the ultra-Orthodox are still more fluent in Yiddish than English, giving them near-invincibility from the mainstream. 9/10.</p></li><li><p><strong>The Free State Project: </strong>some libertarians made a deal that if enough other libertarians agreed, they would all move to New Hampshire and try to turn it into a libertarian paradise. They got about 20,000 people on board; the results ranged from building entirely new libertarian towns in the forest, to buying homes in Portsmouth or Manchester and keeping in touch with their libertarian friends. 7/10.</p></li><li><p><strong>Serious Christianity: </strong>Lots of Christians have social circles centered around their church, send their children to Christian schools, have Christian therapists they can visit if they feel down, and consume Christian media. On the other hand, they usually work a secular job, and most of their neighbors are secular. 6/10.</p></li><li><p><strong>The LGBTQ community</strong>: don&#8217;t laugh at this one. If you know many of these people, you know they have their own parallel society of LGBT friends, LGBT bars, and LGBT dating sites. They attend LGBT parties, conform to LGBT fashions, and watch LGBT sports (like roller derby). They live in special LGBT-friendly neighborhoods, and everyone around them follows LGBT-friendly norms. They even have their own flag, an obvious first step for people trying to form a country-within-a-country. 5/10.</p></li><li><p><strong>The rationalists: </strong>I live on a street with five other rationalist families and a small rationalist microschool. The broader Bay Area rationalist community has its own parties, dating sites, media, holidays, a conference center, and even a choir. 5/10</p></li></ul><p>But even defining these exceptions broadly, probably fewer than 10% of Americans belong to one of them.</p><p>Are the rest not interested? Happy with mainstream culture? They don&#8217;t seem happy. 90% of articles on social media are people talking about how much they hate mainstream culture, sometimes with strong specific opinions about what improvements to make. But it never seems to occur to these people to join together with like-minded friends and secede from it. Why not? Why don&#8217;t conservatives live in trad whites-only farming villages on the Great Plains? Why don&#8217;t YIMBYs live in dense walkable towns sprung up from the forests of Vermont? Why don&#8217;t people who hate smartphones/social media/AI live somewhere that bans all of those things?</p><p>My best guess is money.</p><p>If you&#8217;re sufficiently committed, you don&#8217;t need money. You can go out in the forest with your like-minded friends and probably starve (or, like the libertarians, <a href=\"https://www.amazon.com/Libertarian-Walks-Into-Bear-Liberate/dp/1541788516\">get eaten by bears</a>). But if you&#8217;re <em>insufficiently</em> committed, money is pretty helpful! Or at least this is what I gather from my own experience. There are three reasons the rationalists have somewhat succeeded at the community-building project when so many other movements have failed. </p><p>First, many of us worked in tech, and so ended out naturally gathering in the SF Bay Area without having to explicitly coordinate on it. We didn&#8217;t even have to take less-than-maximally lucrative jobs, because all the maximally-lucrative jobs for techies are in one place.</p><p>Second, some of us had enough money to live where we wanted (which turned out to be next to each other) and to cooperate to fund community projects.</p><p>Third, some of us made enough money to support other people who were working part-time or full-time on community building. Some of this looked like hiring them for community-building positions, but more often it was being able to afford family/housing structures where not everyone had to have an income-maximizing job at all times.</p><p>If we had even more money, we could do even better. Occasionally we fantasize about going further in the Amish or Free State direction. There are lots of reasons it doesn&#8217;t happen, but the main ones are money (building towns is expensive) and jobs (not everyone can work remotely). There&#8217;s some sense in which we&#8217;re being weak here - the Amish are very poor, and just sort of take the plunge and do it anyway. But keeping our level of weakness fixed, more money would help.</p><p>Why care about any of this?</p><p>I often see people whose politics center around tight-knit community make fun of those whose politics center around material abundance. But these are potentially complementary goals. The more material abundance we have, the better we can be at having tight-knit communities.</p><p>(yes, admittedly this is the opposite of how things usually work - some peasant village in medieval England had a tighter community than Malibu Beach or the Hamptons. I guess I would claim that &#8220;so poor you can&#8217;t leave&#8221; and &#8220;so rich you can be wherever you want&#8221; are two different strategies, and liberalism is more suited to the latter.)</p><p>I also see people say that if we avoid paperclipping, technofeudalism, and the other obvious ways a technological singularity could go wrong, the next thing we&#8217;ll have to worry about is some kind of crisis of meaning, where we all sit back and collect UBI and consume slop in a spiritual wasteland.</p><p>The optimistic perspective is that if this is so bad, what&#8217;s to stop you from joining the Amish? Or some sort of pseudo-Amish who live in an eternal 1990s? Or your own Amish-inspired sect who have whatever set of technological and social relations <em>you</em> think are optimal? </p><p>And the obvious counter is: there&#8217;s also nothing to stop people from doing that now. But they don&#8217;t. So whatever mysterious force prevents it now will continue to prevent it after the singularity.</p><p>But I think that force is just economics. Most people have to work a normal job, which prevents them from running off to Hypothetical Amish Country. Replace that with post-singularity economic relations - maybe UBI, maybe something else - and new options become available.</p>"
            ],
            "link": "https://www.astralcodexten.com/p/should-strong-gods-bet-on-gdp",
            "publishedAt": "2025-08-05",
            "source": "SlateStarCodex",
            "summary": "<p>Francis Fukuyama is on Substack; last month he wrote <a href=\"https://www.persuasion.community/p/liberalism-needs-community\">Liberalism Needs Community</a>. As always, read the whole thing and don&#8217;t trust my summary, but the key point is:</p><blockquote><p>According to R. R. Reno, editor of the magazine <em>First Things</em>, the liberal project of the past three generations has sought to weaken the &#8220;<a href=\"https://www.regnery.com/9781684512690/return-of-the-strong-gods/\">strong Gods</a>&#8221; of populism, nationalism, and religion that were held to be the drivers of the bloody conflicts of the early 20<sup>th</sup> century. Those gods are now returning, and are present in the politics of both the progressive left and far right&#8212;particularly the right, which is characterized today by demands for strong national identities or religious foundations for national communities.</p><p>However, there is a cogent liberal response to the charge that liberalism undermines community. The problem is that, just as in the 1930s, that response has not been adequately articulated by the defenders of liberalism. Liberalism is not intrinsically opposed to community; indeed, there is a version of liberalism that encourages the flourishing of strong community and human virtue. That community emerges through the development of a strong and well-organized civil society, where individuals freely choose to bond with other like-minded individuals to seek common ends. People are",
            "title": "Should Strong Gods Bet On GDP?"
        },
        {
            "content": [
                "<span class=\"thumbnail\"><img alt=\"\" class=\"attachment-thumbnail size-thumbnail wp-post-image\" height=\"108\" src=\"https://content.wolfram.com/sites/43/2025/08/icon-14.3-v2.png\" width=\"128\" /></span>\n<div class=\"inline-table-of-contents\">\n<div class=\"grid cols-2 heirs-width-1-2 cols-1__600 heirs-width-full__600\">\n<div class=\"left\">\n<div><a href=\"https://writings.stephenwolfram.com/2025/08/new-features-everywhere-launching-version-14-3-of-wolfram-language-mathematica/#this-is-a-big-release\"><span></span><span>This Is a Big Release</a></div>\n<div><a href=\"https://writings.stephenwolfram.com/2025/08/new-features-everywhere-launching-version-14-3-of-wolfram-language-mathematica/#going-dark-dark-mode-arrives\"><span></span><span>Going Dark: Dark Mode Arrives</a></div>\n<div><a href=\"https://writings.stephenwolfram.com/2025/08/new-features-everywhere-launching-version-14-3-of-wolfram-language-mathematica/#how-does-it-relate-to-ai-connecting-with-the-agentic-world\"><span></span><span>How Does It Relate to AI? Connecting with the Agentic World</a></div>\n<div><a href=\"https://writings.stephenwolfram.com/2025/08/new-features-everywhere-launching-version-14-3-of-wolfram-language-mathematica/#just-put-a-fit-on-that\"><span></span><span>Just Put a Fit on That!</a></div>\n<div><a href=\"https://writings.stephenwolfram.com/2025/08/new-features-everywhere-launching-version-14-3-of-wolfram-language-mathematica/#maps-become-more-beautiful\"><span></span><span>Maps Become More Beautiful</a></div>\n<div><a href=\"https://writings.stephenwolfram.com/2025/08/new-features-everywhere-launching-version-14-3-of-wolfram-language-mathematica/#a-better-red-introducing-new-named-colors\"><span></span><span>A Better Red: Introducing New Named Colors</a></div>\n<div><a href=\"https://writings.stephenwolfram.com/2025/08/new-features-everywhere-launching-version-14-3-of-wolfram-language-mathematica/#more-spiffing-up-of-graphics\"><span></span><span>More Spiffing Up of Graphics</a></div>\n<div><a href=\"https://writings.stephenwolfram.com/2025/08/new-features-everywhere-launching-version-14-3-of-wolfram-language-mathematica/#non-commutative-algebra\"><span></span><span>Non-commutative Algebra</a></div>\n<div><a href=\"https://writings.stephenwolfram.com/2025/08/new-features-everywhere-launching-version-14-3-of-wolfram-language-mathematica/#draw-on-that-surface-the-visual-annotation-of-regions\"><span></span><span>Draw on That Surface: The Visual Annotation of Regions</a></div>\n<div><a href=\"https://writings.stephenwolfram.com/2025/08/new-features-everywhere-launching-version-14-3-of-wolfram-language-mathematica/#curvature-computation--visualization\"><span></span><span>Curvature Computation &#038; Visualization</a></div>\n<div><a href=\"https://writings.stephenwolfram.com/2025/08/new-features-everywhere-launching-version-14-3-of-wolfram-language-mathematica/#geodesics--path-planning\"><span></span><span>Geodesics &#038; Path Planning</a></div>\n<div><a href=\"https://writings.stephenwolfram.com/2025/08/new-features-everywhere-launching-version-14-3-of-wolfram-language-mathematica/#geometry-from-subdivision\"><span></span><span>Geometry from Subdivision</a></div>\n<div><a href=\"https://writings.stephenwolfram.com/2025/08/new-features-everywhere-launching-version-14-3-of-wolfram-language-mathematica/#fix-that-mesh\"><span></span><span>Fix That Mesh!</a></div>\n<div><a href=\"https://writings.stephenwolfram.com/2025/08/new-features-everywhere-launching-version-14-3-of-wolfram-language-mathematica/#color-that-moleculeand-more\"><span></span><span>Color That Molecule\u2014and More</a></div>\n<div><a href=\"https://writings.stephenwolfram.com/2025/08/new-features-everywhere-launching-version-14-3-of-wolfram-language-mathematica/#the-proteins-get-foldedlocally\"><span></span><span>The Proteins Get Folded\u2014Locally</a></div>\n<div><a href=\"https://writings.stephenwolfram.com/2025/08/new-features-everywhere-launching-version-14-3-of-wolfram-language-mathematica/#will-that-engineering-system-actually-work\"><span></span><span>Will That Engineering System Actually Work?</a></div>\n<div><a href=\"https://writings.stephenwolfram.com/2025/08/new-features-everywhere-launching-version-14-3-of-wolfram-language-mathematica/#smoothing-our-control-system-workflows\"><span></span><span>Smoothing Our Control System Workflows</a></div>\n</div>\n<div class=\"right\">\n<div><a href=\"https://writings.stephenwolfram.com/2025/08/new-features-everywhere-launching-version-14-3-of-wolfram-language-mathematica/#going-hyperbolic-in-graph-layout\"><span></span><span>Going Hyperbolic in Graph Layout</a></div>\n<div><a href=\"https://writings.stephenwolfram.com/2025/08/new-features-everywhere-launching-version-14-3-of-wolfram-language-mathematica/#the-latest-in-calculus-hilbert-transforms-lommel-functions\"><span></span><span>The Latest in Calculus: Hilbert Transforms, Lommel Functions</a></div>\n<div><a href=\"https://writings.stephenwolfram.com/2025/08/new-features-everywhere-launching-version-14-3-of-wolfram-language-mathematica/#filling-in-more-in-the-world-of-matrices\"><span></span><span>Filling in More in the World of Matrices</a></div>\n<div><a href=\"https://writings.stephenwolfram.com/2025/08/new-features-everywhere-launching-version-14-3-of-wolfram-language-mathematica/#with--goes-multi-argument\"><span></span><span>With[ ] Goes Multi-argument</a></div>\n<div><a href=\"https://writings.stephenwolfram.com/2025/08/new-features-everywhere-launching-version-14-3-of-wolfram-language-mathematica/#cyclic--and-cyclic-lists\"><span></span><span>Cyclic[ ] and Cyclic Lists</a></div>\n<div><a href=\"https://writings.stephenwolfram.com/2025/08/new-features-everywhere-launching-version-14-3-of-wolfram-language-mathematica/#new-in-tabular\"><span></span><span>New in Tabular</a></div>\n<div><a href=\"https://writings.stephenwolfram.com/2025/08/new-features-everywhere-launching-version-14-3-of-wolfram-language-mathematica/#tabular-styling\"><span></span><span>Tabular Styling</a></div>\n<div><a href=\"https://writings.stephenwolfram.com/2025/08/new-features-everywhere-launching-version-14-3-of-wolfram-language-mathematica/#semantic-ranking-textual-feature-extraction-and-all-that\"><span></span><span>Semantic Ranking, Textual Feature Extraction and All That</a></div>\n<div><a href=\"https://writings.stephenwolfram.com/2025/08/new-features-everywhere-launching-version-14-3-of-wolfram-language-mathematica/#compiled-functions-that-can-pause-and-resume\"><span></span><span>Compiled Functions That Can Pause and Resume</a></div>\n<div><a href=\"https://writings.stephenwolfram.com/2025/08/new-features-everywhere-launching-version-14-3-of-wolfram-language-mathematica/#faster-smoother-encapsulated-external-computation\"><span></span><span>Faster, Smoother Encapsulated External Computation</a></div>\n<div><a href=\"https://writings.stephenwolfram.com/2025/08/new-features-everywhere-launching-version-14-3-of-wolfram-language-mathematica/#notebooks-into-presentations-the-aspect-ratio-challenge-solved\"><span></span><span>Notebooks into Presentations: the Aspect Ratio Challenge Solved</a></div>\n<div><a href=\"https://writings.stephenwolfram.com/2025/08/new-features-everywhere-launching-version-14-3-of-wolfram-language-mathematica/#yet-more-user-interface-polishing\"><span></span><span>Yet More User Interface Polishing</a></div>\n<div><a href=\"https://writings.stephenwolfram.com/2025/08/new-features-everywhere-launching-version-14-3-of-wolfram-language-mathematica/#markdown\"><span></span><span>Markdown!</a></div>\n<div><a href=\"https://writings.stephenwolfram.com/2025/08/new-features-everywhere-launching-version-14-3-of-wolfram-language-mathematica/#new-in-web-documentation-navigation-sidebar\"><span></span><span>New in Web Documentation: Navigation Sidebar</a></div>\n<div><a href=\"https://writings.stephenwolfram.com/2025/08/new-features-everywhere-launching-version-14-3-of-wolfram-language-mathematica/#and-even-more\"><span></span><span>And Even More&#8230;</a></div>\n</div>\n</div>\n</div>\n<h2 id=\"this-is-a-big-release\">This Is a Big Release</h2>\n<p><a href=\"https://writings.stephenwolfram.com/2025/01/launching-version-14-2-of-wolfram-language-mathematica-big-data-meets-computation-ai/\">Version 14.2 launched on January 23 of this year.</a> Now, today, just over six months later, we\u2019re launching Version 14.3. And despite its modest .x designation, it\u2019s a big release, with lots of important new and updated functionality, particularly in core areas of the system.</p>\n<p>I\u2019m particularly pleased to be able to report that in this release we\u2019re delivering an unusually large number of long-requested features. Why didn\u2019t they come sooner? Well, they were hard\u2014at least to build to our standards. But now they\u2019re here, ready for everyone to use.</p>\n<p>Those who\u2019ve been following our livestreamed software design reviews (42 hours of them since Version 14.2) may get some sense of the effort we put into getting the design of things right. And in fact we\u2019ve been consistently putting in that kind of effort now for nearly four decades\u2014ever since we started developing <a href=\"https://www.wolfram.com/mathematica/scrapbook/\">Version 1.0</a>. And the result is something that I think is completely unique in the software world\u2014a system that is consistent and coherent through and through, and that has maintained compatibility for 37 years.<span id=\"more-68657\"></span></p>\n<p>It\u2019s a very big system now, and even I sometimes forget some of the amazing things it can do. But what now routinely helps me with that is our <a href=\"https://writings.stephenwolfram.com/2024/12/useful-to-the-point-of-being-revolutionary-introducing-wolfram-notebook-assistant/\">Notebook Assistant</a>, released late last year. If I\u2019m trying to figure out how to do something, I\u2019ll just type some vague description of what I want into the Notebook Assistant. The Notebook Assistant is then remarkably good at \u201ccrispening up\u201d what I\u2019m asking, and producing relevant pieces of <a href=\"https://www.wolfram.com/language/\">Wolfram Language</a> code. </p>\n<p>Often I was too vague for that code to be exactly what I want. But it almost always puts me on the right track, and with small modifications ends up being exactly what I need. </p>\n<p>It\u2019s a very good workflow, made possible by combining the latest AI with the unique characteristics of the Wolfram Language. I ask something vague. The Notebook Assistant gives me precise code. But the crucial thing is that the code isn\u2019t programming language code, it\u2019s Wolfram Language <a href=\"https://writings.stephenwolfram.com/2019/05/what-weve-built-is-a-computational-language-and-thats-very-important/\">computational language code</a>. It\u2019s code that\u2019s specifically intended to be read by humans and to represent the world computationally at as high a level as possible. The AI is going to behave in the <a href=\"https://writings.stephenwolfram.com/2024/03/can-ai-solve-science/\">kind of heuristic way that AIs do</a>. But when you pick out the Wolfram Language code you want, you get something precise that you can build on, and rely on.</p>\n<p>It\u2019s amazing how important the design consistency of the Wolfram Language is in so many ways. It\u2019s what allows the different facets of the language to interoperate so smoothly. It\u2019s what makes it easy to learn new areas of the language. And, these days, it\u2019s also what makes it easy for AIs to use the language well\u2014calling on it as a tool much like humans do.</p>\n<p>The fact that the Wolfram Language is so consistent in its design\u2014and has so much built into it\u2014has another consequence too: it means that it\u2019s easy to add to it. And over the last 6 years, a rather staggering 3200+ add-on functions have been published in the <a href=\"https://resources.wolframcloud.com/FunctionRepository\">Wolfram Function Repository</a>. And, yes, quite a few of these functions may end up developing into full, built-in functions, though sometimes a decade or more hence. But here and now the Notebook Assistant knows about them in their current form\u2014and can automatically show you where they might fit into things you\u2019re doing.</p>\n<p>OK, but let\u2019s get back to Version 14.3. Where there\u2019s a lot to talk about&#8230;</p>\n<h2 id=\"going-dark-dark-mode-arrives\">Going Dark: Dark Mode Arrives</h2>\n<p>I started using computers with screens in 1976. And back then every screen was black, and the text on it was white. In 1982, when \u201cworkstation\u201d computers came out, it switched around, and I started using displays that looked more like printed pages, with black text on white backgrounds. And that was the usual way things worked\u2014for several decades. Then, a little more than five years ago, \u201cdark mode\u201d started to be popular\u2014and one was back to 1970s-style displays, of course now with full color, at much higher resolution, etc. We\u2019ve had \u201cdark mode styles\u201d available in notebooks for a long time. But now, in Version 14.3, we have full support for dark mode. And if you set your system to Dark Mode, in Version 14.3 all notebooks will by default automatically display in dark mode: </p>\n<p><img alt=\"\" height=\"332\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08022025darkimg1.png\" title=\"\" width=\"300\" /></p>\n<p>You might think: isn\u2019t it kinda trivial to set up dark mode? Don\u2019t you just have to change the background to black, and text to white? Well, actually, there\u2019s a lot, lot more to it. And in the end it\u2019s a rather complex user interface\u2014and algorithmic\u2014challenge, that I think we\u2019ve now solved very nicely in Version 14.3. </p>\n<p>Here\u2019s a basic question: what should happen to a plot when you go to dark mode? You want the axes to flip to white, but you want the curves to keep their colors (otherwise, what would happen to text that refers to curves by color?). And that\u2019s exactly what happens in Version 14.3:</p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"254\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08022025darkimg2.png\" title=\"\" width=\"410\" /> </div>\n</div>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"298\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08022025darkimg3.png\" title=\"\" width=\"620\" /> </div>\n</div>\n<p><span></p>\n<p>Needless to say, one tricky point is that the colors of the curves have to be chosen so they\u2019ll look good in both light and dark mode. And actually in <a href=\"https://writings.stephenwolfram.com/2025/01/launching-version-14-2-of-wolfram-language-mathematica-big-data-meets-computation-ai/#brightening-our-colors-spiffing-up-for-2025\">Version 14.2</a>, when we \u201cspiffed up\u201d our default colors for plots, we did that in part precisely in anticipation of dark mode.</p>\n<p>In Version 14.3 (as we\u2019ll discuss <a href=\"https://writings.stephenwolfram.com/2025/08/new-features-everywhere-launching-version-14-3-of-wolfram-language-mathematica/#more-spiffing-up-of-graphics\">below</a>) we\u2019ve continued spiffing up graphics colors, covering lots of tricky cases, and always setting things up to cover dark mode as well as light:</p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"313\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08022025darkimg4A.png\" title=\"\" width=\"604\" /> </div>\n</div>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"358\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08022025darkimg5.png\" title=\"\" width=\"620\" /> </div>\n</div>\n<p><span></p>\n<p>But graphics generated by computation aren\u2019t the only kind of thing affected by dark mode. There are also, for example, endless user interface elements that all have to be adapted to look good in dark mode. In all, there are thousands of colors affected, all needing to be dealt with in a consistent and aesthetic way. And to do this, we\u2019ve ended up inventing a whole range of methods and algorithms (which we\u2019ll eventually make externally available as a paclet). </p>\n<p>And the result, for example, is that something like the notebook can essentially automatically be configured to work in dark mode:</p>\n<p><img alt=\"\" height=\"123\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08022025darkimg6.png\" title=\"\" width=\"620\" /></p>\n<p>But what\u2019s happening underneath? Needless to say, there\u2019s a symbolic representation that\u2019s involved. Normally, you specify a color as, for example, <tt>RGBColor[1,0,0]</tt>. But in Version 14.3, you can instead use a symbolic representation like:</p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"46\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08022025darkimg7.png\" title=\"\" width=\"293\" /> </div>\n</div>\n<p><span></p>\n<p>In light mode, this will display as red; in dark mode, pink:</p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"50\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08022025darkimg8.png\" title=\"\" width=\"404\" /> </div>\n</div>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"94\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08022025darkimg9.png\" title=\"\" width=\"620\" /> </div>\n</div>\n<p><span></p>\n<p>If you just give a single color in <tt><a href=\"http://reference.wolfram.com/language/ref/LightDarkSwitched.html\">LightDarkSwitched</a></tt>, our automatic algorithms will be used, in this case producing in dark mode a pinkish color:</p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"50\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08022025darkimg10.png\" title=\"\" width=\"365\" /> </div>\n</div>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"94\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08022025darkimg11.png\" title=\"\" width=\"620\" /> </div>\n</div>\n<p><span></p>\n<p>This specifies the dark mode color, automatically deducing an appropriate corresponding light mode color:</p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"94\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08022025darkimg12.png\" title=\"\" width=\"620\" /> </div>\n</div>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"50\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08022025darkimg13.png\" title=\"\" width=\"464\" /> </div>\n</div>\n<p><span></p>\n<p>But what if you don\u2019t want to explicitly insert <tt>LightDarkSwitched</tt> around every color you\u2019re using? (For example, say you already have a large codebase full of colors.) Well, then you can use the new style option <tt><a href=\"http://reference.wolfram.com/language/ref/LightDarkAutoColorRules.html\">LightDarkAutoColorRules</a></tt> to specify more globally how you want to switch colors. So, for example, this says to do automatic light-dark switching for the \u201clisted colors\u201d (here just <tt><a href=\"http://reference.wolfram.com/language/ref/Blue.html\">Blue</a></tt>) but not for others (e.g. <tt><a href=\"http://reference.wolfram.com/language/ref/Red.html\">Red</a></tt>):</p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"132\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08022025darkimg14.png\" title=\"\" width=\"600\" /> </div>\n</div>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"175\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08022025darkimg15.png\" title=\"\" width=\"620\" /> </div>\n</div>\n<p><span></p>\n<p>You can also use <tt>LightDarkAutoColorRules</tt> <img alt=\" \" height=\"13\" src=\"https://content.wolfram.com/sites/43/2025/07/swRCA.png\" title=\" \" width=\"13\" /> <tt>All</tt> which uses our automatic switching algorithms for all colors:</p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"130\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08022025darkimg16.png\" title=\"\" width=\"600\" /> </div>\n</div>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"174\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08022025darkimg17.png\" title=\"\" width=\"620\" /> </div>\n</div>\n<p><span></p>\n<p>And then there\u2019s the convenient <tt>LightDarkAutoColorRules</tt> <img alt=\" \" height=\"13\" src=\"https://content.wolfram.com/sites/43/2025/07/swRCA.png\" title=\" \" width=\"13\" /> <tt>\"NonPlotColors\"</tt> which says to do automatic switching, but only for colors that aren\u2019t our default plot colors, which, as we discussed above, are set up to work unchanged in both light and dark mode. </p>\n<p>There are many, many subtleties to all this. As one example, in Version 14.3 we\u2019ve updated many functions to produce light-dark switched colors. But if those colors were stored in a notebook using <tt>LightDarkSwitched</tt>, then if you took that notebook and tried to view it with an earlier version those colors wouldn\u2019t show up (and you\u2019d get error indications). (As it happens, we already quietly introduced <tt>LightDarkSwitched</tt> in <a href=\"https://writings.stephenwolfram.com/2025/01/launching-version-14-2-of-wolfram-language-mathematica-big-data-meets-computation-ai/#user-interface-tune-ups\">Version 14.2</a>, but in earlier versions you\u2019d be out of luck.) So how did we deal with this backward compatibility for light-dark switched colors our functions produce? Well, we don\u2019t in fact store these colors in notebook expressions using <tt>LightDarkSwitched</tt>. Instead, we just store the colors in ordinary <tt>RGBColor</tt> etc. form, but the actual r, g, b values are numbers that have their \u201cswitched versions\u201d steganographically encoded in high-order digits. Earlier versions just read this as a single color, imperceptibly adjusted from what it usually is; Version 14.3 reads it as a light-dark switched color.</p>\n<p>We\u2019ve gone to a lot of effort to handle dark mode within our notebooks. But operating systems also have ways of handling dark mode. And sometimes you just want to have colors that follow the ones in your operating system. In Version 14.3 we\u2019ve added <tt><a href=\"http://reference.wolfram.com/language/ref/SystemColor.html\">SystemColor</a></tt> to do this. So, for example, here we say we want the background inside a frame to follow\u2014in both light and dark mode\u2014the color your operating system is using for tooltips:</p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"55\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08022025darkimg18.png\" title=\"\" width=\"491\" /> </div>\n</div>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"99\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08022025darkimg19.png\" title=\"\" width=\"620\" /> </div>\n</div>\n<p><span></p>\n<p>One thing we haven\u2019t explicitly mentioned yet is how textual content in notebooks is handled in dark mode. Black text is (obviously) rendered in white in dark mode. But what about section headings, or, for that matter, entities? </p>\n<p><img alt=\"\" height=\"21\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08022025darkimg20.png\" title=\"\" width=\"86\" /><br />\n<img alt=\"\" height=\"66\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08022025darkimg21.png\" title=\"\" width=\"620\" /></p>\n<p>Well, they use different colors in light and dark mode. So how can you use those colors in your own programs? The answer is that you can use <tt><a href=\"http://reference.wolfram.com/language/ref/ThemeColor.html\">ThemeColor</a></tt>. <tt>ThemeColor</tt> is actually something we introduced in <a href=\"https://writings.stephenwolfram.com/2025/01/launching-version-14-2-of-wolfram-language-mathematica-big-data-meets-computation-ai/#user-interface-tune-ups\">Version 14.2</a>, but it\u2019s part of a whole framework that we\u2019re progressively building out in successive versions. And the idea is that <tt>ThemeColor</tt> allows you to access \u201ctheme colors\u201d associated with particular \u201cthemes\u201d. So, for example, there are <tt>\"Accent1\"</tt>, etc. theme colors that\u2014in a particular blend\u2014are what\u2019s used to get the color for the <tt>\"Section\"</tt> style. And with <tt>ThemeColor</tt> you can access these colors. So, for example, here is text in the <tt>\"Accent3\"</tt> theme color:</p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"50\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08022025darkimg22.png\" title=\"\" width=\"358\" /> </div>\n</div>\n<p><span></p>\n<p>And, yes, it switches in dark mode:</p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"94\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08022025darkimg23.png\" title=\"\" width=\"620\" /> </div>\n</div>\n<p><span></p>\n<p>Alright, so we\u2019ve discussed all sorts of details of how light and dark mode work. But how do you determine whether a particular notebook should be in light or dark mode? Well, usually you don\u2019t have to, because it\u2019ll get switched automatically, following whatever your overall system settings are. </p>\n<p>But if you want to explicitly lock in light or dark mode for a given notebook, you can do this with the <img alt=\"\" height=\"25\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08022025darkimg24.png\" style=\"vertical-align: bottom; margin-top: 2px; margin-bottom: 2px;\" width=\"25\" /> button in the notebook toolbar. And you can also do this programmatically (or in the Wolfram System preferences) using the <tt><a href=\"https://reference.wolfram.com/language/ref/LightDark.html\">LightDark</a></tt> option.</p>\n<p>So, OK, now we support dark mode. So&#8230; will I turn the clock back for myself by 45 years and return to using dark mode for most of my work (which, needless to say, is done in Wolfram Language)? Dark mode in <a href=\"https://www.wolfram.com/notebooks/\">Wolfram Notebooks</a> looks so nice, I think I just might&#8230;</p>\n<h2 id=\"how-does-it-relate-to-ai-connecting-with-the-agentic-world\">How Does It Relate to AI? Connecting with the Agentic World</h2>\n<p>In some ways the whole story of the Wolfram Language is about \u201cAI\u201d. It\u2019s about automating as much as possible, so you (as a human) just have to \u201csay what you want\u201d, and then the system has a whole tower of automation that executes it for you. Of course, the big idea of the Wolfram Language is to provide the best way to \u201csay what you want\u201d\u2014the best way to formalize your thoughts in computational terms, both so you can understand them better, and so your computer can go as far as it needs to work them out. Modern <a href=\"https://writings.stephenwolfram.com/2023/02/what-is-chatgpt-doing-and-why-does-it-work/\">\u201cpost-ChatGPT\u201d</a> AI has been particularly important in adding a thicker \u201clinguistic user interface\u201d for all this. In <a href=\"https://www.wolframalpha.com/\">Wolfram|Alpha</a> we pioneered natural language understanding as a front end to computation; modern LLMs extend that to let you have whole conversations in natural language. </p>\n<p>As I\u2019ve discussed at some length elsewhere, what the LLMs are good at is rather different from what the Wolfram Language is good at. At some level LLMs can do the kinds of things unaided brains can also do (albeit sometimes on a larger scale, faster, etc.). But when it comes to raw computation (and precise knowledge) that\u2019s not what LLMs (or brains) do well. But of course we know a very good solution to that: just have the LLM use Wolfram Language (and Wolfram|Alpha) as a tool. And indeed <a href=\"https://writings.stephenwolfram.com/2023/01/wolframalpha-as-the-way-to-bring-computational-knowledge-superpowers-to-chatgpt/\">within a few months</a> of the release of ChatGPT, we had set up ways to let LLMs call our technology as a tool. We\u2019ve been developing ever better ways to have that happen\u2014and indeed we\u2019ll have a major release in this area soon. </p>\n<p>It\u2019s popular these days to talk about \u201cAI agents\u201d that \u201cjust go off and do useful things\u201d. At some level the Wolfram Language (and Wolfram|Alpha) can be thought of as \u201cuniversal agents\u201d, able to do the full range of \u201ccomputational things\u201d (as well as having connectors to an immense number of external systems in the world). (Yes, Wolfram Language can send email, browse webpages\u2014and \u201cactuate\u201d lots of other things in the world\u2014and it\u2019s been able to do these things for decades.) And if one builds the core of an agent out of LLMs, the Wolfram Language (and Wolfram|Alpha) serve as \u201cuniversal tools\u201d that the LLMs can call on.</p>\n<p>So although LLMs and the Wolfram Language do very different kinds of things, we\u2019ve been building progressively more elaborate ways for them to interact, and for one to be able to get the best from each of them. Back in <a href=\"https://writings.stephenwolfram.com/2023/05/the-new-world-of-llm-functions-integrating-llm-technology-into-the-wolfram-language/\">mid-2023</a> we introduced <tt><a href=\"http://reference.wolfram.com/language/ref/LLMFunction.html\">LLMFunction</a></tt>, etc. as a way to call LLMs from within the Wolfram Language. Then we introduced <tt><a href=\"http://reference.wolfram.com/language/ref/LLMTool.html\">LLMTool</a></tt> as a way to define <a href=\"https://writings.stephenwolfram.com/2023/06/llm-tech-and-a-lot-more-version-13-3-of-wolfram-language-and-mathematica/#llm-tech-comes-to-wolfram-language\">Wolfram Language tools that LLMs can call</a>. And in Version 14.3 we have another level in this integration: <tt><a href=\"http://reference.wolfram.com/language/ref/LLMGraph.html\">LLMGraph</a></tt>.</p>\n<p>The goal of <tt>LLMGraph</tt> is to let you define an \u201cagentic workflow\u201d directly in Wolfram Language, specifying a kind of \u201cplan graph\u201d whose nodes can give either LLM prompts or Wolfram Language code to run. In effect, <tt>LLMGraph</tt> is a generalization of our existing LLM functions\u2014with additional features such as the ability to run different parts in parallel, etc.</p>\n<p>Here\u2019s a very simple example: an <tt>LLMGraph</tt> that has just two nodes, which can be executed in parallel, one generating a haiku and one a limerick:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"113\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07302025agenticimg1.png\" title=\"\" width=\"506\" /> </div>\n<p><span></p>\n<p>We can apply this to a particular input; the result is an association (which here we format with <tt><a href=\"http://reference.wolfram.com/language/ref/Dataset.html\">Dataset</a></tt>):</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"192\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07302025agenticimg2.png\" title=\"\" width=\"614\" /> </div>\n<p><span></p>\n<p>Here\u2019s a slightly more complicated example\u2014a workflow for summarizing text that breaks the text into chunks (using a Wolfram Language function), then runs LLM functions in parallel to do the summarizing, then runs another LLM function to make a single summary from all the chunk summaries: </p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"265\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07302025agenticimg3.png\" title=\"\" width=\"589\" /> </div>\n<p><span></p>\n<p>This visualizes our <tt>LLMGraph</tt>:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"142\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07302025agenticimg4.png\" title=\"\" width=\"317\" /> </div>\n<p><span></p>\n<p>If we apply our <tt>LLMGraph</tt>, here to the US Constitution, we get a summary:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"113\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07302025agenticimg5.png\" title=\"\" width=\"607\" /> </div>\n<p><span></p>\n<p>There are lots of detailed options for <tt>LLMGraph</tt> objects. Here, for example, for our <tt>\"ChunkSummary\"</tt> we used a <tt>\"ListableLLMFunction\"</tt> key, which specifies that the <tt>LLMFunction </tt>prompt we give can be threaded over a list of inputs (here the list of chunks generated by the Wolfram Language code in <tt>\"TextChunk\"</tt>).</p>\n<p>An important feature of <tt>LLMGraph</tt> is its support for \u201ctest functions\u201d: nodes in the graph that do tests which determine whether another node needs to be run or not. Here\u2019s a slightly more complicated example (and, yes, the LLM prompts are necessarily a bit verbose):</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"332\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07302025agenticimg6.png\" title=\"\" width=\"669\" /> </div>\n<p><span></p>\n<p>This visualizes the LLM graph:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"173\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07302025agenticimg7.png\" title=\"\" width=\"273\" /> </div>\n<p><span></p>\n<p>Run it on a correct computation and it just returns the computation:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"43\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07302025agenticimg8.png\" title=\"\" width=\"201\" /> </div>\n<p><span></p>\n<p>But run it on an incorrect computation and it\u2019ll try to correct it, here correctly:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"112\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07302025agenticimg9.png\" title=\"\" width=\"201\" /> </div>\n<p><span></p>\n<p>This is a fairly simple example. But\u2014like everything in Wolfram Language\u2014<tt>LLMGraph</tt> is built to scale up as far as you need. In effect, it provides a new way of programming\u2014complete with asynchronous processing\u2014for the \u201cagentic\u201d LLM world. Part of the <a href=\"https://writings.stephenwolfram.com/2024/12/useful-to-the-point-of-being-revolutionary-introducing-wolfram-notebook-assistant/\">ongoing integration of Wolfram Language and AI capabilities</a>.</p>\n<h2 id=\"just-put-a-fit-on-that\">Just Put a Fit on That!</h2>\n<p>Let\u2019s say you plot some data (and, yes, we\u2019re using the new tabular data capabilities from <a href=\"https://writings.stephenwolfram.com/2025/01/launching-version-14-2-of-wolfram-language-mathematica-big-data-meets-computation-ai/#cleaning-data-for-tabular\">Version 14.2</a>):</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"255\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07302025fitaimg1.png\" title=\"\" width=\"633\" /> </div>\n<p><span></p>\n<p>What\u2019s really going on in this data? What are the trends? Often one finds oneself making some kind of fit to the data to try to find that out. Well, in Version 14.3 there\u2019s now a very easy way to do that: <tt><a href=\"http://reference.wolfram.com/language/ref/ListFitPlot.html\">ListFitPlot</a></tt>:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"254\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07302025fitaimg2.png\" title=\"\" width=\"651\" /> </div>\n<p><span></p>\n<p>This is a local fit to the data (as we\u2019ll discuss below). But what if we specifically want a global linear fit? There\u2019s a simple option for that:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"278\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07302025fitaimg3.png\" title=\"\" width=\"648\" /> </div>\n<p><span></p>\n<p>And here\u2019s an exponential fit:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"278\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07302025fitaimg4.png\" title=\"\" width=\"648\" /> </div>\n<p><span></p>\n<p>What we\u2019re plotting here are the original data points together with the fit. The option <tt><a href=\"http://reference.wolfram.com/language/ref/PlotFitElements.html\">PlotFitElements</a></tt> lets one select exactly what to plot. Like here we\u2019re saying to also plot (95% confidence) band curves:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"278\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07302025fitaimg5.png\" title=\"\" width=\"648\" /> </div>\n<p><span></p>\n<p>OK, so this is how one can visualize fits. But what about finding out what the fit actually was? Well, actually, we already had functions for doing that, like <tt><a href=\"http://reference.wolfram.com/language/ref/LinearModelFit.html\">LinearModelFit</a></tt> and <tt><a href=\"http://reference.wolfram.com/language/ref/NonlinearModelFit.html\">NonlinearModelFit</a></tt>. In Version 14.3, though, there\u2019s also the new <tt><a href=\"http://reference.wolfram.com/language/ref/LocalModelFit.html\">LocalModelFit</a></tt>:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"80\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07302025fitaimg7.png\" title=\"\" width=\"309\" /> </div>\n<p><span></p>\n<p>Like <tt>LinearModelFit</tt> etc. what this gives is a symbolic <tt><a href=\"http://reference.wolfram.com/language/ref/FittedModel.html\">FittedModel</a></tt> object\u2014which we can then, for example, plot:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"227\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07302025fitaimg8.png\" title=\"\" width=\"522\" /> </div>\n<p><span></p>\n<p><tt>LocalModelFit</tt> is a non-parametric fitting function that works by doing local polynomial regressions (LOESS). Another new function in Version 14.3 is <tt><a href=\"http://reference.wolfram.com/language/ref/KernelModelFit.html\">KernelModelFit</a></tt>, which fits to sums of basis function kernels:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"176\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07302025fitaimg10.png\" title=\"\" width=\"477\" /> </div>\n<p><span></p>\n<p>By default the kernels are Gaussian, and the number and width of them is chosen automatically. But here, for example, we\u2019re asking for 20 Cauchy kernels with width 10: </p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"177\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07302025fitaimg12.png\" title=\"\" width=\"631\" /> </div>\n<p><span></p>\n<p>What we just plotted is a best fit curve. But in Version 14.3 whenever we get a <tt>FittedModel</tt> we can ask not only for the best fit, but also for a fit with errors, represented by <tt><a href=\"http://reference.wolfram.com/language/ref/Around.html\">Around</a></tt> objects:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"48\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07302025fitaimg14.png\" title=\"\" width=\"395\" /> </div>\n<p><span></p>\n<p>We can plot this to show the best fit, along with (95% confidence) band curves:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"192\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07302025fitaimg16.png\" title=\"\" width=\"614\" /> </div>\n<p><span></p>\n<p>What this is showing is the best fit, together with the (\u201cstatistical\u201d) uncertainty of the fit. Another thing you can do is to show band curves not for the fit, but for all the original data:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"197\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07302025fitaimg18.png\" title=\"\" width=\"646\" /> </div>\n<p><span></p>\n<p><tt>ListFitPlot</tt> is specifically set up to generate plots that show fits. As we just saw, you can also get such plots by first explicitly finding fits, and then plotting them. But there\u2019s also another way to get plots that include fits, and that\u2019s by adding the option <tt><a href=\"http://reference.wolfram.com/language/ref/PlotFit.html\">PlotFit</a></tt> to \u201cordinary\u201d plotting functions. It\u2019s the very same <tt>PlotFit</tt> option that you can use in <tt>ListFitPlot</tt> to specify the type of fit to use. But in a function like <tt><a href=\"http://reference.wolfram.com/language/ref/ListPlot.html\">ListPlot</a></tt> it specifies to add a fit:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"235\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07302025fitaimg20.png\" title=\"\" width=\"362\" /> </div>\n<p><span></p>\n<p>A function like <tt><a href=\"http://reference.wolfram.com/language/ref/ListLinePlot.html\">ListLinePlot</a></tt> is set up to \u201cdraw a line through data\u201d, and with <tt>PlotFit</tt> (like with <tt><a href=\"http://reference.wolfram.com/language/ref/InterpolationOrder.html\">InterpolationOrder</a></tt>) you can tell it \u201cwhat line\u201d. Here it\u2019s a line based on a local model:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"237\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07302025fitaimg22.png\" title=\"\" width=\"366\" /> </div>\n<p><span></p>\n<p>It\u2019s also possible to do fits in 3D. And in Version 14.3, in analogy to <tt>ListFitPlot</tt> there\u2019s also <tt><a href=\"https://reference.wolfram.com/language/ref/ListFitPlot3D.html\">ListFitPlot3D</a></tt>, which fits a surface to a collection of 3D points:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"278\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07302025fitaimg24.png\" title=\"\" width=\"368\" /> </div>\n<p><span></p>\n<p>Here\u2019s what happens if we include confidence band surfaces:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"274\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07302025fitaimg26.png\" title=\"\" width=\"561\" /> </div>\n<p><span></p>\n<p>Functions like <tt><a href=\"http://reference.wolfram.com/language/ref/ListContourPlot.html\">ListContourPlot</a></tt> also allow fits\u2014and in fact it\u2019s sometimes better to show only the fit for a contour plot. For example, here\u2019s a \u201craw\u201d contour plot: </p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"248\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07302025fitaimg28.png\" title=\"\" width=\"272\" /> </div>\n<p><span></p>\n<p>And here\u2019s what we get if we plot not the raw data but a local model fit to the data:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"245\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07302025fitaimg30.png\" title=\"\" width=\"356\" /> </div>\n<p><span></p>\n<h2 id=\"maps-become-more-beautiful\">Maps Become More Beautiful</h2>\n<p>The world looks better now. Or, more specifically, in Version 14.3 we\u2019ve updated the styles and rendering we\u2019re using for maps:</p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"238\" src=\"https://content.wolfram.com/sites/43/2025/08/sw07282025mapsimg1A.png\" title=\"\" width=\"463\" /> </div>\n</div>\n<p>Needless to say, this is yet another place where we have to deal with dark mode. Here\u2019s the analogous image in dark mode:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"278\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025mapsimg2.png\" title=\"\" width=\"620\" /> </div>\n<p><span></p>\n<p>If we look at a smaller area, the \u201cterrain\u201d starts to get faded out:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"381\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07282025mapsimg3.png\" title=\"\" width=\"331\" /> </div>\n</p>\n<p>At the level of a city, roads are made prominent (and they\u2019re rendered in new, crisper colors in Version 14.3):</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"362\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07282025mapsimg4.png\" title=\"\" width=\"365\" /> </div>\n<p><span></p>\n<p>Zooming in further, we see more details:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"396\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07282025mapsimg5.png\" title=\"\" width=\"415\" /> </div>\n<p><span></p>\n<p>And, yes, we can get a satellite image too:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"403\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07282025mapsimg6.png\" title=\"\" width=\"626\" /> </div>\n<p><span></p>\n<p>Everything has a dark mode:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"472\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025mapsimg3.png\" title=\"\" width=\"620\" /> </div>\n<p><span></p>\n<p>An important feature of these maps is that they\u2019re all produced with resolution-independent vector graphics. This was a capability we first <a href=\"https://writings.stephenwolfram.com/2020/12/launching-version-12-2-of-wolfram-language-mathematica-228-new-functions-and-much-more/#new-in-geo\">introduced as an option in Version 12.2</a>, but in Version 14.3 we\u2019ve managed to make it efficient enough that we\u2019ve now set it as the default. </p>\n<p>By the way, in Version 14.3 not only can we render maps in dark mode, we can also get actual night-time satellite images:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"419\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07282025mapsimg8.png\" title=\"\" width=\"484\" /> </div>\n<p><span></p>\n<p>We\u2019ve worked hard to pick nice, crisp colors for our default maps. But sometimes you actually want the \u201cbase map\u201d to be quite bland, because what you really want to stand out is data you\u2019re plotting on the map. And so that\u2019s what happens by default in functions like <tt><a href=\"http://reference.wolfram.com/language/ref/GeoListPlot.html\">GeoListPlot</a></tt>:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"342\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07282025mapsimg9.png\" title=\"\" width=\"368\" /> </div>\n<p><span></p>\n<p>Mapmaking has endless subtleties, some of them mathematically quite complex. Something we finally solved in Version 14.3 is doing true spheroidal geometry on vector geometric data for maps. And a consequence of this is that we can now accurately render (and clip) even very stretched geographic features\u2014like Asia in this projection:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"346\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07282025mapsimg10.png\" title=\"\" width=\"372\" /> </div>\n<p><span></p>\n<p>Another new geographic function in Version 14.3 is <tt><a href=\"http://reference.wolfram.com/language/ref/GeoReposition.html\">GeoReposition</a></tt>\u2014which takes a geographic object and transforms its coordinates to move it to a different place on the Earth, preserving its size. So, for example, this shows rather clearly that\u2014with a particular shift and rotation\u2014Africa and South America geometrically fit together (suggesting continental drift):</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"316\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07282025mapsimg11.png\" title=\"\" width=\"642\" /> </div>\n<p><span></p>\n<p>And, yes, despite its appearance on Mercator projection maps, Greenland is not that big:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"322\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07282025mapsimg12.png\" title=\"\" width=\"639\" /> </div>\n<p><span></p>\n<p>And because in the Wolfram Language we always try to make things as general as possible, yes, you can do this \u201coff planet\u201d as well:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"414\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07282025mapsimg13.png\" title=\"\" width=\"583\" /> </div>\n<p><span></p>\n<h2 id=\"a-better-red-introducing-new-named-colors\">A Better Red: Introducing New Named Colors</h2>\n<p>\u201cI want to show it in red\u201d, one might say. But what exactly is red? Is it just pure <tt>RGBColor[1,0,0]</tt>, or something slightly different? More than two decades ago we introduced symbols like <tt><a href=\"http://reference.wolfram.com/language/ref/Red.html\">Red</a></tt> to stand for \u201cpure colors\u201d like <tt>RGBColor[1,0,0]</tt>. But in making nice-looking, \u201cdesigned\u201d images, one usually doesn\u2019t want those kinds of \u201cpure colors\u201d. And indeed, a zillion times I\u2019ve found myself wanting to slightly \u201ctweak that red\u201d to make it look better. So in Version 14.3 we\u2019re introducing the new concept of \u201cstandard colors\u201d: for example <tt><a href=\"http://reference.wolfram.com/language/ref/StandardRed.html\">StandardRed</a></tt> is a version of red that \u201clooks red\u201d, but is more \u201celegant\u201d than \u201cpure red\u201d:</p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"52\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025redimg1.png\" title=\"\" width=\"187\" /> </div>\n</div>\n<p>The difference is subtle, but important. For other colors it can be less subtle:</p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"47\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025redimg2.png\" title=\"\" width=\"375\" /> </div>\n</div>\n<p>Our new standard colors are picked so that they work well in both light and dark mode:</p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"92\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025redimg3.png\" title=\"\" width=\"620\" /> </div>\n</div>\n<p>They also work well not only as foreground colors, but also background colors:</p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"55\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025redimg4.png\" title=\"\" width=\"671\" /> </div>\n</div>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"79\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025redimg5.png\" title=\"\" width=\"430\" /> </div>\n</div>\n<p>They also are colors that have the same \u201ccolor weight\u201d, in the sense that\u2014like our default plot colors\u2014they\u2019re balanced in terms of emphasis. Oh, and they\u2019re also selected to go well together. </p>\n<p>Here\u2019s an array of all the colors for which we now have symbols (there are <tt><a href=\"http://reference.wolfram.com/language/ref/White.html\">White</a></tt>, <tt><a href=\"http://reference.wolfram.com/language/ref/Black.html\">Black</a></tt> and <tt><a href=\"http://reference.wolfram.com/language/ref/Transparent.html\">Transparent</a></tt> as well):</p>\n<p><img alt=\"\" height=\"200\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025redimg6.png\" title=\"\" width=\"620\" /></p>\n<p>In addition to the \u201cpure colors\u201d and \u201clight colors\u201d which we\u2019ve had for a long time, we\u2019ve not only now added \u201cstandard colors\u201d, but also \u201cdark colors\u201d. </p>\n<p>So now when you construct graphics, you can immediately get your colors to have a \u201cdesigner quality\u201d look just by using <tt>StandardRed</tt>, <tt><a href=\"http://reference.wolfram.com/language/ref/DarkRed.html\">DarkRed</a></tt>, etc. instead of plain old pure <tt>Red</tt>. </p>\n<p>The whole story of dark mode and light-dark switching introduces yet another issue in the specification of colors. Click any color swatch in a notebook, and you\u2019ll get an interactive color picker:</p>\n<p><img alt=\"\" height=\"246\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025redimg7.png\" title=\"\" width=\"260\" /></p>\n<p>But in Version 14.3 this color picker has been pretty much completely redesigned, both to handle light and dark modes, and generally to streamline the picking of colors. </p>\n<p>Previously you\u2019d by default have to pick colors with sliders: </p>\n<p><img alt=\"\" height=\"174\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025redimg8.png\" title=\"\" width=\"170\" /></p>\n<p>Now there\u2019s a much-easier-to-use color wheel, together with brightness and opacity sliders:</p>\n<p><img alt=\"\" height=\"246\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025redimg9.png\" title=\"\" width=\"170\" /></p>\n<p>If you want sliders, then you can ask for those too:</p>\n<p><img alt=\"\" height=\"164\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025redimg10.png\" title=\"\" width=\"182\" /></p>\n<p>But now you can choose different color spaces\u2014like <tt><a href=\"http://reference.wolfram.com/language/ref/Hue.html\">Hue</a></tt>, which makes the sliders more useful:</p>\n<p><img alt=\"\" height=\"162\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025redimg11.png\" title=\"\" width=\"180\" /></p>\n<p>What about light-dark switching? Well, the color picker now has this in its right-hand corner:</p>\n<p><img alt=\"\" height=\"38\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025redimg12.png\" title=\"\" width=\"90\" /></p>\n<p>Click it, and the color you get will be set up to automatically switch in light and dark mode:</p>\n<p><img alt=\"\" height=\"37\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025redimg13.png\" title=\"\" width=\"263\" /></p>\n<p>Selecting either <img alt=\"\" height=\"17\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025redimg14.png\" title=\"\" width=\"17\" /> or <img alt=\"\" height=\"17\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025redimg15.png\" title=\"\" width=\"17\" /> you get:</p>\n<p><img alt=\"\" height=\"248\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025redimg16.png\" title=\"\" width=\"344\" /></p>\n<p>In other words, in this case, the light mode color was explicitly picked, and the dark mode color was generated automatically. </p>\n<p>If you really want to have control over everything, you can use the color space menu for dark mode here, and pick not <tt><a href=\"http://reference.wolfram.com/language/ref/Automatic.html\">Automatic</a></tt>, but an explicit color space, and then pick a dark mode color manually in that color space.</p>\n<p>And, by the way, as another subtlety, if your notebook was in dark mode, things would be reversed, and you\u2019d instead by default be offered the opportunity to pick the dark mode color, and have the light mode color be generated automatically.</p>\n<h2 id=\"more-spiffing-up-of-graphics\">More Spiffing Up of Graphics</h2>\n<p><a href=\"https://writings.stephenwolfram.com/2025/01/launching-version-14-2-of-wolfram-language-mathematica-big-data-meets-computation-ai/\">Version 14.2</a> had all sorts of great new features. But one &#8220;little&#8221; enhancement that I see\u2014and appreciate\u2014every day is the &#8220;spiffing up&#8221; that we did of default colors for plots. Just replacing <img alt=\"\" height=\"14\" src=\"https://content.wolfram.com/sites/43/2025/07/oldblue.png\" title=\"\" width=\"14\" /> by <img alt=\"\" height=\"14\" src=\"https://content.wolfram.com/sites/43/2025/07/newblue.png\" title=\"\" width=\"14\" />, <img alt=\"\" height=\"14\" src=\"https://content.wolfram.com/sites/43/2025/07/oldyellow.png\" title=\"\" width=\"14\" /> by <img alt=\"\" height=\"14\" src=\"https://content.wolfram.com/sites/43/2025/07/newyellow.png\" title=\"\" width=\"14\" />, <img alt=\"\" height=\"14\" src=\"https://content.wolfram.com/sites/43/2025/07/oldgreen.png\" title=\"\" width=\"14\" /> by <img alt=\"\" height=\"14\" src=\"https://content.wolfram.com/sites/43/2025/07/newgreen.png\" title=\"\" width=\"14\" />, etc. instantly gave our graphics more &#8220;zing&#8221;, and generally made them look &#8220;spiffier&#8221;. So now in Version 14.3 we&#8217;ve continued this process, &#8220;spiffing up&#8221; default colors generated by all sorts of functions. </p>\n<p>For example, until <a href=\"https://writings.stephenwolfram.com/2025/01/launching-version-14-2-of-wolfram-language-mathematica-big-data-meets-computation-ai/#brightening-our-colors-spiffing-up-for-2025\">Version 14.2</a> the default colors for <tt><a href=\"http://reference.wolfram.com/language/ref/DensityPlot.html\">DensityPlot</a></tt> were</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"185\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025spiffingimg1.png\" title=\"\" width=\"417\" /> </div>\n<p><span></p>\n<p>but now \u201cwith more zing\u201d they\u2019re:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"192\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025spiffingimg2.png\" title=\"\" width=\"417\" /> </div>\n<p><span></p>\n<p>Another example\u2014of particular relevance to me, as a longtime explorer of cellular automata\u2014is an update to <tt><a href=\"http://reference.wolfram.com/language/ref/ArrayPlot.html\">ArrayPlot</a></tt>. By default, <tt>ArrayPlot</tt> uses gray levels for successive values (here just 0, 1, 2):</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"219\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025spiffingimg3.png\" title=\"\" width=\"552\" /> </div>\n<p><span></p>\n<p>But in Version 14.3, there\u2019s a new option setting\u2014<tt><a href=\"http://reference.wolfram.com/language/ref/ColorRules.html\">ColorRules</a></tt><tt><img alt=\"\" height=\"13\" src=\"https://content.wolfram.com/sites/43/2025/07/swRCA.png\" title=\"\" width=\"13\" />\"Colors\"</tt>\u2014that instead uses colors: </p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"254\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025spiffingimg4.png\" title=\"\" width=\"549\" /> </div>\n<p><span></p>\n<p>And, yes, it also works for larger numbers of values:</p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"179\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025spiffingimg1.png\" title=\"\" width=\"533\" /> </div>\n</div>\n<p><span></p>\n<p>As well as in dark mode:</p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"224\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025spiffingimg2.png\" title=\"\" width=\"620\" /> </div>\n</div>\n<p><span></p>\n<p>By the way, in Version 14.3 we\u2019ve also improved the handling of meshes\u2014so that they gradually fade out when there are more cells:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"229\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025spiffingimg3.png\" title=\"\" width=\"605\" /> </div>\n<p><span></p>\n<p>What about 3D? We\u2019ve changed the default even with just 0 and 1 to include a bit of color:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"303\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025spiffingimg8.png\" title=\"\" width=\"612\" /> </div>\n<p><span></p>\n<p>There are updates to colors (and other details of presentation) in many corners of the system. An example is proof objects. In <a href=\"https://writings.stephenwolfram.com/2025/01/launching-version-14-2-of-wolfram-language-mathematica-big-data-meets-computation-ai/\">Version 14.2</a>, this was a typical proof object:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"319\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025spiffingimg9.png\" title=\"\" width=\"564\" /> </div>\n<p><span></p>\n<p>Now in Version 14.3 it looks (we think) a bit more elegant:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"303\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025spiffingimg10.png\" title=\"\" width=\"564\" /> </div>\n<p><span></p>\n<p>In addition to colors, another significant update in Version 14.3 has to do with labeling in plots. Here\u2019s a feature space plot of images of country flags: </p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"356\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025spiffingimg11.png\" title=\"\" width=\"451\" /> </div>\n<p><span></p>\n<p>By default, some of the points are labeled, and some are not. The heuristics that are used try to put labels in empty spaces, and when there aren\u2019t enough (or labels would end up overlapping too much), the labels are just omitted. In <a href=\"https://writings.stephenwolfram.com/2025/01/launching-version-14-2-of-wolfram-language-mathematica-big-data-meets-computation-ai/#tabular-everywhere\">Version 14.2</a> the only choice was whether to have labels at all, or not. But now in Version 14.3 there\u2019s a new option <tt><a href=\"http://reference.wolfram.com/language/ref/LabelingTarget.html\">LabelingTarget</a></tt> that specifies what to aim for in adding labels.</p>\n<p>For example, with <tt>LabelingTarget<img alt=\"\" height=\"13\" src=\"https://content.wolfram.com/sites/43/2025/07/swRCA.png\" title=\"\" width=\"13\" />All</tt>, every point is labeled, even if that means there are labels that overlap points, or each other:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"375\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025spiffingimg12.png\" title=\"\" width=\"600\" /> </div>\n<p><span></p>\n<p><tt>LabelingTarget</tt> has a variety of convenient settings. An example is <tt>\"Dense\"</tt>:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"384\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025spiffingimg13.png\" title=\"\" width=\"640\" /> </div>\n<p><span></p>\n<p>You can also give a number, specifying the fraction of points that should be labeled:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"384\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025spiffingimg14.png\" title=\"\" width=\"595\" /> </div>\n<p><span></p>\n<p>If you want to get into more detail, you can give an association. Like here this specifies that the leaders for all labels should be purely horizontal or vertical, not diagonal: </p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"395\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025spiffingimg15.png\" title=\"\" width=\"486\" /> </div>\n<p><span></p>\n<p>The option <tt>LabelingTarget</tt> is supported in the full range of visualization functions that deal with points, both in 2D and 3D. Here\u2019s what happens in this case by default:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"325\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025spiffingimg16.png\" title=\"\" width=\"602\" /> </div>\n<p><span></p>\n<p>And here\u2019s what happens if we ask for \u201c20% coverage\u201d:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"349\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025spiffingimg17.png\" title=\"\" width=\"599\" /> </div>\n<p><span></p>\n<p>In Version 14.3 there are all sorts of new upgrades to our visualization capabilities, but there\u2019s also one (very useful) feature that one can think of as a \u201cdowngrade\u201d: the option <tt><a href=\"http://reference.wolfram.com/language/ref/PlotInteractivity.html\">PlotInteractivity</a></tt> that one can use to switch off interactivity in a given plot. For example, with <tt>PlotInteractivity<img alt=\"\" height=\"13\" src=\"https://content.wolfram.com/sites/43/2025/07/swRCA.png\" title=\"\" width=\"13\" />False</tt>, the bins in a histogram will never \u201cpop\u201d when you mouse over them. And this is useful if you want to ensure efficiency of large and complex graphics, or you\u2019re targeting your graphics for print, etc. where interactivity will never be relevant.</p>\n<h2 id=\"non-commutative-algebra\">Non-commutative Algebra</h2>\n<p>\u201cComputer algebra\u201d was one of the key features of <a href=\"https://www.wolfram.com/mathematica/scrapbook/\">Version 1.0</a> all the way back in 1988. Mainly that meant doing operations with polynomials, rational functions, etc.\u2014though of course our general symbolic language always allowed many generalizations to be made. But all the way back in <a href=\"https://www.wolfram.com/mathematica/scrapbook/\">Version 1.0</a> we had the symbol <tt><a href=\"http://reference.wolfram.com/language/ref/NonCommutativeMultiply.html\">NonCommutativeMultiply</a></tt> (typed as **) that was intended to represent a \u201cgeneral non-commutative form of multiplication\u201d. When we introduced it, it was basically just a placeholder, and more than anything else, it was \u201creserved for future expansion\u201d. Well, 37 years later, in Version 14.3, the algorithms are ready, and the future is here! And now you can finally do computation with <tt>NonCommutativeMultiply</tt>. And the results can be used not only for \u201cgeneral non-commutative multiplication\u201d but also for things like symbolic array simplification, etc. </p>\n<p>Ever since <a href=\"https://www.wolfram.com/mathematica/scrapbook/\">Version 1.0</a> you\u2019ve been able to enter <tt>NonCommutativeMultiply</tt> as <tt>**</tt>. And the first obvious change in Version 14.3 is that now <tt>**</tt> automatically turns into &#10683;. To support math with &#10683; there\u2019s now also <tt><a href=\"http://reference.wolfram.com/language/ref/GeneralizedPower.html\">GeneralizedPower</a></tt> which represents repeated non-commutative multiplication, and is displayed as a superscript with a little dot: <img alt=\"\" height=\"17\" src=\"https://content.wolfram.com/sites/43/2025/08/Screenshot-2025-08-05-at-2.31.39-4\u202fPM.png\" style=\"vertical-align: bottom; margin-top: 2px; margin-bottom: 3px;\" width=\"17\" />.</p>\n<p>OK, so what about doing operations on expressions containing &#10683;? In Version 14.3 there\u2019s <tt><a href=\"http://reference.wolfram.com/language/ref/NonCommutativeExpand.html\">NonCommutativeExpand</a></tt>:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"51\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025algebraimg1.png\" title=\"\" width=\"554\" /> </div>\n<p><span></p>\n<p>By doing this expansion we\u2019re getting a canonical form for our non-commutative polynomial. In this case, <tt><a href=\"http://reference.wolfram.com/language/ref/FullSimplify.html\">FullSimplify</a></tt> can simplify it</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"44\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025algebraimg2.png\" title=\"\" width=\"264\" /> </div>\n<p><span></p>\n<p>though in general there isn\u2019t a unique \u201cfactored\u201d form for non-commutative polynomials, and in some (fairly rare) cases the result can be different from what we started with. </p>\n<p>&#10683; represents a completely general no-additional-relations form of non-commutative multiplication. But there are many other forms of non-commutative multiplication that are useful. A notable example is . (<tt><a href=\"http://reference.wolfram.com/language/ref/Dot.html\">Dot</a></tt>). In Version 14.2 we introduced <tt><a href=\"http://reference.wolfram.com/language/ref/ArrayExpand.html\">ArrayExpand</a></tt> which operates on symbolic arrays:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"44\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025algebraimg3.png\" title=\"\" width=\"510\" /> </div>\n<p><span></p>\n<p>Now we have <tt>NonCommutativeExpand</tt>, which can be told to use <tt>Dot</tt> as its multiplication operation:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"56\" src=\"https://content.wolfram.com/sites/43/2025/08/sw07312025algebraimg5A.png\" title=\"\" width=\"499\" /> </div>\n<p><span></p>\n<p>The result looks different, because it\u2019s using <tt>GeneralizedPower</tt>. But we can use <tt>FullSimplify</tt> to check the equivalence:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"43\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025algebraimg6.png\" title=\"\" width=\"203\" /> </div>\n<p><span></p>\n<p>The algorithms we\u2019ve introduced around non-commutative multiplication now allow us to do more powerful symbolic array operations, like this piece of array simplification:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"48\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025algebraimg7.png\" title=\"\" width=\"538\" /> </div>\n<p><span></p>\n<p>How does it work? Well, at least in multivariate situations, it\u2019s using the non-commutative version of Gr\u00f6bner bases. Gr\u00f6bner bases are a core method in ordinary, commutative polynomial computation; in Version 14.3 we\u2019ve generalized them to the non-commutative case: </p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\">\n  <img alt=\"\" height=\"15\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025algebraimg8.png\" title=\"\" width=\"745\" />\n</div>\n<p><span></p>\n<p>To get a sense of what kind of thing is going on here, let\u2019s look at a simpler case:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"44\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025algebraimg9.png\" title=\"\" width=\"498\" /> </div>\n<p><span></p>\n<p>We can think of the input as giving a list of expressions that are assumed to be zero. And by including, for example, <em>a</em> &#10683; <em>b</em> \u2013 1 we\u2019re effectively asserting that <em>a</em> &#10683; <em>b</em> = 1, or, put another way, that <em>b</em> is a right inverse of <em>a</em>. So in effect we\u2019re saying here that <em>b</em> is a right inverse of <em>a</em>, and <em>c</em> is a left inverse. The Gr\u00f6bner basis that\u2019s output then also includes <em>b</em> \u2013 <em>c</em>, showing that the conditions we\u2019ve specified imply that <em>b</em> \u2013 <em>c</em> is zero, i.e. that <em>b</em> is equal to <em>c</em>.</p>\n<p>Non-commutative algebras show up all over the place, not only in math but also in physics (and particularly quantum physics). They can also be used to represent a symbolic form of functional programming. Like here we\u2019re collecting terms with respect to <em>f</em>, with the multiplication operation being function composition:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"52\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025algebraimg10.png\" title=\"\" width=\"620\" /> </div>\n<p><span></p>\n<p>In many applications of non-commutative algebra, it\u2019s useful to have the notion of a commutator:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"44\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025algebraimg11.png\" title=\"\" width=\"172\" /> </div>\n<p><span></p>\n<p>And, yes, we can check famous commutation relations, like ones from physics:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"44\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025algebraimg12.png\" title=\"\" width=\"569\" /> </div>\n<p><span></p>\n<p>(There\u2019s <tt><a href=\"https://reference.wolfram.com/language/ref/Anticommutator.html\">AntiCommutator</a></tt> as well.)</p>\n<p>A function like <tt>NonCommutativeExpand</tt> by default assumes that you\u2019re dealing with a non-commutative algebra in which addition is represented by + (<tt><a href=\"http://reference.wolfram.com/language/ref/Plus.html\">Plus</a></tt>), multiplication by &#10683; (<tt>NonCommutativeMultiply</tt>), and that 0 is the identity for +, and 1 for &#10683;. But by giving a second argument, you can tell <tt>NonCommutativeExpand</tt> that you want to use a different non-commutative algebra. <tt>{Dot, n}</tt>, for example, represents an algebra of <em>n</em>\u00d7<em>n</em> matrices, where the multiplication operation is . (<tt>Dot</tt>), and the identity, for example, is <em>n</em> (<tt><a href=\"https://reference.wolfram.com/language/ref/SymbolicIdentityArray.html\">SymbolicIdentityArray</a>[n]</tt>). <tt><a href=\"http://reference.wolfram.com/language/ref/TensorProduct.html\">TensorProduct</a></tt> represents an algebra of formal tensors, with <span style=\"font-size: 20px;\">&otimes;</span> (<tt>TensorProduct</tt>) as its multiplication operation. But in general you can define your own non-commutative algebra with <tt><a href=\"https://reference.wolfram.com/language/ref/NonCommutativeAlgebra.html\">NonCommutativeAlgebra</a></tt>:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"62\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025algebraimg13.png\" title=\"\" width=\"556\" /> </div>\n<p><span></p>\n<p>Now we can expand an expression assuming it\u2019s an element of this algebra (note the tiny <em>m</em>\u2019s in the generalized \u201c<em>m</em> powers\u201d):</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"117\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025algebraimg14.png\" title=\"\" width=\"627\" /> </div>\n<p><span></p>\n<h2 id=\"draw-on-that-surface-the-visual-annotation-of-regions\">Draw on That Surface: The Visual Annotation of Regions</h2>\n<p>You\u2019ve got a function of <em>x</em>, <em>y</em>, <em>z</em>, and you\u2019ve got a surface embedded in 3D. But how do you plot that function over the surface? Well, in Version 14.3 there\u2019s a function for that:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"225\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025drawimg1.png\" title=\"\" width=\"456\" /> </div>\n<p><span></p>\n<p>You can do this over the surface of any kind of region:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"240\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025drawimg2.png\" title=\"\" width=\"544\" /> </div>\n<p><span></p>\n<p>There\u2019s a contour plot version as well:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"349\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025drawimg3.png\" title=\"\" width=\"667\" /> </div>\n<p><span></p>\n<p>But what if you don\u2019t want to plot a whole function over a surface, but you just want to highlight some particular aspect of the surface? Then you can use the new function <tt><a href=\"http://reference.wolfram.com/language/ref/HighlightRegion.html\">HighlightRegion</a></tt>. You give <tt>HighlightRegion</tt> your original region, and the region you want to highlight on it. So, for example, this highlights 200 points on the surface of a sphere (and, yes, <tt>HighlightRegion</tt> correctly makes sure you can see the points, and they don\u2019t get \u201csliced\u201d by the surface):</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"206\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025drawimg4.png\" title=\"\" width=\"449\" /> </div>\n<p><span></p>\n<p>Here we\u2019re highlighting a cap on a sphere (specified as the intersection between a ball and the surface of the sphere):</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"203\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025drawimg5.png\" title=\"\" width=\"384\" /> </div>\n<p><span></p>\n<p><tt>HighlightRegion</tt> works not just in 3D but for regions in any number of dimensions:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"219\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025drawimg6.png\" title=\"\" width=\"426\" /> </div>\n<p><span></p>\n<p>Coming back to functions on surfaces, another convenient new feature of Version 14.3 is that <tt><a href=\"http://reference.wolfram.com/language/ref/FunctionInterpolation.html\">FunctionInterpolation</a></tt> can now work over arbitrary regions. The goal of <tt>FunctionInterpolation</tt> is to take some function (which might be slow to compute) and to generate from it an <tt><a href=\"http://reference.wolfram.com/language/ref/InterpolatingFunction.html\">InterpolatingFunction</a></tt> object that approximates the function. Here\u2019s an example where we\u2019re now interpolating a fairly simple function over a complicated region:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"163\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025drawimg7.png\" title=\"\" width=\"497\" /> </div>\n<p><span></p>\n<p>Now we can use <tt><a href=\"http://reference.wolfram.com/language/ref/SurfaceDensityPlot3D.html\">SurfaceDensityPlot3D</a></tt> to plot the interpolated function over the surface:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"313\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025drawimg8.png\" title=\"\" width=\"460\" /> </div>\n<p><span></p>\n<h2 id=\"curvature-computation--visualization\">Curvature Computation &#038; Visualization</h2>\n<p>Let\u2019s say we\u2019ve got a 3D object:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"236\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07302025curvatureimg1.png\" title=\"\" width=\"361\" /> </div>\n<p><span></p>\n<p>In Version 14.3 we can now compute the Gaussian curvature of its surface. Here we\u2019re using the function <tt><a href=\"http://reference.wolfram.com/language/ref/SurfaceContourPlot3D.html\">SurfaceContourPlot3D</a></tt> to plot a value on a surface, with the variable <em>p</em> ranging over the surface:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"282\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07302025curvatureimg2.png\" title=\"\" width=\"531\" /> </div>\n<p><span></p>\n<p>In this example, our 3D object is specified purely by a mesh. But let\u2019s say we have a parametric object:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"187\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07302025curvatureimg3.png\" title=\"\" width=\"559\" /> </div>\n<p><span></p>\n<p>Again we can compute the Gaussian curvature:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"245\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07302025curvatureimg4.png\" title=\"\" width=\"516\" /> </div>\n<p><span></p>\n<p>But now we can get exact results. Like this finds a point on the surface:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"60\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07302025curvatureimg5.png\" title=\"\" width=\"415\" /> </div>\n<p><span></p>\n<p>And this then computes the exact value of the Gaussian curvature at that point:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"75\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07302025curvatureimg6.png\" title=\"\" width=\"307\" /> </div>\n<p><span></p>\n<p>Version 14.3 also introduces mean curvature measures for surfaces</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"249\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07302025curvatureimg7.png\" title=\"\" width=\"490\" /> </div>\n<p><span></p>\n<p>as well as max and min curvatures:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"71\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07302025curvatureimg8.png\" title=\"\" width=\"377\" /> </div>\n<p><span></p>\n<p>These surface curvatures are in effect 3D generalizations of the <tt><a href=\"http://reference.wolfram.com/language/ref/ArcCurvature.html\">ArcCurvature</a></tt> that we introduced more than a decade ago (in <a href=\"https://writings.stephenwolfram.com/2014/07/launching-mathematica-10-with-700-new-functions-and-a-crazy-amount-of-rd/\">Version 10.0</a>): the min and max curvatures correspond to the min and max curvatures of curves laid on the surface; the Gaussian curvature is the product of these, and the mean curvature is their mean.</p>\n<h2 id=\"geodesics--path-planning\">Geodesics &#038; Path Planning</h2>\n<p>What\u2019s the shortest path from one point to another\u2014say on a surface? In Version 14.3 you can use <tt><a href=\"http://reference.wolfram.com/language/ref/FindShortestCurve.html\">FindShortestCurve</a></tt> to find out. As an example, let\u2019s find the shortest path (i.e. geodesic) between two points on a sphere:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"86\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07282025geodesicsimg1.png\" title=\"\" width=\"580\" /> </div>\n<p><span></p>\n<p>Yes, we can see a little arc of what seems like a great circle. But we\u2019d really like to visualize it on the sphere. Well, we can do that with <tt><a href=\"http://reference.wolfram.com/language/ref/HighlightRegion.html\">HighlightRegion</a></tt>:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"206\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07282025geodesicsimg2.png\" title=\"\" width=\"616\" /> </div>\n<p><span></p>\n<p>Here\u2019s a similar result for a torus:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"212\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07282025geodesicsimg3.png\" title=\"\" width=\"609\" /> </div>\n<p><span></p>\n<p>But, actually, any region whatsoever will work. Like, for example, Phobos, a moon of Mars:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"196\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07282025geodesicsimg4.png\" title=\"\" width=\"256\" /> </div>\n<p><span></p>\n<p>Let\u2019s pick two random points on this:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"44\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07282025geodesicsimg5.png\" title=\"\" width=\"437\" /> </div>\n<p><span></p>\n<p>Now we can find the shortest curve between these points on the surface:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"215\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07282025geodesicsimg6.png\" title=\"\" width=\"426\" /> </div>\n<p><span></p>\n<p>You could use <tt><a href=\"http://reference.wolfram.com/language/ref/ArcLength.html\">ArcLength</a></tt> to find the length of this curve, or you can directly use the new function <tt><a href=\"https://reference.wolfram.com/language/ref/ShortestCurveDistance.html\">ShortestCurveDistance</a></tt>:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"43\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07282025geodesicsimg7.png\" title=\"\" width=\"298\" /> </div>\n<p><span></p>\n<p>Here are 25 geodesics between random pairs of points:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"243\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07282025geodesicsimg8.png\" title=\"\" width=\"597\" /> </div>\n<p><span></p>\n<p>And, yes, the region can be complicated; <tt>FindShortestCurve</tt> can handle it. But the reason it\u2019s a \u201cFind&#8230;\u201d function is that in general there can be many paths of the same length:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"334\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07282025geodesicsimg9.png\" title=\"\" width=\"434\" /> </div>\n<p><span></p>\n<p>We\u2019ve been looking so far at surfaces in 3D. But <tt>FindShortestCurve</tt> also works in 2D:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"272\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07282025geodesicsimg10.png\" title=\"\" width=\"646\" /> </div>\n<p><span></p>\n<p>So what is this good for? Well, one thing is path planning. Let\u2019s say we\u2019re trying to make a robot get from here to there, avoid obstacles, etc. What is the shortest path it can take? That\u2019s something we can use <tt>FindShortestCurve</tt> for. And if we want to deal with the \u201csize of the robot\u201d we can do that by \u201cdilating our obstacles\u201d. So, for example, here\u2019s a plan for some furniture:</p>\n<p><img alt=\"Furniture layout\" height=\"155\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07282025geodesicsimg11.png\" title=\"Furniture layout\" width=\"117\" /></p>\n<p>Let\u2019s now \u201cdilate\u201d this to give the effective region for a robot of radius 0.8:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"184\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07282025geodesicsimg12.png\" title=\"\" width=\"306\" /> </div>\n<p><span></p>\n<p>Inverting this relative to a \u201crug\u201d now gives us the effective region that the (center of the) robot can move in:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"227\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07282025geodesicsimg13.png\" title=\"\" width=\"290\" /> </div>\n<p><span></p>\n<p>Now we can use <tt>FindShortestCurve</tt> to find the shortest paths for the robot to get to different places:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"261\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07282025geodesicsimg14.png\" title=\"\" width=\"595\" /> </div>\n<p><span></p>\n<h2 id=\"geometry-from-subdivision\">Geometry from Subdivision</h2>\n<p>Creating \u201crealistic\u201d geometry is hard, particularly in 3D. One way to make it easier is to construct what you want by combining basic shapes (say spheres, cylinders, etc.). And we\u2019ve supported that kind of \u201cconstructive geometry\u201d since <a href=\"https://writings.stephenwolfram.com/2021/12/launching-version-13-0-of-wolfram-language-mathematica/#geometric-regions-fitting-and-building\">Version 13.0</a>. But now in Version 14.3, there\u2019s another, powerful alternative: starting with a skeleton of what you want, and then filling it in by taking the limit of an infinite number of subdivisions. So, for example, we might start from a very coarse, faceted approximation to the geometry of a cow, and by doing subdivisions we fill it in to a smooth shape:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"367\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025geometryaimg1.png\" title=\"\" width=\"383\" /> </div>\n<p><span></p>\n<p>It\u2019s pretty typical to start from something \u201cmathematical looking\u201d, and end with something more \u201cnatural\u201d or \u201cbiological\u201d:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"271\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025geometryaimg2.png\" title=\"\" width=\"276\" /> </div>\n<p><span></p>\n<p>Here\u2019s what happens if we start from a cube, and then do successive steps of subdividing each face: </p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"138\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025geometryaimg3.png\" title=\"\" width=\"690\" /> </div>\n<p><span></p>\n<p>As a more realistic example, say we start with an approximate mesh for a bone:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"367\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025geometryaimg5.png\" title=\"\" width=\"286\" /> </div>\n<p><span></p>\n<p><tt><a href=\"http://reference.wolfram.com/language/ref/SubdivisionRegion.html\">SubdivisionRegion</a></tt> immediately gives us a smoothed\u2014and presumably more realistic\u2014version.</p>\n<p>Like other computational geometry in the Wolfram Language, <tt>SubdivisionRegion</tt> works not only in 3D, but also in 2D. So, for example, we can take a random Voronoi mesh</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"234\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025geometryaimg6.png\" title=\"\" width=\"339\" /> </div>\n<p><span></p>\n<p>then split it into polygonal cells</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"104\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025geometryaimg7.png\" title=\"\" width=\"613\" /> </div>\n<p><span></p>\n<p>and then make subdivision regions from these to produce a rather \u201cpebble look\u201d:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"214\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025geometryaimg8.png\" title=\"\" width=\"262\" /> </div>\n<p><span></p>\n<p>Or in 3D:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"259\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025geometryaimg9.png\" title=\"\" width=\"652\" /> </div>\n<p><span></p>\n<h2 id=\"fix-that-mesh\">Fix That Mesh!</h2>\n<p>Let\u2019s say we have a cloud of 3D points, perhaps from a scanner:</p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"269\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08052025meshimg1.png\" title=\"\" width=\"300\" /> </div>\n</div>\n<p><span></p>\n<p>The function <tt><a href=\"http://reference.wolfram.com/language/ref/ReconstructionMesh.html\">ReconstructionMesh</a></tt> introduced in <a href=\"https://writings.stephenwolfram.com/2022/06/launching-version-13-1-of-wolfram-language-mathematica/#reconstructing-geometry-from-point-clouds\">Version 13.1</a> will attempt to reconstruct a surface from this:</p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"253\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08052025meshimg2.png\" title=\"\" width=\"289\" /> </div>\n</div>\n<p><span></p>\n<p>It\u2019s pretty common to see this kind of noisy \u201ccrinkling\u201d. But now, in Version 14.3, we have a new function that can smooth this out:</p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"342\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08052025meshimg3.png\" title=\"\" width=\"292\" /> </div>\n</div>\n<p><span></p>\n<p>That looks nice. But it has a lot of polygons in it. And for some kinds of computations you\u2019ll want a simpler mesh, with fewer polygons. The new function <tt><a href=\"http://reference.wolfram.com/language/ref/SimplifyMesh.html\">SimplifyMesh</a></tt> can take any mesh and produce an approximation with fewer polygons:</p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"341\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08052025meshimg4.png\" title=\"\" width=\"299\" /> </div>\n</div>\n<p><span></p>\n<p>And, yes, it looks a bit more faceted, but the number of polygons is 10x lower:</p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"103\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08042025meshimg5.png\" title=\"\" width=\"510\" /> </div>\n</div>\n<p><span></p>\n<p>By the way, another new function in Version 14.3 is <tt><a href=\"http://reference.wolfram.com/language/ref/Remesh.html\">Remesh</a></tt>. When you do operations on meshes it\u2019s fairly common to generate \u201cweird\u201d (e.g. very pointy) polygons in the mesh. Such polygons can cause trouble if you\u2019re, say, doing <a href=\"https://reference.wolfram.com/language/guide/3DPrinting.html\">3D printing</a> or <a href=\"https://reference.wolfram.com/language/FEMDocumentation/guide/FiniteElementMethodGuide.html\">finite element analysis</a>. <tt>Remesh</tt> creates a new \u201cremeshed\u201d mesh in which weird polygons are avoided. </p>\n<h2 id=\"color-that-moleculeand-more\">Color That Molecule\u2014and More</h2>\n<p>Chemical computation in the Wolfram Language began in earnest six years ago\u2014in <a href=\"https://writings.stephenwolfram.com/2019/04/version-12-launches-today-big-jump-for-wolfram-language-and-mathematica/#computational-chemistry\">Version 12.0</a>\u2014with the introduction of <tt><a href=\"http://reference.wolfram.com/language/ref/Molecule.html\">Molecule</a></tt> and many functions around it. And in the years since then we\u2019ve been energetically rounding out the <a href=\"https://reference.wolfram.com/language/guide/PhysicsAndChemistryDataAndComputation.html\">chemistry functionality</a> of the language.</p>\n<p>A new capability in Version 14.3 is molecular visualization in which atoms\u2014or bonds\u2014can be colored to show values of a property. So, for example, here are oxidation states of atoms in a caffeine molecule:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"315\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025colorimg1.png\" title=\"\" width=\"430\" /> </div>\n<p><span></p>\n<p>And here\u2019s a 3D version:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"300\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025colorimg2.png\" title=\"\" width=\"448\" /> </div>\n<p><span></p>\n<p>And here\u2019s a case where the quantity we\u2019re using for coloring has a continuous range of values:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"317\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025colorimg3.png\" title=\"\" width=\"428\" /> </div>\n<p><span></p>\n<p>Another new chemistry function in Version 14.3 is <tt><a href=\"http://reference.wolfram.com/language/ref/MoleculeFeatureDistance.html\">MoleculeFeatureDistance</a></tt>\u2014which gives a quantitative way to measure \u201chow similar\u201d two molecules are:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"53\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025colorimg4.png\" title=\"\" width=\"505\" /> </div>\n<p><span></p>\n<p>You can use this distance in, for example, making a clustering tree of molecules, here of amino acids:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"586\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025colorimg5.png\" title=\"\" width=\"400\" /> </div>\n<p><span></p>\n<p>When we first introduced <tt>Molecule</tt> we also introduced <tt><a href=\"http://reference.wolfram.com/language/ref/MoleculeModify.html\">MoleculeModify</a></tt>. And over the years, we\u2019ve been steadily adding more functionality to <tt>MoleculeModify</tt>. In Version 14.3 we added the ability to invert a molecular structure around an atom, in effect flipping the local stereochemistry of the molecule:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"90\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025colorimg6.png\" title=\"\" width=\"499\" /> </div>\n<p><span></p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"194\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025colorimg7.png\" title=\"\" width=\"515\" /> </div>\n<p><span></p>\n<h2 id=\"the-proteins-get-foldedlocally\">The Proteins Get Folded\u2014Locally</h2>\n<p>What shape will that protein be? The Wolfram Language has access to a large database of proteins whose structures have been experimentally measured. But what if you\u2019re dealing with a new, different amino acid sequence? How will it fold? Since <a href=\"https://writings.stephenwolfram.com/2024/07/yet-more-new-ideas-and-new-functions-launching-version-14-1-of-wolfram-language-mathematica/#symbolic-biomolecules-and-their-visualization\">Version 14.1</a> <tt><a href=\"http://reference.wolfram.com/language/ref/BioMolecule.html\">BioMolecule</a></tt> has automatically attempted to determine that, but it\u2019s had to call an external API to do so. Now in Version 14.3 we\u2019ve set it up so that you can do the folding locally, on your own computer. The neural net that\u2019s needed is not small\u2014it\u2019s about 11 gigabytes to download, and 30 gigabytes uncompressed on your computer. But being able to work purely locally allows you to systematically do protein folding without the volume and rate limits of an external API.</p>\n<p>Here\u2019s an example, doing local folding:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"188\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025proteinsimg1.png\" title=\"\" width=\"624\" /> </div>\n<p><span></p>\n<p>And, remember, this is just a machine-learning-based estimate of the structure. Here\u2019s the experimentally measured structure in this case\u2014qualitatively similar, but not precisely the same:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"185\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025proteinsimg2.png\" title=\"\" width=\"348\" /> </div>\n<p><span></p>\n<p>So how can we actually compare these structures? Well, in Version 14.3 there\u2019s a new function <tt><a href=\"http://reference.wolfram.com/language/ref/BioMoleculeAlign.html\">BioMoleculeAlign</a></tt> (analogous to <tt><a href=\"http://reference.wolfram.com/language/ref/MoleculeAlign.html\">MoleculeAlign</a></tt>) that tries to align one biomolecule to another. Here\u2019s our predicted folding again:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"38\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025proteinsimg3.png\" title=\"\" width=\"521\" /> </div>\n<p><span></p>\n<p>Now we align the experimental structure to this:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"80\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025proteinsimg4.png\" title=\"\" width=\"371\" /> </div>\n<p><span></p>\n<p>This now shows the structures together:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"188\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025proteinsimg5.png\" title=\"\" width=\"593\" /> </div>\n<p><span></p>\n<p>And, yes, at least in this case, the agreement is quite good, and, for example, the error (averaged over core carbon atoms in the backbone) is small: </p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"48\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025proteinsimg6.png\" title=\"\" width=\"540\" /> </div>\n<p><span></p>\n<p>Version 14.3 also introduces some new quantitative measures of \u201cprotein shape\u201d. First, there are Ramachandran angles, which measure the \u201ctwisting\u201d of the backbone of the protein (and, yes, those two separated regions correspond to the distinct regions one can see in the protein):</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"234\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025proteinsimg7.png\" title=\"\" width=\"576\" /> </div>\n<p><span></p>\n<p>And then there\u2019s the distance matrix between all the residues (i.e. amino acids) in the protein:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"259\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025proteinsimg8.png\" title=\"\" width=\"485\" /> </div>\n<p><span></p>\n<h2 id=\"will-that-engineering-system-actually-work\">Will That Engineering System Actually Work? </h2>\n<p>For more than a decade <a href=\"https://www.wolfram.com/system-modeler/\">Wolfram System Modeler</a> has let one build up and simulate models of real-world engineering and other systems. And by \u201creal world\u201d I mean an expanding range of actual cars, planes, power plants, etc.\u2014with tens of thousands of components\u2014that companies have built (not to mention biomedical systems, etc.) The typical workflow is to interactively construct systems in System Modeler, then to use Wolfram Language to do analysis, algorithmic design, etc. on them. And now, in Version 14.3, we\u2019ve added a major new capability: also being able to validate systems in Wolfram Language.</p>\n<p>Will that system stay within the limits that were specified for it? For safety, performance and other reasons, that\u2019s often an important question to ask. And now it\u2019s one you can ask <tt><a href=\"http://reference.wolfram.com/language/ref/SystemModelValidate.html\">SystemModelValidate</a></tt> to answer. But how do you specify the specifications? Well, that needs some new functions. Like <tt><a href=\"http://reference.wolfram.com/language/ref/SystemModelAlways.html\">SystemModelAlways</a></tt>\u2014that lets you give a condition that you want the system always to satisfy. Or <tt><a href=\"http://reference.wolfram.com/language/ref/SystemModelEventually.html\">SystemModelEventually</a></tt>\u2014that lets you give a condition that you want the system eventually to satisfy.</p>\n<p>Let&#8217;s starts with a toy example. Consider this differential equation:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"13\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025engineeringimg1.png\" title=\"\" width=\"432\" /> </div>\n<p><span></p>\n<p>Solve this differential equation and we get:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"165\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025engineeringimg2.png\" title=\"\" width=\"515\" /> </div>\n<p><span></p>\n<p>We can set this up as a System Modeler\u2013style model:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"153\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025engineeringimg3.png\" title=\"\" width=\"443\" /> </div>\n<p><span></p>\n<p>This simulates the system and plots what it does:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"162\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025engineeringimg4.png\" title=\"\" width=\"261\" /> </div>\n<p><span></p>\n<p>Now let\u2019s say we want to validate the behavior of the system, for example checking whether it ever overshoots value 1.1. Then we just have to say:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"75\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025engineeringimg5.png\" title=\"\" width=\"529\" /> </div>\n<p><span></p>\n<p>And, yes, as the plot shows, the system doesn\u2019t always satisfy this constraint. Here\u2019s where it fails:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"83\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025engineeringimg6.png\" title=\"\" width=\"273\" /> </div>\n<p><span></p>\n<p>And here\u2019s a visual representation of the region of failure:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"126\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025engineeringimg7.png\" title=\"\" width=\"501\" /> </div>\n<p><span></p>\n<p>OK, well what about a more realistic example? Here\u2019s a slightly simplified model of the drive train of an electric car (with 469 system variables):</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"229\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025engineeringimg8.png\" title=\"\" width=\"492\" /> </div>\n<p><span></p>\n<p>Let\u2019s say we have the specification: \u201cFollowing the <a href=\"https://www.epa.gov/vehicle-and-fuel-emissions-testing/dynamometer-drive-schedules\" rel=\"noopener\" target=\"_blank\">US EPA Highway Fuel Economy Driving Schedule</a> (HWFET) the temperature in the car battery can only be above 301K for at most 10 minutes\u201d. In setting up the model, we already inserted the HWFET \u201cinput data\u201d. Now we have to translate the rest of this specification into symbolic form. And for that we need a temporal logic construct, also new in Version 14.3: <tt><a href=\"http://reference.wolfram.com/language/ref/SystemModelSustain.html\">SystemModelSustain</a></tt>. We end up saying: \u201ccheck whether it\u2019s always true that the temperature is not sustained as being above 301 for 10 minutes or more\u201d. And now we can run <tt>SystemModelValidate</tt> and find out if that\u2019s true for our model:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"108\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025engineeringimg9.png\" title=\"\" width=\"674\" /> </div>\n<p><span></p>\n<p>And no, it\u2019s not. But where does it fail? We can make a plot of that:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"188\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025engineeringimg10.png\" title=\"\" width=\"501\" /> </div>\n<p><span></p>\n<p>Simulating the underlying model we can see the failure:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"206\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025engineeringimg11.png\" title=\"\" width=\"409\" /> </div>\n<p><span></p>\n<p>There\u2019s a lot of technology involved here. And it\u2019s all set up to be fully industrial scale, so you can use it on any kind of real-world system for which you have a system model. </p>\n<h2 id=\"smoothing-our-control-system-workflows\">Smoothing Our Control System Workflows</h2>\n<p>It\u2019s a capability we\u2019ve been steadily building for the past 15 years: being able to design and analyze control systems. It\u2019s a complicated area, with many different ways to look at any given control system, and many different kinds of things one wants to do with it. Control system design is also typically a highly iterative process, in which you repeatedly refine a design until all design constraints are satisfied.</p>\n<p>In Version 14.3 we\u2019ve made this much easier to do, providing easy access to highly automated tools and to multiple views of your system.</p>\n<p>Here\u2019s an example of a model for a system (a \u201cplant model\u201d in the language of control systems), given in nonlinear state space form:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"187\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025smoothingimg1.png\" title=\"\" width=\"475\" /> </div>\n<p><span></p>\n<p>This happens to be a model of an elastic pendulum:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"177\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025smoothingimg2.png\" title=\"\" width=\"390\" /> </div>\n<p><span></p>\n<p>In Version 14.3 you can now click the representation of the model in your notebook, and get a \u201cribbon\u201d which allows you for example to change the displayed form of the model:</p>\n<p><img alt=\"Change the displayed form of the model\" height=\"274\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025smoothingimg3.png\" title=\"Change the displayed form of the model\" width=\"294\" /></p>\n<p>If you\u2019ve filled in numerical values for all the parameters in the model</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"156\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025smoothingimg4.png\" title=\"\" width=\"606\" /> </div>\n<p><span></p>\n<p>then you can also immediately do things like get simulation results:</p>\n<p><img alt=\"Simulation results\" height=\"254\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025smoothingimg5.png\" title=\"Simulation results\" width=\"328\" /></p>\n<p>Click the result and you can copy the code to get the result directly:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"255\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025smoothingimg6.png\" title=\"\" width=\"523\" /> </div>\n<p><span></p>\n<p>There are lots of properties we can extract from the original state space model. Like here are the differential equations for the system, suitable for input to <tt><a href=\"http://reference.wolfram.com/language/ref/NDSolve.html\">NDSolve</a></tt>:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"182\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025smoothingimg7.png\" title=\"\" width=\"725\" /> </div>\n<p><span></p>\n<p>As a more industrial example, let\u2019s consider a linearized model for the pitch dynamics of a particular kind of helicopter:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"202\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025smoothingimg8.png\" title=\"\" width=\"382\" /> </div>\n<p><span></p>\n<p>This is the form of the state space model in this case (and it\u2019s linearized around an operating point, so this just gives arrays of coefficients for linear differential equations):</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"155\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025smoothingimg9.png\" title=\"\" width=\"472\" /> </div>\n<p><span></p>\n<p>Here\u2019s the model with explicit numerical values filled in:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"155\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025smoothingimg10.png\" title=\"\" width=\"591\" /> </div>\n<p><span></p>\n<p>But how does this model behave? To get a quick impression, you can use the new function <tt><a href=\"http://reference.wolfram.com/language/ref/PoleZeroPlot.html\">PoleZeroPlot</a></tt> in Version 14.3, which displays the positions of poles (eigenvalues) and zeros in the complex plane: </p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"156\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025smoothingimg11.png\" title=\"\" width=\"194\" /> </div>\n<p><span></p>\n<p>If you know about control systems, you\u2019ll immediately notice the poles in the right half-plane\u2014which will tell you that the system as currently set up is unstable. </p>\n<p>How can we stabilize it? That\u2019s the typical goal of control system design. As an example here, let\u2019s find an LQ controller for this system\u2014with objectives specified by the \u201cweight matrices\u201d we give here:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"132\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025smoothingimg12.png\" title=\"\" width=\"577\" /> </div>\n<p><span></p>\n<p>Now we can plot (in orange) the poles for the system with this controller in the loop\u2014together with (in blue) the poles for the original uncontrolled system: </p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"186\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025smoothingimg13.png\" title=\"\" width=\"414\" /> </div>\n<p><span></p>\n<p>And we see that, yes, the controller we computed does indeed make our system stable. </p>\n<p>So what does the system actually do? We can ask for its response given certain initial conditions (here that the helicopter is slightly tipped up):</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"202\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025smoothingimg14.png\" title=\"\" width=\"547\" /> </div>\n<p><span></p>\n<p>Plotting this we see that, yes, the helicopter wiggles a bit, then settles down:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"212\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025smoothingimg15.png\" title=\"\" width=\"362\" /> </div>\n<p><span></p>\n<h2 id=\"going-hyperbolic-in-graph-layout\">Going Hyperbolic in Graph Layout</h2>\n<p>How should you lay out a tree? In fairly small cases it\u2019s feasible to have it look like a (botanical) tree, albeit with its root at the top:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"132\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025hyperbolicimg1.png\" title=\"\" width=\"396\" /> </div>\n<p><span></p>\n<p>For larger cases, it\u2019s not so clear what to do. Our default is just to fall through to general graph layout techniques:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"367\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025hyperbolicimg2.png\" title=\"\" width=\"397\" /> </div>\n<p><span></p>\n<p>But in Version 14.3 there\u2019s something more elegant we can do: effectively lay the graph out in hyperbolic space:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"284\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025hyperbolicimg3.png\" title=\"\" width=\"511\" /> </div>\n<p><span></p>\n<p>In <tt>\"HyperbolicRadialEmbedding\"</tt> we\u2019re in effect having every branch of the tree go out radially in hyperbolic space. But in general we might just want to operate in hyperbolic space, while treating graph edges like springs. Here\u2019s an example of what happens in this case:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"226\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025hyperbolicimg4.png\" title=\"\" width=\"513\" /> </div>\n<p><span></p>\n<p>At a mathematical level, hyperbolic space is infinite. But in doing our layouts, we\u2019re projecting it into a \u201cPoincar\u00e9 disk\u201d coordinate system. In general, one needs to pick the origin of that coordinate system, or in effect the \u201croot vertex\u201d for the graph, that will be rendered at the center of the Poincar\u00e9 disk:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"267\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025hyperbolicimg5.png\" title=\"\" width=\"558\" /> </div>\n<p><span></p>\n<h2 id=\"the-latest-in-calculus-hilbert-transforms-lommel-functions\">The Latest in Calculus: Hilbert Transforms, Lommel Functions</h2>\n<p>We\u2019ve done Laplace. Fourier. Mellin. Hankel. Radon. All these are integral transforms. And now in Version 14.3 we\u2019re on to the very last (and most difficult) of the common types of integral transforms: Hilbert transforms. Hilbert transforms show up a lot when one\u2019s dealing with signals and things like them. Because with the right setup, a Hilbert transform basically takes the real part of a signal, say as a function of frequency, and\u2014assuming one\u2019s dealing with a well-behaved analytic function\u2014gives one its imaginary part. </p>\n<p>A classic example (in optics, scattering theory, etc.) is:</p>\n<p><div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"61\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025calculusimg1.png\" title=\"\" width=\"324\" /> </div>\n</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"202\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025calculusimg2.png\" title=\"\" width=\"338\" /> </div>\n<p><span></p>\n<p>Needless to say, our <tt><a href=\"http://reference.wolfram.com/language/ref/HilbertTransform.html\">HilbertTransform</a></tt> can do essentially any Hilbert transform that can be done symbolically:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"71\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025calculusimg3.png\" title=\"\" width=\"420\" /> </div>\n<p><span></p>\n<p>And, yes, this produces a somewhat exotic special function, that we added in <a href=\"https://writings.stephenwolfram.com/2008/11/surprise-mathematica-7-0-released-today/\">Version 7.0</a>. </p>\n<p>And talking of special functions, like many versions, Version 14.3 adds yet more special functions. And, yes, after nearly four decades we\u2019re definitely running out of special functions to add, at least in the univariate case. But in Version 14.3 we\u2019ve got just one more set: Lommel functions. The Lommel functions are solutions to the inhomogeneous Bessel differential equation:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"49\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025calculusimg4.png\" title=\"\" width=\"534\" /> </div>\n<p><span></p>\n<p>They come in four varieties\u2014<tt><a href=\"http://reference.wolfram.com/language/ref/LommelS1.html\">LommelS1</a></tt>, <tt><a href=\"http://reference.wolfram.com/language/ref/LommelS2.html\">LommelS2</a></tt>, <tt><a href=\"http://reference.wolfram.com/language/ref/LommelT1.html\">LommelT1</a></tt> and <tt><a href=\"http://reference.wolfram.com/language/ref/LommelT2.html\">LommelT2</a></tt>: </p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"194\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025calculusimg5.png\" title=\"\" width=\"416\" /> </div>\n<p><span></p>\n<p>And, yes, we can evaluate them (to any precision) anywhere in the complex plane:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"290\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025calculusimg6.png\" title=\"\" width=\"383\" /> </div>\n<p><span></p>\n<p>There are all sorts of relations between Lommel functions and other special functions:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"64\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025calculusimg7.png\" title=\"\" width=\"406\" /> </div>\n<p><span></p>\n<p>And, yes, like with all our other special functions, we\u2019ve made sure that Lommel functions work throughout the system:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"44\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025calculusimg8.png\" title=\"\" width=\"365\" /> </div>\n<p><span></p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"119\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025calculusimg9.png\" title=\"\" width=\"662\" /> </div>\n<p><span></p>\n<h2 id=\"filling-in-more-in-the-world-of-matrices\">Filling in More in the World of Matrices</h2>\n<p>Matrices show up everywhere. And starting with <a href=\"https://www.wolfram.com/mathematica/scrapbook/\">Version 1.0</a> we\u2019ve had all sorts of <a href=\"https://reference.wolfram.com/language/guide/MatricesAndLinearAlgebra.html\">capabilities for powerfully dealing with them</a>\u2014both numerically and symbolically. But\u2014a bit like with special functions\u2014there are always more corners to explore. And starting with Version 14.3 we\u2019re making a push to extend and streamline everything we do with matrices. </p>\n<p>Here\u2019s a rather straightforward thing. Already in <a href=\"https://www.wolfram.com/mathematica/scrapbook/\">Version 1.0</a> we had <tt><a href=\"http://reference.wolfram.com/language/ref/NullSpace.html\">NullSpace</a></tt>. And now in Version 14.3 we\u2019re adding <tt><a href=\"http://reference.wolfram.com/language/ref/RangeSpace.html\">RangeSpace</a></tt> to provide a complementary representation of subspaces. So, for example, here\u2019s the 1-dimensional null space for a matrix:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"44\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025matricesAimg1.png\" title=\"\" width=\"359\" /> </div>\n<p><span></p>\n<p>And here is the corresponding 2 (= 3 \u2013 1)-dimensional range space for the same matrix:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"43\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025matricesAimg2.png\" title=\"\" width=\"374\" /> </div>\n<p><span></p>\n<p>What if you want to project a vector onto this subspace? In Version 14.3 we\u2019ve extended <tt><a href=\"http://reference.wolfram.com/language/ref/Projection.html\">Projection</a></tt> to allow you to project not just onto a vector but onto a subspace:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"63\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025matricesAimg3.png\" title=\"\" width=\"373\" /> </div>\n<p><span></p>\n<p>All these functions work not only numerically but also (using different methods) symbolically:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"64\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025matricesAimg4.png\" title=\"\" width=\"374\" /> </div>\n<p><span></p>\n<p>A meatier set of new capabilities concern decompositions for matrices. The basic concept of a matrix decomposition is to pick out the core operation that\u2019s needed for a certain class of applications of matrices. We had a number of matrix decompositions even in <a href=\"https://www.wolfram.com/mathematica/scrapbook/\">Version 1.0</a>, and over the years we\u2019ve added several more. And now in Version 14.3, we\u2019re adding four new matrix decompositions. </p>\n<p>The first is <tt><a href=\"http://reference.wolfram.com/language/ref/EigenvalueDecomposition.html\">EigenvalueDecomposition</a></tt>, which is essentially a repackaging of matrix eigenvalues and eigenvectors set up to define a similarity transform that diagonalizes the matrix:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"63\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025matricesAimg5.png\" title=\"\" width=\"583\" /> </div>\n<p><span></p>\n<p>The next new matrix decomposition in Version 14.3 is <tt><a href=\"http://reference.wolfram.com/language/ref/FrobeniusDecomposition.html\">FrobeniusDecomposition</a></tt>:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"63\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025matricesAimg6.png\" title=\"\" width=\"357\" /> </div>\n<p><span></p>\n<p>Frobenius decomposition is essentially achieving the same objective as eigenvalue decomposition, but in a more robust way that, for example, doesn\u2019t get derailed by degeneracies, and avoids generating complicated algebraic numbers from integer matrices.</p>\n<p>In Version 14.3 we\u2019re also adding a couple of simple matrix generators convenient for use with functions like <tt>FrobeniusDecomposition</tt>: </p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"95\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025matricesAimg7.png\" title=\"\" width=\"368\" /> </div>\n</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"95\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025matricesAimg8.png\" title=\"\" width=\"302\" /> </div>\n<p><span></p>\n<p>Another set of new functions in effect mix matrices and (univariate) polynomials. For a long time we\u2019ve had:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"45\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025matricesAimg9.png\" title=\"\" width=\"666\" /> </div>\n<p><span></p>\n<p>Now we\u2019re adding <tt><a href=\"http://reference.wolfram.com/language/ref/MatrixMinimalPolynomial.html\">MatrixMinimalPolynomial</a></tt>:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"45\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025matricesAimg10.png\" title=\"\" width=\"668\" /> </div>\n<p><span></p>\n<p>We\u2019re also adding <tt><a href=\"https://reference.wolfram.com/language/ref/MatrixPolynomialValue.html\">MatrixPolynomialValue</a></tt>\u2014which is a kind of polynomial special case of <tt><a href=\"http://reference.wolfram.com/language/ref/MatrixFunction.html\">MatrixFunction</a></tt>\u2014and which computes the (matrix) value of a polynomial when the variable (say <em>m</em>) takes on a matrix value: </p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"79\" src=\"https://content.wolfram.com/sites/43/2025/07/w07292025matricesAimg11A.png\" title=\"\" width=\"495\" /> </div>\n<p><span></p>\n<p>And, yes, this shows that\u2014as the Cayley\u2013Hamilton theorem says\u2014our matrix satisfies its own characteristic equation.</p>\n<p>In <a href=\"https://writings.stephenwolfram.com/2007/05/today-mathematica-is-reinvented/\">Version 6.0</a> we introduced <tt><a href=\"http://reference.wolfram.com/language/ref/HermiteDecomposition.html\">HermiteDecomposition</a></tt> for integer matrices. Now in Version 14.3 we\u2019re adding a version for polynomial matrices\u2014that uses <tt><a href=\"http://reference.wolfram.com/language/ref/PolynomialGCD.html\">PolynomialGCD</a></tt> instead of <tt><a href=\"http://reference.wolfram.com/language/ref/GCD.html\">GCD</a></tt> in its elimination process:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"48\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025matricesAimg12.png\" title=\"\" width=\"572\" /> </div>\n<p><span></p>\n<p>Sometimes, though, you don\u2019t want to compute full decompositions; you only want the reduced form. So in Version 14.3 we\u2019re adding the separate reduction functions <tt><a href=\"http://reference.wolfram.com/language/ref/HermiteReduce.html\">HermiteReduce</a></tt> and <tt><a href=\"http://reference.wolfram.com/language/ref/PolynomialHermiteReduce.html\">PolynomialHermiteReduce</a></tt> (as well as <tt><a href=\"http://reference.wolfram.com/language/ref/SmithReduce.html\">SmithReduce</a></tt>):</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"48\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025matricesAimg13.png\" title=\"\" width=\"519\" /> </div>\n<p><span></p>\n<p>One more thing that\u2019s new with matrices in Version 14.3 is some additional notation\u2014particularly convenient for writing out symbolic matrix expressions. An example is the new <tt><a href=\"http://reference.wolfram.com/language/ref/StandardForm.html\">StandardForm</a></tt> version of <tt><a href=\"http://reference.wolfram.com/language/ref/Norm.html\">Norm</a></tt>:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"44\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025matricesAimg14.png\" title=\"\" width=\"112\" /> </div>\n<p><span></p>\n<p>We had used this in <tt><a href=\"http://reference.wolfram.com/language/ref/TraditionalForm.html\">TraditionalForm</a></tt> before; now it\u2019s in <tt>StandardForm</tt> as well. And you can enter it by filling in the template you get by typing <span class=\"kbd\"><kbd>ESC</kbd><kbd>norm</kbd><kbd>ESC</kbd></span>. Some of the other notations we\u2019ve added are:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"48\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025matricesAimg15.png\" title=\"\" width=\"477\" /> </div>\n<p><span></p>\n<h2 id=\"with--goes-multi-argument\">With[ ] Goes Multi-argument</h2>\n<p>In <a href=\"https://writings.stephenwolfram.com/version-release/\">every version</a>\u2014for the past 37 years\u2014we\u2019ve been continuing to tune up details of Wolfram Language design (all the while maintaining compatibility). Version 14.3 is no exception. </p>\n<p>Here\u2019s something that I\u2019ve wanted for many, many years\u2014but it\u2019s been technically difficult to implement, and only now become possible: multi-argument <tt><a href=\"http://reference.wolfram.com/language/ref/With.html\">With</a></tt>. </p>\n<p>I often find myself nesting <tt>With</tt> constructs:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"44\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025argumentimg1.png\" title=\"\" width=\"349\" /> </div>\n<p><span></p>\n<p>But why can\u2019t one just flatten this out into a single multi-argument <tt>With</tt>? Well, in Version 14.3 one now can:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"44\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025argumentimg2.png\" title=\"\" width=\"295\" /> </div>\n<p><span></p>\n<p>Like the nested <tt>With</tt>, this first replaces <em>x</em> by 1, then replaces <em>y</em> by <em>x</em>+1. If both replacements are done \u201cin parallel\u201d, <em>y</em> gets the original, symbolic <em>x</em>, not the replaced one:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"44\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025argumentimg3.png\" title=\"\" width=\"273\" /> </div>\n<p><span></p>\n<p>How could one have told the difference? Look carefully at the syntax coloring. In the multi-argument case, the <em>x</em> in <em>y </em>= <em>x </em>+ 1 is green, indicating that it\u2019s a scoped variable; in the non-multi-argument case, it\u2019s blue, indicating that it\u2019s a global variable.</p>\n<p>As it turns out, syntax coloring is one of the tricky issues in implementing multi-argument <tt>With</tt>. And you\u2019ll notice that as you add arguments, variables will appropriately turn green to indicate that they\u2019re scoped. In addition, if there are conflicts between variables, they\u2019ll turn red:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"14\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025argumentimg4.png\" title=\"\" width=\"251\" /> </div>\n<p><span></p>\n<h2 id=\"cyclic--and-cyclic-lists\">Cyclic[ ] and Cyclic Lists</h2>\n<p>What\u2019s the 5th element of a 3-element list? One might just say it\u2019s an error. But an alternative is to treat the list as cyclic. And that\u2019s what the new <tt><a href=\"http://reference.wolfram.com/language/ref/Cyclic.html\">Cyclic</a></tt> function in Version 14.3 does:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"44\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025cyclicimg1.png\" title=\"\" width=\"195\" /> </div>\n<p><span></p>\n<p>You can think of <tt>Cyclic[{a,b,c}]</tt> as representing an infinite sequence of repetitions of <tt>{a,b,c}</tt>. This just gives the first part of <tt>{a,b,c}</tt>:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"44\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025cyclicimg2.png\" title=\"\" width=\"195\" /> </div>\n<p><span></p>\n<p>But this \u201cwraps around\u201d, and gives the last part of <tt>{a,b,c}</tt>:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"44\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025cyclicimg3.png\" title=\"\" width=\"195\" /> </div>\n<p><span></p>\n<p>You can pick out any \u201ccyclic element\u201d; you\u2019re always just picking out the element mod the length of the block of elements you specify: </p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"43\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025cyclicimg4.png\" title=\"\" width=\"250\" /> </div>\n<p><span></p>\n<p><tt>Cyclic</tt> provides a way to do computations with effectively infinite repeating lists. But it\u2019s also useful in less \u201ccomputational\u201d settings, like in specifying cyclic styling, say in <tt><a href=\"http://reference.wolfram.com/language/ref/Grid.html\">Grid</a></tt>:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"122\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025cyclicimg5.png\" title=\"\" width=\"513\" /> </div>\n<p><span></p>\n<h2 id=\"new-in-tabular\">New in Tabular</h2>\n<p><a href=\"https://writings.stephenwolfram.com/2025/01/launching-version-14-2-of-wolfram-language-mathematica-big-data-meets-computation-ai/#bring-us-your-gigabytes-introducing-tabular\">Version 14.2 introduced game-changing capabilities</a> for handling gigabyte-sized tabular data, centered around the new function <tt><a href=\"http://reference.wolfram.com/language/ref/Tabular.html\">Tabular</a></tt>. Now in Version 14.3 we\u2019re rounding out the capabilities of <tt>Tabular</tt> in several areas.</p>\n<p>The first has to do with where you can import data for <tt>Tabular</tt> from. In addition to local files and URLs, <a href=\"https://writings.stephenwolfram.com/2025/01/launching-version-14-2-of-wolfram-language-mathematica-big-data-meets-computation-ai/#getting-data-into-tabular\">Version 14.2</a> supported <a href=\"https://aws.amazon.com/s3/\" rel=\"noopener\" target=\"_blank\">Amazon S3</a>, <a href=\"https://azure.microsoft.com/en-us/products/storage/blobs\" rel=\"noopener\" target=\"_blank\">Azure blob storage</a>, <a href=\"https://www.dropbox.com/\" rel=\"noopener\" target=\"_blank\">Dropbox</a> and <a href=\"https://ipfs.tech/\" rel=\"noopener\" target=\"_blank\">IPFS</a>. In Version 14.3 we\u2019re adding <a href=\"https://www.microsoft.com/en-us/microsoft-365/onedrive/online-cloud-storage\" rel=\"noopener\" target=\"_blank\">OneDrive</a> and <a href=\"https://www.kaggle.com/\" rel=\"noopener\" target=\"_blank\">Kaggle</a>. We\u2019re also adding the capability to \u201cgulp in\u201d data from relational databases. Already in <a href=\"https://writings.stephenwolfram.com/2025/01/launching-version-14-2-of-wolfram-language-mathematica-big-data-meets-computation-ai/#bring-us-your-gigabytes-introducing-tabular\">Version 14.2</a> we allowed the very powerful possibility of handling data \u201cout of core\u201d in relational databases through <tt>Tabular</tt>. Now in Version 14.3 we\u2019re adding the capability to directly import for in-core processing the results of queries from such relational databases as <a href=\"https://reference.wolfram.com/language/ref/databaseconnection/SQLite.html\">SQLite</a>, <a href=\"https://reference.wolfram.com/language/ref/databaseconnection/PostgreSQL.html\">Postgres</a>, <a href=\"https://reference.wolfram.com/language/ref/databaseconnection/MySQL.html\">MySQL</a>, <a href=\"https://reference.wolfram.com/language/DatabaseLink/ref/SQLServer.html\">SQL Server</a> and <a href=\"https://reference.wolfram.com/language/ref/databaseconnection/Oracle.html\">Oracle</a>. All this works through <tt><a href=\"http://reference.wolfram.com/language/ref/DataConnectionObject.html\">DataConnectionObject</a></tt>, which provides a symbolic representation of an active data connection, and which handles such issues as authentication.</p>\n<p>Here\u2019s an example of a data connection object that represents the results of a particular query on a sample database:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"231\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025newimg1.png\" title=\"\" width=\"894\" /> </div>\n<p><span></p>\n<p><tt><a href=\"http://reference.wolfram.com/language/ref/Import.html\">Import</a></tt> can take this and resolve it to an (in-core) <tt>Tabular</tt>:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"302\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025newimg2.png\" title=\"\" width=\"737\" /> </div>\n<p><span></p>\n<p>One frequent source of large amounts of tabular data is log files. And in Version 14.3 we\u2019re adding highly efficient importing of Apache log files to <tt>Tabular</tt> objects. We\u2019re also adding new import capabilities for Common Log and Extended Log files, as well as import (and export) for JSON Lines files:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"172\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025newimg3.png\" title=\"\" width=\"733\" /> </div>\n<p><span></p>\n<p>In addition, we\u2019re adding the capabilities to import as <tt>Tabular</tt> objects for several other formats (<a href=\"https://reference.wolfram.com/language/ref/format/MDB.html\">MDB</a>, <a href=\"https://reference.wolfram.com/language/ref/format/DBF.html\">DBF</a>, <a href=\"https://reference.wolfram.com/language/ref/format/NDK.html\">NDK</a>, <a href=\"https://reference.wolfram.com/language/ref/format/TLE.html\">TLE</a>, <a href=\"https://reference.wolfram.com/language/ref/format/MTP.html\">MTP</a>, <a href=\"https://reference.wolfram.com/language/ref/format/GPX.html\">GPX</a>, <a href=\"https://reference.wolfram.com/language/ref/format/BDF.html\">BDF</a>, <a href=\"https://reference.wolfram.com/language/ref/format/EDF.html\">EDF</a>). Another new feature in Version 14.3 (used for example for GPX data) is a &#8220;<tt><a href=\"https://reference.wolfram.com/language/ref/TabularColumn.html\">GeoPosition</a></tt>&#8221; column type.</p>\n<p>As well as providing new ways to get data into <tt>Tabular</tt>, Version 14.3 expands our capabilities for manipulating tabular data, and in particular for combining data from multiple <tt>Tabular</tt> objects. One new function that does this is <tt><a href=\"http://reference.wolfram.com/language/ref/ColumnwiseCombine.html\">ColumnwiseCombine</a></tt>. The basic idea of <tt>ColumnwiseCombine</tt> is to take multiple <tt>Tabular</tt> objects and to look at all possible combinations of rows in these objects, then to create a single new <tt>Tabular</tt> object that contains those combined rows that satisfy some specified condition. </p>\n<p>Consider these three <tt>Tabular</tt> objects:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"459\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025newimg4.png\" title=\"\" width=\"314\" /> </div>\n<p><span></p>\n<p>Here\u2019s an example of <tt>ColumnwiseCombine</tt> in which the criterion for including a combined row is that the values in columns <tt>\"a\"</tt> and <tt>\"b\"</tt> agree between the different instances of the row that are being combined:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"129\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025newimg5.png\" title=\"\" width=\"436\" /> </div>\n<p><span></p>\n<p>There are lots of subtle issues that can come up. Here we\u2019re doing an \u201couter\u201d combination, in which we\u2019re effectively assuming that an element that\u2019s missing from a row matches our criterion (and we\u2019re then including rows with those explicit \u201cmissing elements\u201d added): </p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"230\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025newimg6.png\" title=\"\" width=\"499\" /> </div>\n<p><span></p>\n<p>Here\u2019s another subtlety. If in different <tt>Tabular</tt> objects there are columns that have the same name, how does one distinguish elements from those different <tt>Tabular</tt> objects? Here we\u2019re effectively giving each <tt>Tabular</tt> a name, which is then used to form an extended key in the resulting combined <tt>Tabular</tt>:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"159\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025newimg7.png\" title=\"\" width=\"529\" /> </div>\n<p><span></p>\n<p><tt>ColumnwiseCombine</tt> is in effect an <em>n</em>-ary generalization of <tt><a href=\"http://reference.wolfram.com/language/ref/JoinAcross.html\">JoinAcross</a></tt> (which in effect implements the \u201cjoin\u201d operation of relational algebra). And in Version 14.3 we also upgraded <tt>JoinAcross</tt> to handle more features of <tt>Tabular</tt>, for example being able to specify extended keys. And in both <tt>ColumnwiseCombine</tt> and <tt>JoinAcross</tt> we\u2019ve set things up so that you can use an arbitrary function to determine whether rows should be combined. </p>\n<p>Why would one want to use functions like <tt>ColumnwiseCombine</tt> and <tt>JoinAcross</tt>? A typical reason is that one has different <tt>Tabular</tt> objects that give intersecting sets of data that one wants to knit together for easier processing. So, for example, let\u2019s say we have one <tt>Tabular</tt> that contains <a href=\"https://reference.wolfram.com/language/ref/entity/Isotope.html\">properties of isotopes</a>, and another that contains properties of elements\u2014and now we want to make a combined table of the isotopes, but now including extra columns brought in from the table of elements:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"307\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025newimg8.png\" title=\"\" width=\"442\" /> </div>\n<p><span></p>\n<p>We can make the combined <tt>Tabular</tt> using <tt>JoinAcross</tt>. But in this particular case, as is often true with real-world data, the way we have to knit these tables of data together is a bit messy. The way we\u2019ll do it is to use the third (\u201ccomparison function\u201d) argument of <tt>JoinAcross</tt>, telling it to combine rows when the string corresponding to the entry for the <tt>\"Name\"</tt> column in the <tt>isotopes</tt> table has the same beginning as the string corresponding to the <tt>\"Name\"</tt> column in the <tt>elements</tt> table:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"197\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025newimg9.png\" title=\"\" width=\"616\" /> </div>\n<p><span></p>\n<p>By default, we only get one column in the result with any given name. So, here, the <tt>\"Name\"</tt> column comes from the first <tt>Tabular</tt> in the <tt>JoinAcross</tt> (i.e. <tt>isotopes</tt>); the <tt>\"AtomicNumber\"</tt> column, for example, comes from the second (i.e. <tt>elements</tt>) <tt>Tabular</tt>. We can \u201cdisambiguate\u201d the columns by their \u201csource\u201d by specifying a key in the <tt>JoinAcross</tt>:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"242\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025newimg10.png\" title=\"\" width=\"655\" /> </div>\n<p><span></p>\n<p>So now we have a combined <tt>Tabular</tt> that has \u201cknitted together\u201d the data from both our original <tt>Tabular</tt> objects\u2014a typical application of <tt>JoinAcross</tt>.</p>\n<h2 id=\"tabular-styling\">Tabular Styling</h2>\n<p>There\u2019s a lot of powerful processing that can be done with <tt>Tabular</tt>. But <tt>Tabular</tt> is also a way to store\u2014and present\u2014data. And in Version 14.3 we\u2019ve begun the process of providing capabilities to format <tt>Tabular</tt> objects and the data they contain. There are simple things. Like you can now use <tt><a href=\"http://reference.wolfram.com/language/ref/ImageSize.html\">ImageSize</a></tt> to programmatically control the initial displayed size of a <tt>Tabular</tt> (you can always change the size interactively using the resize handle in the bottom right-hand corner):</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"129\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025stylingimg1.png\" title=\"\" width=\"638\" /> </div>\n<p><span></p>\n<p>You can also use <tt><a href=\"http://reference.wolfram.com/language/ref/AppearanceElements.html\">AppearanceElements</a></tt> to control what visual elements get included. Like here we\u2019re asking for column headers, but no row labels or resize handle:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"206\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025stylingimg2.png\" title=\"\" width=\"465\" /> </div>\n<p><span></p>\n<p>OK, but what about formatting for the data area? In Version 14.3 you can for example specify the background using the <tt><a href=\"http://reference.wolfram.com/language/ref/Background.html\">Background</a></tt> option. Here we\u2019re asking for rows to alternately have no background or use light green (just like ancient line printer paper!): </p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"205\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025stylingimg3.png\" title=\"\" width=\"649\" /> </div>\n<p><span></p>\n<p>This puts a background on both rows and columns, with appropriate color mixing where they overlap:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"233\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025stylingimg4.png\" title=\"\" width=\"702\" /> </div>\n<p><span></p>\n<p>This highlights just a single column by giving it a background color, specifying the column by name:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"164\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025stylingimg5.png\" title=\"\" width=\"631\" /> </div>\n<p><span></p>\n<p>In addition to <tt>Background</tt>, Version 14.3 also supports specifying <tt><a href=\"http://reference.wolfram.com/language/ref/ItemStyle.html\">ItemStyle</a></tt> for the contents of <tt>Tabular</tt>. Here we\u2019re saying to make the <tt>\"year\"</tt> column bold and red:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"189\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025stylingimg6.png\" title=\"\" width=\"644\" /> </div>\n<p><span></p>\n<p>But what if you want the styling of elements in a <tt>Tabular</tt> to be determined not by their position, but by their value? Version 14.3 provides keys for that. For example, this puts a background color on every row for which the value of <tt>\"hwy\"</tt> is below 30:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"244\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025stylingimg7.png\" title=\"\" width=\"724\" /> </div>\n<p><span></p>\n<p>We could do the same kind of thing, but having the color actually be computed from the value of <tt>\"hwy\"</tt> (or rather, from its value rescaled based on its overall \u201ccolumnwise\u201d min and max):</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"318\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025stylingimg8.png\" title=\"\" width=\"735\" /> </div>\n<p><span></p>\n<p>The last row shown here has no color\u2014because the value in its <tt>\"hwy\"</tt> column is missing. And if you wanted, for example, to highlight all missing values you can just do this:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"255\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07292025stylingimg9.png\" title=\"\" width=\"736\" /> </div>\n<p><span></p>\n<h2 id=\"semantic-ranking-textual-feature-extraction-and-all-that\">Semantic Ranking, Textual Feature Extraction and All That</h2>\n<p>Which of those choices do you mean? Let\u2019s say you\u2019ve got a list of choices\u2014for example a restaurant menu. And you give a textual description of what you want from those choices. The new function <tt><a href=\"https://reference.wolfram.com/language/ref/SemanticRanking.html\">SemanticRanking</a></tt> will rank the choices according to what you say you want:</p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"329\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08052025semanticimg1.png\" title=\"\" width=\"694\" /> </div>\n</div>\n<p><span></p>\n<p>And because this is using modern language model methods, the choices could, for example, be given not only in English but in any language.</p>\n<p>If you want, you can ask <tt>SemanticRanking</tt> to also give you things like relevance scores:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"373\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025semanticimg2.png\" title=\"\" width=\"618\" /> </div>\n<p><span></p>\n<p>How does <tt>SemanticRanking</tt> relate to the <tt><a href=\"http://reference.wolfram.com/language/ref/SemanticSearch.html\">SemanticSearch</a></tt> functionality that we introduced in <a href=\"https://writings.stephenwolfram.com/2024/07/yet-more-new-ideas-and-new-functions-launching-version-14-1-of-wolfram-language-mathematica/#vector-databases-and-semantic-search\">Version 14.1</a>? <tt>SemanticSearch</tt> actually by default uses <tt>SemanticRanking</tt> as a final ranking for the results it gives. But <tt>SemanticSearch</tt> is\u2014as its name suggests\u2014searching a potentially large amount of material, and returning the most relevant items from it. <tt>SemanticRanking</tt>, on the other hand, is taking a small \u201cmenu\u201d of possibilities, and giving you a ranking of all of them based on relevance to what you specify.</p>\n<p><tt>SemanticRanking</tt> in effect exposes one of the elements of the <tt>SemanticSearch</tt> pipeline. In Version 14.3 we\u2019re also exposing another element: an enhanced version of <tt><a href=\"http://reference.wolfram.com/language/ref/FeatureExtract.html\">FeatureExtract</a></tt> for text, that is pre-trained, and does not require its own explicit examples:</p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"184\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08052025semanticimg2.png\" title=\"\" width=\"616\" /> </div>\n</div>\n<p><span></p>\n<p>Our new feature extractor for text also improves Classify, Predict, FeatureSpacePlot, etc. in the case of sentences or other pieces of text.</p>\n<h2 id=\"compiled-functions-that-can-pause-and-resume\">Compiled Functions That Can Pause and Resume</h2>\n<p>The typical flow of computation in the Wolfram Language is a sequence of function calls, with each function running and returning its result before another function is run. But Version 14.3 introduces\u2014in the context of the Wolfram Language compiler\u2014the possibility for a different kind of flow in which functions can be paused at any point, then resumed later. In effect what we\u2019ve done is to implement a form of coroutines, that allows us to do incremental computation, and for example to support \u201cgenerators\u201d that can yield a sequence of results, always maintaining the state needed to produce more.</p>\n<p>The basic idea is to set up an <tt><a href=\"http://reference.wolfram.com/language/ref/IncrementalFunction.html\">IncrementalFunction</a></tt> object that can be compiled. The <tt>IncrementalFunction</tt> object uses <tt><a href=\"http://reference.wolfram.com/language/ref/IncrementalYield.html\">IncrementalYield</a></tt> to return \u201cincremental\u201d results\u2014and can contain <tt><a href=\"http://reference.wolfram.com/language/ref/IncrementalReceive.html\">IncrementalReceive</a></tt> functions that allow it to receive more input while it is running.</p>\n<p>Here\u2019s a very simple example, set up to create an incremental function (represented as a <tt><a href=\"http://reference.wolfram.com/language/ref/DataStructure.html\">DataStructure</a></tt> of type \u201c<tt>IncrementalFunction</tt>\u201d) that will keep successively generating powers of 2: </p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"146\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025compiledimg1.png\" title=\"\" width=\"585\" /> </div>\n<p><span></p>\n<p>Now every time we ask for the <tt>\"Next\"</tt> element of this, the code in our incremental function runs until it reaches the <tt>IncrementalYield</tt>, at which point it yields the result specified:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"44\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025compiledimg2.png\" title=\"\" width=\"118\" /> </div>\n<p><div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"44\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025compiledimg3.png\" title=\"\" width=\"118\" /> </div>\n</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"44\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025compiledimg4.png\" title=\"\" width=\"335\" /> </div>\n<p><span></p>\n<p>In effect the compiled incremental function <tt>if</tt> is always internally \u201cmaintaining state\u201d so that when we ask for the <tt>\"Next\"</tt> element it can just continue running from the state where it left off. </p>\n<p>Here\u2019s a slightly more complicated example: an incremental version of the Fibonacci recurrence:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"146\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025compiledimg5.png\" title=\"\" width=\"610\" /> </div>\n<p><span></p>\n<p>Every time we ask for the <tt>\"Next\"</tt> element, we get the next result in the Fibonacci sequence:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"44\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025compiledimg6.png\" title=\"\" width=\"118\" /> </div>\n<p><div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"44\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025compiledimg7.png\" title=\"\" width=\"231\" /> </div>\n</p>\n<p>The incremental function is set up to yield the value of <tt>a</tt> when you ask for the <tt>\"Next\"</tt> element, but internally it maintains the values of both <em>a</em> and <em>b</em> so that it is ready to \u201ckeep running\u201d when you ask for another <tt>\"Next\"</tt> element. </p>\n<p>In general, <tt>IncrementalFunction</tt> provides a new and often convenient way to organize code. You get to repeatedly run a piece of code and get results from it, but with the compiler automatically maintaining state, so you don\u2019t explicitly have to take care of that, or include code to do it. </p>\n<p>One common use case is in enumeration. Let\u2019s say you have an algorithm for enumerating certain kinds of objects. The algorithm builds up an internal state that lets it keep generating new objects. With <tt>IncrementalFunction</tt> you can run the algorithm until it generates an object, then stop the algorithm, but automatically maintain the state to resume it again. </p>\n<p>For example, here\u2019s an incremental function for generating all possible pairs of elements from a specified list:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"207\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025compiledimg8.png\" title=\"\" width=\"645\" /> </div>\n<p><span></p>\n<p>Let\u2019s tell it to generate the pairs from a list of a million elements:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"75\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025compiledimg9.png\" title=\"\" width=\"556\" /> </div>\n<p><span></p>\n<p>The complete collection of all these pairs wouldn\u2019t fit in computer memory. But with our incremental function we can just successively request individual pairs, maintaining \u201cwhere we\u2019ve got to\u201d inside the compiled incremental function:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"44\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025compiledimg10.png\" title=\"\" width=\"122\" /> </div>\n<p><div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"44\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025compiledimg11.png\" title=\"\" width=\"122\" /> </div>\n</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"44\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025compiledimg12.png\" title=\"\" width=\"567\" /> </div>\n<p><span></p>\n<p>Another thing one can do with <tt>IncrementalFunction</tt> is, for example, to incrementally consume some external stream of data, for example from a file or API. </p>\n<p><tt>IncrementalFunction</tt> is a new, core capability for the Wolfram Language that we\u2019ll be using in future versions to build a whole array of new \u201cincremental\u201d functionality that lets one conveniently work (\u201cincrementally\u201d) with collections of objects that couldn\u2019t be handled if one had to generate them all at once. </p>\n<h2 id=\"faster-smoother-encapsulated-external-computation\">Faster, Smoother Encapsulated External Computation</h2>\n<p>We\u2019ve worked very hard (for decades!) to make things work as smoothly as possible when you\u2019re working within the Wolfram Language. But what if you want to call external code? Well, it\u2019s a jungle out there, with all kinds of issues of compatibility, dependencies, etc. But for years we\u2019ve been steadily working to provide the best interface we can within Wolfram Language to external code. And in fact what we\u2019ve managed to provide is now often a much smoother experience than with the native tools normally used with that external code.</p>\n<p>Version 14.3 includes several advances in dealing with external code. First, for Python, we\u2019ve dramatically sped up the provisioning of Python runtimes. Even the first time you use Python ever, it now takes just a few seconds to provision itself. In <a href=\"https://writings.stephenwolfram.com/2025/01/launching-version-14-2-of-wolfram-language-mathematica-big-data-meets-computation-ai/\">Version 14.2</a> we introduced a very streamlined way to specify dependencies. And now in Version 14.3 we\u2019ve made provisioning of runtimes with particular dependencies very fast: </p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"67\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025fasterimg1.png\" title=\"\" width=\"622\" /> </div>\n</div>\n<p><span></p>\n<p>And, yes, a Python runtime with those dependencies will now be set up on your machine, so if you call it again, it can just run immediately, without any further provisioning.</p>\n<p>A second major advance in Version 14.3 is the addition of a highly streamlined way of using R within Wolfram Language. Just specify R as the external language, and it\u2019ll automatically be provisioned on your system, and then run a computation (yes, having <tt>\"rnorm\"</tt> as the name of the function that generates Gaussian random numbers offends my language design sensibilities, but&#8230;):</p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"44\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025fasterimg2.png\" title=\"\" width=\"385\" /> </div>\n</div>\n<p><span></p>\n<p>You can also use R directly in a notebook (type <span class=\"computer-voice\">></span> to create an External Language cell):</p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"60\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025fasterimg3.png\" title=\"\" width=\"717\" /> </div>\n</div>\n<p><span></p>\n<p>One of the technical challenges is to set things up so that you can run R code with different dependencies within a single Wolfram Language session. We couldn\u2019t do that before (and in some sense R is fundamentally not built to do it). But now in Version 14.3 we\u2019ve set things up so that, in effect, there can be multiple R sessions running within your Wolfram Language session, each with their own dependencies, and own provisioning. (It\u2019s really complicated to make this all work, and, yes, there might be some pathological cases where the world of R is just too tangled for it to be possible. But such cases should at least be very rare.)</p>\n<p>Another thing we\u2019ve added for R in Version 14.3 is support for <tt><a href=\"http://reference.wolfram.com/language/ref/ExternalFunction.html\">ExternalFunction</a></tt>, so you can have code in R that you can set up to use just like any other function in Wolfram Language. </p>\n<h2 id=\"notebooks-into-presentations-the-aspect-ratio-challenge-solved\">Notebooks into Presentations: the Aspect Ratio Challenge Solved</h2>\n<p>Notebooks are ordinarily intended to be scrolling documents. But\u2014particularly if you\u2019re making a presentation\u2014you sometimes want them instead in more of a slide show form (\u201cPowerPoint style\u201d). We\u2019d had various approaches before, but in <a href=\"https://writings.stephenwolfram.com/2018/03/roaring-into-2018-with-another-big-release-launching-version-11-3-of-the-wolfram-language-mathematica/#presenter-tools\">Version 11.3</a>\u2014seven years ago\u2014we introduced <a href=\"https://www.wolfram.com/presenter-tools/\">Presenter Tools</a> as a streamlined way to make notebooks to use for presentations.</p>\n<p>The principle of it is very convenient. You can either start from scratch, or you can convert an existing notebook. But what you get in the end is a slide show-like presentation, that you can for example step through with a presentation clicker. Of course, because it\u2019s a notebook, you get all sorts of additional conveniences and features. Like you can have a <tt><a href=\"http://reference.wolfram.com/language/ref/Manipulate.html\">Manipulate</a></tt> on your \u201cslide\u201d, or cell groups you can open and close. And you can also edit the \u201cslide\u201d, do evaluations, etc. It all works very nicely. </p>\n<p>But there\u2019s always been one big issue. You\u2019re fundamentally trying to make what amount to slides\u2014that will be shown full screen, perhaps projected, etc. But what aspect ratio will those slides have? And how does this relate to the content you have? For things like text, one can always reflow to fit into a different aspect ratio. But it\u2019s trickier for graphics and images, because these already have their own aspect ratios. And particularly if these were somewhat exotic (say tall and narrow) one could end up with slides that required scrolling, or otherwise weren\u2019t convenient or didn\u2019t look good. </p>\n<p>But now, in Version 14.3 we have a smooth solution for all this\u2014that I know I, for one, am going to find very useful.</p>\n<p>Choose <span class=\"promptformatted\">File</span> > <span class=\"promptformatted\">New</span> > <span class=\"promptformatted\">Presenter</span> <span class=\"promptformatted\">Notebook</span>&#8230; then press <span class=\"promptformatted\">Create</span> to create a new, blank presenter notebook:</p>\n<p><img alt=\"\" height=\"270\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025notebooks-aimg1.png\" title=\"\" width=\"500\" /></p>\n<p>In the toolbar, there\u2019s now a new <img alt=\"\" height=\"22\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025notebooksimg2.png\" title=\"\" width=\"23\" /> button that inserts a template for a full-slide image (or graphic):</p>\n<p><img alt=\"\" height=\"250\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025notebooks-aimg3.png\" title=\"\" width=\"500\" /></p>\n<p>Insert an image\u2014by copy/pasting, dragging (even from an external program) or whatever\u2014with any aspect ratio:</p>\n<p><img alt=\"\" height=\"400\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025notebooks-aimg4.png\" title=\"\" width=\"500\" /></p>\n<p>Press <img alt=\"\" height=\"24\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025notebooksimg5.png\" title=\"\" width=\"159\" /> and you\u2019ll get a full-screen presentation\u2014with everything sized right, the short-and-wide graphic spanning the width of my display, and the tall-and-narrow graphic spanning the height:</p>\n<p><img alt=\"\" height=\"185\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025notebooksimg6.png\" title=\"\" width=\"620\" /></p>\n<p>When you insert a full-slide image, there\u2019s always a \u201ccontrol bar\u201d underneath:</p>\n<p><img alt=\"\" height=\"39\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025notebooksimg7.png\" title=\"\" width=\"620\" /></p>\n<p>The first pulldown</p>\n<p><img alt=\"\" height=\"62\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025notebooksimg8.png\" title=\"\" width=\"620\" /></p>\n<p>lets you decide whether the make the image fit in the window, or whether instead to make it fill out the window horizontally, perhaps clipping at the top and bottom. </p>\n<p>Now remember that this template is for placing full-slide images. If you want there to be room, say for a caption, on the slide, you need to pick a size less than 100%.</p>\n<p>By default, the background of the cells you get is determined by the original presenter notebook theme you chose. So in the example here, the default background will be white. And this means that if, for example, you\u2019re projecting your images there\u2019ll always be a \u201cbackground white rectangle\u201d. But if you want to just see your image projected\u2014at its natural aspect ratio\u2014with nothing visible around it, you can select <span class=\"promptformatted\">Cell</span> <span class=\"promptformatted\">Background</span> to instead be black.</p>\n<h2 id=\"yet-more-user-interface-polishing\">Yet More User Interface Polishing</h2>\n<p>It\u2019s been 38 years since we <a href=\"https://www.wolfram.com/mathematica/scrapbook/1988/03/05/1988_mathematicagetsready-2/\">invented notebooks</a>&#8230; but in every new version we\u2019re still continuing to polish and enhance how they work. Here\u2019s an example. Nearly 30 years ago we introduced the idea that if you type -> it\u2019ll get replaced by the more elegant <img alt=\" \" height=\"13\" src=\"https://content.wolfram.com/sites/43/2025/07/swRCA.png\" title=\" \" width=\"13\" />. Four years ago (in <a href=\"https://writings.stephenwolfram.com/2021/05/launching-version-12-3-of-wolfram-language-mathematica/\">Version 12.3</a>) we tweaked this idea by having -> not actually be replaced by <img alt=\" \" height=\"13\" src=\"https://content.wolfram.com/sites/43/2025/07/swRCA.png\" title=\" \" width=\"13\" />, but instead just render that one. But here\u2019s a subtle question: if you arrow backwards through the <img alt=\" \" height=\"13\" src=\"https://content.wolfram.com/sites/43/2025/07/swRCA.png\" title=\" \" width=\"13\" /> does it show you the characters it\u2019s made from? In previous versions it did, but now in Version 14.3 it doesn\u2019t. It\u2019s something we learned from experience: if you see something that looks like a single character (here <img alt=\" \" height=\"13\" src=\"https://content.wolfram.com/sites/43/2025/07/swRCA.png\" title=\" \" width=\"13\" />) it\u2019s strange and jarring for it to break apart if you arrow through it. So now it doesn\u2019t. However, if you backspace (rather than arrowing), it will break apart, so you can edit the individual characters. Yes, it\u2019s a subtle story, but getting it just right is one of those many, many things that makes the Wolfram Notebook experience so smooth. </p>\n<p>Here\u2019s another important little convenience that we\u2019ve added in Version 14.3: single-character delimiter wrapping. Let\u2019s say you typed this:</p>\n<p><img alt=\"\" height=\"13\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025polishingimg1.png\" title=\"\" width=\"40\" /></p>\n<p>Most likely you actually wanted a list. And you can get it by adding { at the beginning, and } at the end. But now there\u2019s a more streamlined thing to do. Just select everything</p>\n<p><img alt=\"Click to enlarge\" height=\"26\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025polishingimg2.png\" title=\"Click to enlarge\" width=\"78\" /></p>\n<p>and now simply type {. The { &#8230; } will automatically get wrapped around the selection:</p>\n<p><img alt=\"Click to enlarge\" height=\"23\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025polishingimg3.png\" title=\"Click to enlarge\" width=\"110\" /></p>\n<p>The same thing works with ( &#8230; ), [ &#8230; ], and \u201c &#8230; \u201d.</p>\n<p>It may seem like a trivial thing. But if you\u2019ve got lots of code on the screen, it\u2019s very convenient to not have to go back and forth adding delimiters\u2014but just be able to select some subexpression, then type a single character.</p>\n<p>There\u2019ve been a number of changes to icons, tooltips, etc. just to make things clearer. Something else is that (finally) there\u2019s support for separate British and American English spelling dictionaries. By default, the choice of which one to use is made automatically from the setting for your operating system. But yes, \u201ccolor\u201d vs. \u201ccolour\u201d and \u201ccenter\u201d vs. \u201ccentre\u201d will now follow your preferences and get tagged appropriately. By the way, in case you\u2019re wondering: we\u2019ve been curating our own spelling dictionaries for years. And in fact, I routinely send in words to add, either because I find myself using them, or, yes, because I just invented them (\u201c<a href=\"https://writings.stephenwolfram.com/2021/11/the-concept-of-the-ruliad/\">ruliad</a>\u201d, \u201c<a href=\"https://writings.stephenwolfram.com/2023/12/observer-theory/#observers-of-abstract-worlds\">emes</a>\u201d, etc.). </p>\n<h2 id=\"markdown\">Markdown!</h2>\n<p>You want a file that\u2019s plaintext but \u201cformatted\u201d. These days a common way to achieve that is to use <a href=\"https://reference.wolfram.com/language/ref/format/Markdown.html\">Markdown</a>. It\u2019s a format both humans and AIs can easily read, and it can be \u201cdressed up\u201d to have visual formatting. Well, in Version 14.3 we\u2019re making Markdown an easy-to-access format in Wolfram Notebooks, and in the Wolfram Language in general. </p>\n<p>It should be said at the outset that Markdown isn\u2019t even close to being as rich as our standard Notebook format. But many key elements of notebooks can still be captured by Markdown. (By the way, our .nb notebook files are, like Markdown, actually pure plaintext, but since they have to faithfully represent every aspect of notebook content, they\u2019re inevitably not as spare and easy to read as Markdown files.)</p>\n<p>OK, so let\u2019s say you have a Notebook:</p>\n<p><img alt=\"\" height=\"426\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08052025markdownaimg1.png\" title=\"\" width=\"328\" /></p>\n<p>You can get a Markdown version just by using <span class=\"promptformatted\">File</span> > <span class=\"promptformatted\">Save</span> <span class=\"promptformatted\">As</span> > <span class=\"promptformatted\">Markdown</span>:</p>\n<p><img alt=\"\" height=\"456\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025markdownimg2.png\" title=\"\" width=\"448\" /></p>\n<p>Here\u2019s what this looks like in a Markdown viewer: </p>\n<p><img alt=\"\" height=\"450\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025markdownimg3.png\" title=\"\" width=\"350\" /></p>\n<p>The main features of the notebook are there, but there are details missing (like cell backgrounds, real math typesetting, etc.), and the rendering is definitely not as beautiful as in our system nor as functional (for example, there are no closeable cell groups, no dynamic interactivity, etc.). </p>\n<p>OK, so let\u2019s say you have a Markdown file. In Version 14.3 you can now just use <span class=\"promptformatted\">File</span> > <span class=\"promptformatted\">Open</span>, choose \u201cMarkdown Files\u201d as the file type, and open the Markdown file as a Notebook:</p>\n<p><img alt=\"\" height=\"127\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025markdownimg4.png\" title=\"\" width=\"499\" /></p>\n<p>Round-tripping through Markdown loses some of the finer points of a Notebook, but the basic structure is there. And, yes, you can open Markdown files \u201cfrom the wild\u201d this way too, coming, for example, from notes apps, software documentation, raw LLM output, etc.</p>\n<p>In addition to handling Markdown at a \u201cwhole file\u201d level, you can also generate (and read) Markdown fragments. So, for example, you can take a table in a Notebook, then just do <span class=\"promptformatted\">Copy</span> <span class=\"promptformatted\">As</span> > <span class=\"promptformatted\">Markdown</span> to get a Markdown version:</p>\n<p><img alt=\"\" height=\"312\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08052025markdownbimg1.png\" title=\"\" width=\"472\" /></p>\n<p>Needless to say, everything you can do interactively with Markdown, you can also do programmatically in the Wolfram Language. So, for example, you can use <tt><a href=\"http://reference.wolfram.com/language/ref/ExportString.html\">ExportString</a></tt> to export to Markdown:</p>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"155\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025markdownimg7.png\" title=\"\" width=\"427\" /> </div>\n<p><span></p>\n<p>Importing this gives by default plaintext:</p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"65\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025markdownimg8.png\" title=\"\" width=\"278\" /> </div>\n</div>\n<p><span></p>\n<p>But if you tell it to import as \u201cformatted text\u201d, it\u2019ll package up the data in a tabular form: </p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"129\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025markdownimg9.png\" title=\"\" width=\"427\" /> </div>\n</div>\n<p><span></p>\n<p>Particularly when you\u2019re communicating with LLMs, it\u2019s often useful to have Markdown tables that are just \u201csummaries\u201d of longer, original tables. Here we\u2019re asking for 3 rows of data:</p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"186\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025markdownimg10.png\" title=\"\" width=\"595\" /> </div>\n</div>\n<p><span></p>\n<p>And here we\u2019re asking for 2 rows at the beginning, and 2 at the end:</p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"210\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025markdownimg11.png\" title=\"\" width=\"595\" /> </div>\n</div>\n<p><span></p>\n<p>There are lots of subtleties (and clever heuristics) associated with getting Markdown that\u2019s as good\u2014and round-trippable\u2014as possible. If you export an image to Markdown</p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"150\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025markdownimg12.png\" title=\"\" width=\"334\" /> </div>\n</div>\n<p><img alt=\"\" height=\"58\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025markdownimg13.png\" title=\"\" width=\"364\" /></p>\n<p>the actual Markdown will simply contain a pointer to a file that\u2019s been created (in the <span class=\"computer-voice\">img</span> subdirectory) to store the image. This is particularly convenient if you\u2019re using the Wolfram Cloud, where the images are embedded in the Markdown file as data URLs:</p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"151\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08012025markdownimg14.png\" title=\"\" width=\"537\" /> </div>\n</div>\n<p><span></p>\n<h2 id=\"new-in-web-documentation-navigation-sidebar\">New in Web Documentation: Navigation Sidebar</h2>\n<p>Ever since Version 13, there\u2019s been a choice: download all 6.5 gigabytes of Wolfram Language documentation and use it locally, or just link to the web for documentation, without downloading anything. (By the way, if you want to download documentation, but haven\u2019t, you can always do it with the <span class=\"promptformatted\">Install Local Documentation</span> item in the <span class=\"promptformatted\">Help</span> menu.)</p>\n<p>In Version 14.3 there\u2019s a new feature in web documentation. Assuming you have your browser window set fairly wide, there\u2019s now a navigation sidebar on every function page:</p>\n<p><img alt=\"\" height=\"491\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025navigationimg1.png\" title=\"\" width=\"570\" /></p>\n<p>Want to quickly look up how that option works? Just click it in the sidebar, and the page will jump down to where that option is described, opening the relevant cells: </p>\n<p><img alt=\"\" height=\"491\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025navigationimg2.png\" title=\"\" width=\"570\" /></p>\n<p>Of course, in nearly 10,000 pages of rather diverse material, lots of complicated UX issues come up. Like with <tt>Plot</tt>, for example, the full list of options is very long, so by default it\u2019s elided with <img alt=\" \" height=\"21\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025navigationimg3.png\" title=\" \" width=\"19\" />:</p>\n<p><img alt=\"\" height=\"202\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025navigationimg4.png\" title=\"\" width=\"207\" /></p>\n<p>Click the <img alt=\" \" height=\"21\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025navigationimg5.png\" title=\" \" width=\"19\" /> and all the options open up\u2014with something like a cell bracket, that you can click to close it again:</p>\n<p><img alt=\"\" height=\"420\" src=\"https://content.wolfram.com/sites/43/2025/07/sw07312025navigationimg6.png\" title=\"\" width=\"275\" /></p>\n<h2 id=\"and-even-more\">And Even More&#8230;</h2>\n<p>Version 14.3 is a strong release, full of new capabilities. And the things we\u2019ve discussed so far aren\u2019t even everything. There\u2019s even more.</p>\n<p>In video, for example, we\u2019ve added <tt><a href=\"http://reference.wolfram.com/language/ref/VideoStabilize.html\">VideoStabilize</a></tt> to take out jitter in videos. We\u2019ve also enhanced <tt><a href=\"http://reference.wolfram.com/language/ref/VideoObjectTracking.html\">VideoObjectTracking</a></tt> to let you specify particular points in a video to track. And if you effectively want to track every point, we\u2019ve enhanced <tt><a href=\"http://reference.wolfram.com/language/ref/ImageDisplacements.html\">ImageDisplacements</a></tt> to work on videos.</p>\n<p>In images, we now import <a href=\"https://reference.wolfram.com/language/ref/format/AVIF.html\">.avif (AV1) files</a>.</p>\n<p>In speech synthesis, we\u2019re now able to always do everything locally. In <a href=\"https://writings.stephenwolfram.com/2025/01/launching-version-14-2-of-wolfram-language-mathematica-big-data-meets-computation-ai/\">Version 14.2</a> we were using operating-system-based speech synthesis on Mac and Windows. Now we\u2019ve got a collection of local neural net models that run consistently on any operating system\u2014and whenever we can\u2019t use operating-system-based speech synthesis, these are what we use.</p>\n<p>Version 14.3 also adds yet more polish to our already very well developed system for handling dates. In particular, we\u2019ve added new day types such as &#8220;<tt>NonHoliday</tt>&#8221; and &#8220;<tt>WeekendHoliday</tt>&#8221; , and we\u2019ve provided an operator form of <tt><a href=\"http://reference.wolfram.com/language/ref/DayMatchQ.html\">DayMatchQ</a></tt>\u2014all in service of making it easy (and, by the way, very efficient) to more finely select specific types of dates, notably now in <tt>Tabular</tt>. </p>\n<p>In a completely different area, Version 14.3 makes <tt><a href=\"http://reference.wolfram.com/language/ref/RandomTree.html\">RandomTree</a></tt> much more efficient, and also allows trees with a specified list of node labels, here the alphabet:</p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"277\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08042025moreimg1.png\" title=\"\" width=\"264\" /> </div>\n</div>\n<p><span></p>\n<p>Talking of efficiency, a small but useful enhancement to the world of <tt>DataStructure</tt> is that &#8220;<tt>BitVector</tt>&#8221; data structures now use multithreading, and the function <tt><a href=\"http://reference.wolfram.com/language/ref/Pick.html\">Pick</a></tt> can operate directly on such data structures\u2014including ones that are billions of bits long. </p>\n<p>Also, in computation with <tt><a href=\"http://reference.wolfram.com/language/ref/GPUArray.html\">GPUArray</a></tt> objects, we\u2019ve further improved the performance of core arithmetic operations, as well as adding GPU support for functions like <tt><a href=\"http://reference.wolfram.com/language/ref/UnitStep.html\">UnitStep</a></tt> and <tt><a href=\"http://reference.wolfram.com/language/ref/NumericalSort.html\">NumericalSort</a></tt>.</p>\n<p>In the continuing story of partial differential equations and PDE modeling, Version 14.3 includes a new option for solving axisymmetric fluid flow problems\u2014allowing one for example to compute this solution for flow through a pipe with a constriction:</p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"298\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08042025moreimg2.png\" title=\"\" width=\"303\" /> </div>\n</div>\n<p><span></p>\n<p>In biochemistry, we\u2019ve added connections to <a href=\"https://reference.wolfram.com/language/ref/service/UniProt.html\">UniProt</a> and the <a href=\"https://reference.wolfram.com/language/ref/service/AlphaFoldDatabase.html\">AlphaFold</a> database. And in chemistry we\u2019ve added various utility functions such as <tt><a href=\"https://reference.wolfram.com/language/ref/ChemicalFormulaQ.html\">ChemicalFormulaQ</a></tt> and <tt><a href=\"https://reference.wolfram.com/language/ref/PatternReactionQ.html\">PatternReactionQ</a></tt>.</p>\n<p>In the compiler we\u2019ve added <tt><a href=\"http://reference.wolfram.com/language/ref/CurrentCompiledFunctionData.html\">CurrentCompiledFunctionData</a></tt> to provide introspection on compiled functions, allowing you to determine, for example, what particular type the compiler assigned to the function you\u2019re currently in:</p>\n<div>\n<div class=\"wolfram-c2c-wrapper writtings-c2c_above\"> <img alt=\"\" height=\"139\" src=\"https://content.wolfram.com/sites/43/2025/08/sw08042025moreimg3.png\" title=\"\" width=\"481\" /> </div>\n</div>\n<p><span></p>\n<p>Also in the compiler we\u2019ve extended <tt><a href=\"http://reference.wolfram.com/language/ref/DownValuesFunction.html\">DownValuesFunction</a></tt> to let you \u201cwrap for compilation\u201d functions whose definitions involve constructs like <tt><a href=\"http://reference.wolfram.com/language/ref/Alternatives.html\">Alternatives</a></tt> and <tt><a href=\"http://reference.wolfram.com/language/ref/Except.html\">Except</a></tt>. (This is a further precursor to letting you just directly compile raw downvalue assignments.)</p>\n<p>In addition to all this, there are a large number of little tweaks and little pieces of polish that we\u2019ve added in Version 14.3, along with over a thousand bug fixes: all things that make the experience of using Wolfram Language just that much smoother and richer.  </p>\n<p>Version 14.3 for desktop systems is ready for download now. It\u2019s also now what you automatically get in the Wolfram Cloud.  So&#8230; start using it today! And experience the fruits of the latest round of our intense research and development efforts&#8230;</p>\n<p style=\"font-style: italic; color: #555;\">\n\n<div class=\"bottomstripe\">\n<a href=\"https://www.wolfram.com/download-center/\"><strong>Download your 14.3 now! \u00bb&nbsp;</strong> (It\u2019s already live in the Wolfram Cloud!)</a>\n</div>"
            ],
            "link": "https://writings.stephenwolfram.com/2025/08/new-features-everywhere-launching-version-14-3-of-wolfram-language-mathematica/",
            "publishedAt": "2025-08-05",
            "source": "Stephen Wolfram",
            "summary": "<span class=\"thumbnail\"><img alt=\"\" class=\"attachment-thumbnail size-thumbnail wp-post-image\" height=\"108\" src=\"https://content.wolfram.com/sites/43/2025/08/icon-14.3-v2.png\" width=\"128\" /></span>This Is a Big Release Going Dark: Dark Mode Arrives How Does It Relate to AI? Connecting with the Agentic World Just Put a Fit on That! Maps Become More Beautiful A Better Red: Introducing New Named Colors More Spiffing Up of Graphics Non-commutative Algebra Draw on That Surface: The Visual Annotation of Regions Curvature [&#8230;]",
            "title": "New Features Everywhere: Launching Version 14.3 of Wolfram Language & Mathematica"
        }
    ],
    "lookbackDays": 1,
    "publishDate": "2025-08-05"
}